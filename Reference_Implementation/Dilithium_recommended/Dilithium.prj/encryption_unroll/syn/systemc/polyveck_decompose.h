// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _polyveck_decompose_HH_
#define _polyveck_decompose_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct polyveck_decompose : public sc_module {
    // Port declarations 17
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<11> > v1_vec_coeffs_address0;
    sc_out< sc_logic > v1_vec_coeffs_ce0;
    sc_out< sc_logic > v1_vec_coeffs_we0;
    sc_out< sc_lv<32> > v1_vec_coeffs_d0;
    sc_out< sc_lv<11> > v0_vec_coeffs_address0;
    sc_out< sc_logic > v0_vec_coeffs_ce0;
    sc_out< sc_logic > v0_vec_coeffs_we0;
    sc_out< sc_lv<32> > v0_vec_coeffs_d0;
    sc_out< sc_lv<11> > v_vec_coeffs_address0;
    sc_out< sc_logic > v_vec_coeffs_ce0;
    sc_in< sc_lv<32> > v_vec_coeffs_q0;


    // Module declarations
    polyveck_decompose(sc_module_name name);
    SC_HAS_PROCESS(polyveck_decompose);

    ~polyveck_decompose();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<6> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<3> > i_25_fu_135_p2;
    sc_signal< sc_lv<3> > i_25_reg_361;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<12> > tmp_584_cast_fu_149_p1;
    sc_signal< sc_lv<12> > tmp_584_cast_reg_366;
    sc_signal< sc_lv<1> > tmp_fu_129_p2;
    sc_signal< sc_lv<9> > j_2_fu_159_p2;
    sc_signal< sc_lv<9> > j_2_reg_374;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<64> > tmp_585_cast_fu_174_p1;
    sc_signal< sc_lv<64> > tmp_585_cast_reg_379;
    sc_signal< sc_lv<1> > tmp_29_fu_153_p2;
    sc_signal< sc_lv<32> > v_vec_coeffs_load_reg_390;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<24> > t_15_fu_241_p2;
    sc_signal< sc_lv<24> > t_15_reg_395;
    sc_signal< sc_lv<4> > a_assign_3_fu_319_p2;
    sc_signal< sc_lv<4> > a_assign_3_reg_401;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<10> > tmp_287_i_reg_406;
    sc_signal< sc_lv<3> > i_reg_107;
    sc_signal< sc_lv<9> > j_reg_118;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<11> > tmp_s_fu_141_p3;
    sc_signal< sc_lv<12> > tmp_30_cast_fu_165_p1;
    sc_signal< sc_lv<12> > tmp_581_fu_169_p2;
    sc_signal< sc_lv<19> > t_fu_179_p1;
    sc_signal< sc_lv<13> > tmp_582_fu_187_p4;
    sc_signal< sc_lv<22> > tmp_i_fu_197_p3;
    sc_signal< sc_lv<23> > tmp_i_cast_fu_205_p1;
    sc_signal< sc_lv<23> > tmp1_fu_209_p2;
    sc_signal< sc_lv<24> > tmp1_cast_fu_215_p1;
    sc_signal< sc_lv<24> > t_cast_fu_183_p1;
    sc_signal< sc_lv<24> > t_14_fu_219_p2;
    sc_signal< sc_lv<1> > tmp_583_fu_225_p3;
    sc_signal< sc_lv<24> > tmp_285_i_cast_cast_fu_233_p3;
    sc_signal< sc_lv<32> > t_1_i_fu_250_p2;
    sc_signal< sc_lv<32> > t_22_cast_fu_247_p1;
    sc_signal< sc_lv<32> > a_assign_s_fu_255_p2;
    sc_signal< sc_lv<13> > tmp_584_fu_267_p4;
    sc_signal< sc_lv<32> > u_fu_261_p2;
    sc_signal< sc_lv<1> > tmp_585_fu_281_p3;
    sc_signal< sc_lv<1> > tmp2_fu_289_p2;
    sc_signal< sc_lv<14> > tmp2_cast_fu_295_p1;
    sc_signal< sc_lv<14> > tmp_286_i_cast_fu_277_p1;
    sc_signal< sc_lv<4> > tmp_34_fu_299_p4;
    sc_signal< sc_lv<4> > tmp_35_fu_309_p1;
    sc_signal< sc_lv<14> > a_assign_2_fu_313_p2;
    sc_signal< sc_lv<24> > tmp_288_i_fu_338_p2;
    sc_signal< sc_lv<24> > tmp_287_i_cast_fu_335_p1;
    sc_signal< sc_lv<24> > a0_write_assign_fu_343_p2;
    sc_signal< sc_lv<6> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<6> ap_ST_fsm_state1;
    static const sc_lv<6> ap_ST_fsm_state2;
    static const sc_lv<6> ap_ST_fsm_state3;
    static const sc_lv<6> ap_ST_fsm_state4;
    static const sc_lv<6> ap_ST_fsm_state5;
    static const sc_lv<6> ap_ST_fsm_state6;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<9> ap_const_lv9_0;
    static const sc_lv<3> ap_const_lv3_5;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<9> ap_const_lv9_100;
    static const sc_lv<9> ap_const_lv9_1;
    static const sc_lv<32> ap_const_lv32_13;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<23> ap_const_lv23_7C00FF;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<24> ap_const_lv24_7FE00;
    static const sc_lv<24> ap_const_lv24_0;
    static const sc_lv<32> ap_const_lv32_3FEFF;
    static const sc_lv<32> ap_const_lv32_FFFFFFFF;
    static const sc_lv<32> ap_const_lv32_16;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<24> ap_const_lv24_7BE102;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_a0_write_assign_fu_343_p2();
    void thread_a_assign_2_fu_313_p2();
    void thread_a_assign_3_fu_319_p2();
    void thread_a_assign_s_fu_255_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_i_25_fu_135_p2();
    void thread_j_2_fu_159_p2();
    void thread_t_14_fu_219_p2();
    void thread_t_15_fu_241_p2();
    void thread_t_1_i_fu_250_p2();
    void thread_t_22_cast_fu_247_p1();
    void thread_t_cast_fu_183_p1();
    void thread_t_fu_179_p1();
    void thread_tmp1_cast_fu_215_p1();
    void thread_tmp1_fu_209_p2();
    void thread_tmp2_cast_fu_295_p1();
    void thread_tmp2_fu_289_p2();
    void thread_tmp_285_i_cast_cast_fu_233_p3();
    void thread_tmp_286_i_cast_fu_277_p1();
    void thread_tmp_287_i_cast_fu_335_p1();
    void thread_tmp_288_i_fu_338_p2();
    void thread_tmp_29_fu_153_p2();
    void thread_tmp_30_cast_fu_165_p1();
    void thread_tmp_34_fu_299_p4();
    void thread_tmp_35_fu_309_p1();
    void thread_tmp_581_fu_169_p2();
    void thread_tmp_582_fu_187_p4();
    void thread_tmp_583_fu_225_p3();
    void thread_tmp_584_cast_fu_149_p1();
    void thread_tmp_584_fu_267_p4();
    void thread_tmp_585_cast_fu_174_p1();
    void thread_tmp_585_fu_281_p3();
    void thread_tmp_fu_129_p2();
    void thread_tmp_i_cast_fu_205_p1();
    void thread_tmp_i_fu_197_p3();
    void thread_tmp_s_fu_141_p3();
    void thread_u_fu_261_p2();
    void thread_v0_vec_coeffs_address0();
    void thread_v0_vec_coeffs_ce0();
    void thread_v0_vec_coeffs_d0();
    void thread_v0_vec_coeffs_we0();
    void thread_v1_vec_coeffs_address0();
    void thread_v1_vec_coeffs_ce0();
    void thread_v1_vec_coeffs_d0();
    void thread_v1_vec_coeffs_we0();
    void thread_v_vec_coeffs_address0();
    void thread_v_vec_coeffs_ce0();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
