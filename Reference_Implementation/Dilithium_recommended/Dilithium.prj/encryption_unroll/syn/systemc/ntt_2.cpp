// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "ntt_2.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic ntt_2::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic ntt_2::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<13> ntt_2::ap_ST_fsm_state1 = "1";
const sc_lv<13> ntt_2::ap_ST_fsm_state2 = "10";
const sc_lv<13> ntt_2::ap_ST_fsm_state3 = "100";
const sc_lv<13> ntt_2::ap_ST_fsm_state4 = "1000";
const sc_lv<13> ntt_2::ap_ST_fsm_state5 = "10000";
const sc_lv<13> ntt_2::ap_ST_fsm_state6 = "100000";
const sc_lv<13> ntt_2::ap_ST_fsm_state7 = "1000000";
const sc_lv<13> ntt_2::ap_ST_fsm_state8 = "10000000";
const sc_lv<13> ntt_2::ap_ST_fsm_state9 = "100000000";
const sc_lv<13> ntt_2::ap_ST_fsm_state10 = "1000000000";
const sc_lv<13> ntt_2::ap_ST_fsm_state11 = "10000000000";
const sc_lv<13> ntt_2::ap_ST_fsm_state12 = "100000000000";
const sc_lv<13> ntt_2::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<32> ntt_2::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> ntt_2::ap_const_lv32_1 = "1";
const sc_lv<32> ntt_2::ap_const_lv32_2 = "10";
const sc_lv<1> ntt_2::ap_const_lv1_1 = "1";
const sc_lv<1> ntt_2::ap_const_lv1_0 = "0";
const sc_lv<32> ntt_2::ap_const_lv32_3 = "11";
const sc_lv<32> ntt_2::ap_const_lv32_4 = "100";
const sc_lv<32> ntt_2::ap_const_lv32_5 = "101";
const sc_lv<32> ntt_2::ap_const_lv32_6 = "110";
const sc_lv<32> ntt_2::ap_const_lv32_7 = "111";
const sc_lv<32> ntt_2::ap_const_lv32_8 = "1000";
const sc_lv<32> ntt_2::ap_const_lv32_9 = "1001";
const sc_lv<29> ntt_2::ap_const_lv29_80 = "10000000";
const sc_lv<31> ntt_2::ap_const_lv31_0 = "0000000000000000000000000000000";
const sc_lv<32> ntt_2::ap_const_lv32_C = "1100";
const sc_lv<32> ntt_2::ap_const_lv32_A = "1010";
const sc_lv<32> ntt_2::ap_const_lv32_B = "1011";
const sc_lv<29> ntt_2::ap_const_lv29_0 = "00000000000000000000000000000";
const sc_lv<32> ntt_2::ap_const_lv32_1E = "11110";
const sc_lv<23> ntt_2::ap_const_lv23_0 = "00000000000000000000000";
const sc_lv<32> ntt_2::ap_const_lv32_1C = "11100";
const sc_lv<30> ntt_2::ap_const_lv30_1 = "1";
const sc_lv<32> ntt_2::ap_const_lv32_FC7FDFFF = "11111100011111111101111111111111";
const sc_lv<55> ntt_2::ap_const_lv55_7FE001 = "11111111110000000000001";
const sc_lv<32> ntt_2::ap_const_lv32_20 = "100000";
const sc_lv<32> ntt_2::ap_const_lv32_37 = "110111";
const sc_lv<24> ntt_2::ap_const_lv24_FFC002 = "111111111100000000000010";
const bool ntt_2::ap_const_boolean_1 = true;

ntt_2::ntt_2(sc_module_name name) : sc_module(name), mVcdFile(0) {
    zetas_U = new ntt_1_zetas("zetas_U");
    zetas_U->clk(ap_clk);
    zetas_U->reset(ap_rst);
    zetas_U->address0(zetas_address0);
    zetas_U->ce0(zetas_ce0);
    zetas_U->q0(zetas_q0);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_a_assign_cast1_fu_270_p1);
    sensitive << ( a_assign_reg_407 );

    SC_METHOD(thread_a_assign_fu_247_p0);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( a_assign_fu_247_p00 );

    SC_METHOD(thread_a_assign_fu_247_p00);
    sensitive << ( p_load_reg_402 );

    SC_METHOD(thread_a_assign_fu_247_p1);
    sensitive << ( tmp_122_cast_reg_374 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_a_assign_fu_247_p2);
    sensitive << ( a_assign_fu_247_p0 );
    sensitive << ( a_assign_fu_247_p1 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_fu_123_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_fu_123_p2 );

    SC_METHOD(thread_icmp_fu_143_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_612_fu_133_p4 );

    SC_METHOD(thread_j5_cast2_fu_206_p1);
    sensitive << ( j5_reg_105 );

    SC_METHOD(thread_j_5_fu_230_p2);
    sensitive << ( j5_reg_105 );

    SC_METHOD(thread_k_3_fu_171_p2);
    sensitive << ( k_fu_44 );

    SC_METHOD(thread_len_1_fu_167_p1);
    sensitive << ( tmp_614_fu_157_p4 );

    SC_METHOD(thread_len_cast_cast7_fu_119_p1);
    sensitive << ( len_reg_81 );

    SC_METHOD(thread_p_address0);
    sensitive << ( p_addr_reg_382 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( p_addr_1_reg_387 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( tmp_66_fu_220_p1 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_p_ce0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_p_d0);
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( tmp_69_fu_301_p2 );
    sensitive << ( tmp_70_fu_311_p2 );

    SC_METHOD(thread_p_we0);
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_start_cast_fu_198_p1);
    sensitive << ( start_fu_191_p3 );

    SC_METHOD(thread_start_fu_191_p3);
    sensitive << ( tmp_611_reg_335 );
    sensitive << ( tmp_613_fu_181_p1 );
    sensitive << ( tmp_63_fu_185_p2 );

    SC_METHOD(thread_t_18_fu_264_p1);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( t_18_fu_264_p10 );

    SC_METHOD(thread_t_18_fu_264_p10);
    sensitive << ( t_reg_417 );

    SC_METHOD(thread_t_18_fu_264_p2);
    sensitive << ( t_18_fu_264_p1 );

    SC_METHOD(thread_t_19_fu_276_p2);
    sensitive << ( t_26_cast_fu_273_p1 );
    sensitive << ( a_assign_cast1_fu_270_p1 );

    SC_METHOD(thread_t_20_fu_308_p1);
    sensitive << ( tmp_s_reg_427 );

    SC_METHOD(thread_t_26_cast_fu_273_p1);
    sensitive << ( t_18_reg_422 );

    SC_METHOD(thread_t_fu_256_p2);
    sensitive << ( tmp_615_reg_412 );

    SC_METHOD(thread_tmp_122_cast_fu_202_p1);
    sensitive << ( zetas_q0 );

    SC_METHOD(thread_tmp_129_cast_fu_297_p1);
    sensitive << ( tmp_68_fu_292_p2 );

    SC_METHOD(thread_tmp_611_fu_129_p1);
    sensitive << ( j_reg_93 );

    SC_METHOD(thread_tmp_612_fu_133_p4);
    sensitive << ( j_reg_93 );

    SC_METHOD(thread_tmp_613_fu_181_p1);
    sensitive << ( tmp_62_fu_176_p2 );

    SC_METHOD(thread_tmp_614_fu_157_p4);
    sensitive << ( len_reg_81 );

    SC_METHOD(thread_tmp_615_fu_252_p1);
    sensitive << ( a_assign_fu_247_p2 );

    SC_METHOD(thread_tmp_61_fu_152_p1);
    sensitive << ( k_fu_44 );

    SC_METHOD(thread_tmp_62_fu_176_p2);
    sensitive << ( len_cast_cast7_reg_325 );
    sensitive << ( j_reg_93 );

    SC_METHOD(thread_tmp_63_fu_185_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( j_reg_93 );
    sensitive << ( tmp_62_fu_176_p2 );

    SC_METHOD(thread_tmp_64_fu_210_p2);
    sensitive << ( tmp_613_reg_364 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( j5_reg_105 );

    SC_METHOD(thread_tmp_65_fu_215_p2);
    sensitive << ( len_cast_cast7_reg_325 );
    sensitive << ( j5_cast2_fu_206_p1 );

    SC_METHOD(thread_tmp_66_fu_220_p1);
    sensitive << ( tmp_65_fu_215_p2 );

    SC_METHOD(thread_tmp_67_fu_225_p1);
    sensitive << ( j5_reg_105 );

    SC_METHOD(thread_tmp_68_fu_292_p2);
    sensitive << ( tmp_s_reg_427 );

    SC_METHOD(thread_tmp_69_fu_301_p2);
    sensitive << ( p_q0 );
    sensitive << ( tmp_129_cast_fu_297_p1 );

    SC_METHOD(thread_tmp_70_fu_311_p2);
    sensitive << ( p_q0 );
    sensitive << ( t_20_fu_308_p1 );

    SC_METHOD(thread_tmp_71_fu_236_p2);
    sensitive << ( len_cast_cast7_reg_325 );
    sensitive << ( start_cast_reg_369 );

    SC_METHOD(thread_tmp_fu_123_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( len_reg_81 );

    SC_METHOD(thread_zetas_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_61_fu_152_p1 );

    SC_METHOD(thread_zetas_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_fu_143_p2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_64_fu_210_p2 );
    sensitive << ( tmp_fu_123_p2 );

    ap_CS_fsm = "0000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "ntt_2_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, p_address0, "(port)p_address0");
    sc_trace(mVcdFile, p_ce0, "(port)p_ce0");
    sc_trace(mVcdFile, p_we0, "(port)p_we0");
    sc_trace(mVcdFile, p_d0, "(port)p_d0");
    sc_trace(mVcdFile, p_q0, "(port)p_q0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, zetas_address0, "zetas_address0");
    sc_trace(mVcdFile, zetas_ce0, "zetas_ce0");
    sc_trace(mVcdFile, zetas_q0, "zetas_q0");
    sc_trace(mVcdFile, len_cast_cast7_fu_119_p1, "len_cast_cast7_fu_119_p1");
    sc_trace(mVcdFile, len_cast_cast7_reg_325, "len_cast_cast7_reg_325");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, tmp_611_fu_129_p1, "tmp_611_fu_129_p1");
    sc_trace(mVcdFile, tmp_611_reg_335, "tmp_611_reg_335");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, icmp_fu_143_p2, "icmp_fu_143_p2");
    sc_trace(mVcdFile, len_1_fu_167_p1, "len_1_fu_167_p1");
    sc_trace(mVcdFile, k_3_fu_171_p2, "k_3_fu_171_p2");
    sc_trace(mVcdFile, k_3_reg_359, "k_3_reg_359");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, tmp_613_fu_181_p1, "tmp_613_fu_181_p1");
    sc_trace(mVcdFile, tmp_613_reg_364, "tmp_613_reg_364");
    sc_trace(mVcdFile, start_cast_fu_198_p1, "start_cast_fu_198_p1");
    sc_trace(mVcdFile, start_cast_reg_369, "start_cast_reg_369");
    sc_trace(mVcdFile, tmp_122_cast_fu_202_p1, "tmp_122_cast_fu_202_p1");
    sc_trace(mVcdFile, tmp_122_cast_reg_374, "tmp_122_cast_reg_374");
    sc_trace(mVcdFile, p_addr_reg_382, "p_addr_reg_382");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, tmp_64_fu_210_p2, "tmp_64_fu_210_p2");
    sc_trace(mVcdFile, p_addr_1_reg_387, "p_addr_1_reg_387");
    sc_trace(mVcdFile, j_5_fu_230_p2, "j_5_fu_230_p2");
    sc_trace(mVcdFile, j_5_reg_392, "j_5_reg_392");
    sc_trace(mVcdFile, tmp_71_fu_236_p2, "tmp_71_fu_236_p2");
    sc_trace(mVcdFile, p_load_reg_402, "p_load_reg_402");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, a_assign_fu_247_p2, "a_assign_fu_247_p2");
    sc_trace(mVcdFile, a_assign_reg_407, "a_assign_reg_407");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, tmp_615_fu_252_p1, "tmp_615_fu_252_p1");
    sc_trace(mVcdFile, tmp_615_reg_412, "tmp_615_reg_412");
    sc_trace(mVcdFile, t_fu_256_p2, "t_fu_256_p2");
    sc_trace(mVcdFile, t_reg_417, "t_reg_417");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, t_18_fu_264_p2, "t_18_fu_264_p2");
    sc_trace(mVcdFile, t_18_reg_422, "t_18_reg_422");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, tmp_s_reg_427, "tmp_s_reg_427");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, len_reg_81, "len_reg_81");
    sc_trace(mVcdFile, j_reg_93, "j_reg_93");
    sc_trace(mVcdFile, tmp_fu_123_p2, "tmp_fu_123_p2");
    sc_trace(mVcdFile, j5_reg_105, "j5_reg_105");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, tmp_61_fu_152_p1, "tmp_61_fu_152_p1");
    sc_trace(mVcdFile, tmp_66_fu_220_p1, "tmp_66_fu_220_p1");
    sc_trace(mVcdFile, tmp_67_fu_225_p1, "tmp_67_fu_225_p1");
    sc_trace(mVcdFile, k_fu_44, "k_fu_44");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, tmp_69_fu_301_p2, "tmp_69_fu_301_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, tmp_70_fu_311_p2, "tmp_70_fu_311_p2");
    sc_trace(mVcdFile, tmp_612_fu_133_p4, "tmp_612_fu_133_p4");
    sc_trace(mVcdFile, tmp_614_fu_157_p4, "tmp_614_fu_157_p4");
    sc_trace(mVcdFile, tmp_62_fu_176_p2, "tmp_62_fu_176_p2");
    sc_trace(mVcdFile, tmp_63_fu_185_p2, "tmp_63_fu_185_p2");
    sc_trace(mVcdFile, start_fu_191_p3, "start_fu_191_p3");
    sc_trace(mVcdFile, j5_cast2_fu_206_p1, "j5_cast2_fu_206_p1");
    sc_trace(mVcdFile, tmp_65_fu_215_p2, "tmp_65_fu_215_p2");
    sc_trace(mVcdFile, a_assign_fu_247_p0, "a_assign_fu_247_p0");
    sc_trace(mVcdFile, a_assign_fu_247_p1, "a_assign_fu_247_p1");
    sc_trace(mVcdFile, t_18_fu_264_p1, "t_18_fu_264_p1");
    sc_trace(mVcdFile, t_26_cast_fu_273_p1, "t_26_cast_fu_273_p1");
    sc_trace(mVcdFile, a_assign_cast1_fu_270_p1, "a_assign_cast1_fu_270_p1");
    sc_trace(mVcdFile, t_19_fu_276_p2, "t_19_fu_276_p2");
    sc_trace(mVcdFile, tmp_68_fu_292_p2, "tmp_68_fu_292_p2");
    sc_trace(mVcdFile, tmp_129_cast_fu_297_p1, "tmp_129_cast_fu_297_p1");
    sc_trace(mVcdFile, t_20_fu_308_p1, "t_20_fu_308_p1");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, a_assign_fu_247_p00, "a_assign_fu_247_p00");
    sc_trace(mVcdFile, t_18_fu_264_p10, "t_18_fu_264_p10");
#endif

    }
}

ntt_2::~ntt_2() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete zetas_U;
}

void ntt_2::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        j5_reg_105 = j_5_reg_392.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        j5_reg_105 = tmp_611_reg_335.read();
    }
    if ((esl_seteq<1,1,1>(tmp_fu_123_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        j_reg_93 = ap_const_lv31_0;
    } else if ((esl_seteq<1,1,1>(tmp_64_fu_210_p2.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()))) {
        j_reg_93 = tmp_71_fu_236_p2.read();
    }
    if ((esl_seteq<1,1,1>(tmp_64_fu_210_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()))) {
        k_fu_44 = k_3_reg_359.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        k_fu_44 = ap_const_lv32_1;
    }
    if ((esl_seteq<1,1,1>(icmp_fu_143_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        len_reg_81 = len_1_fu_167_p1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        len_reg_81 = ap_const_lv29_80;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        a_assign_reg_407 = a_assign_fu_247_p2.read();
        tmp_615_reg_412 = tmp_615_fu_252_p1.read();
    }
    if ((esl_seteq<1,1,1>(tmp_64_fu_210_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()))) {
        j_5_reg_392 = j_5_fu_230_p2.read();
        p_addr_1_reg_387 =  (sc_lv<8>) (tmp_67_fu_225_p1.read());
        p_addr_reg_382 =  (sc_lv<8>) (tmp_66_fu_220_p1.read());
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        k_3_reg_359 = k_3_fu_171_p2.read();
        start_cast_reg_369 = start_cast_fu_198_p1.read();
        tmp_122_cast_reg_374 = tmp_122_cast_fu_202_p1.read();
        tmp_613_reg_364 = tmp_613_fu_181_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        len_cast_cast7_reg_325 = len_cast_cast7_fu_119_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        p_load_reg_402 = p_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        t_18_reg_422 = t_18_fu_264_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        t_reg_417 = t_fu_256_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        tmp_611_reg_335 = tmp_611_fu_129_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        tmp_s_reg_427 = t_19_fu_276_p2.read().range(55, 32);
    }
}

void ntt_2::thread_a_assign_cast1_fu_270_p1() {
    a_assign_cast1_fu_270_p1 = esl_zext<56,55>(a_assign_reg_407.read());
}

void ntt_2::thread_a_assign_fu_247_p0() {
    a_assign_fu_247_p0 =  (sc_lv<32>) (a_assign_fu_247_p00.read());
}

void ntt_2::thread_a_assign_fu_247_p00() {
    a_assign_fu_247_p00 = esl_zext<55,32>(p_load_reg_402.read());
}

void ntt_2::thread_a_assign_fu_247_p1() {
    a_assign_fu_247_p1 =  (sc_lv<23>) (tmp_122_cast_reg_374.read());
}

void ntt_2::thread_a_assign_fu_247_p2() {
    a_assign_fu_247_p2 = (!a_assign_fu_247_p0.read().is_01() || !a_assign_fu_247_p1.read().is_01())? sc_lv<55>(): sc_biguint<32>(a_assign_fu_247_p0.read()) * sc_biguint<23>(a_assign_fu_247_p1.read());
}

void ntt_2::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void ntt_2::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void ntt_2::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void ntt_2::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void ntt_2::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void ntt_2::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void ntt_2::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void ntt_2::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void ntt_2::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void ntt_2::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void ntt_2::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void ntt_2::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void ntt_2::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void ntt_2::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(tmp_fu_123_p2.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void ntt_2::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void ntt_2::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(tmp_fu_123_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void ntt_2::thread_icmp_fu_143_p2() {
    icmp_fu_143_p2 = (!tmp_612_fu_133_p4.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_612_fu_133_p4.read() == ap_const_lv23_0);
}

void ntt_2::thread_j5_cast2_fu_206_p1() {
    j5_cast2_fu_206_p1 = esl_zext<31,30>(j5_reg_105.read());
}

void ntt_2::thread_j_5_fu_230_p2() {
    j_5_fu_230_p2 = (!ap_const_lv30_1.is_01() || !j5_reg_105.read().is_01())? sc_lv<30>(): (sc_biguint<30>(ap_const_lv30_1) + sc_biguint<30>(j5_reg_105.read()));
}

void ntt_2::thread_k_3_fu_171_p2() {
    k_3_fu_171_p2 = (!ap_const_lv32_1.is_01() || !k_fu_44.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_1) + sc_biguint<32>(k_fu_44.read()));
}

void ntt_2::thread_len_1_fu_167_p1() {
    len_1_fu_167_p1 = esl_zext<29,28>(tmp_614_fu_157_p4.read());
}

void ntt_2::thread_len_cast_cast7_fu_119_p1() {
    len_cast_cast7_fu_119_p1 = esl_zext<31,29>(len_reg_81.read());
}

void ntt_2::thread_p_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        p_address0 = p_addr_reg_382.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()))) {
        p_address0 = p_addr_1_reg_387.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        p_address0 =  (sc_lv<8>) (tmp_66_fu_220_p1.read());
    } else {
        p_address0 = "XXXXXXXX";
    }
}

void ntt_2::thread_p_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()))) {
        p_ce0 = ap_const_logic_1;
    } else {
        p_ce0 = ap_const_logic_0;
    }
}

void ntt_2::thread_p_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        p_d0 = tmp_70_fu_311_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        p_d0 = tmp_69_fu_301_p2.read();
    } else {
        p_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void ntt_2::thread_p_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()))) {
        p_we0 = ap_const_logic_1;
    } else {
        p_we0 = ap_const_logic_0;
    }
}

void ntt_2::thread_start_cast_fu_198_p1() {
    start_cast_fu_198_p1 = esl_zext<31,30>(start_fu_191_p3.read());
}

void ntt_2::thread_start_fu_191_p3() {
    start_fu_191_p3 = (!tmp_63_fu_185_p2.read()[0].is_01())? sc_lv<30>(): ((tmp_63_fu_185_p2.read()[0].to_bool())? tmp_611_reg_335.read(): tmp_613_fu_181_p1.read());
}

void ntt_2::thread_t_18_fu_264_p1() {
    t_18_fu_264_p1 =  (sc_lv<32>) (t_18_fu_264_p10.read());
}

void ntt_2::thread_t_18_fu_264_p10() {
    t_18_fu_264_p10 = esl_zext<55,32>(t_reg_417.read());
}

void ntt_2::thread_t_18_fu_264_p2() {
    t_18_fu_264_p2 = (!ap_const_lv55_7FE001.is_01() || !t_18_fu_264_p1.read().is_01())? sc_lv<55>(): sc_biguint<55>(ap_const_lv55_7FE001) * sc_biguint<32>(t_18_fu_264_p1.read());
}

void ntt_2::thread_t_19_fu_276_p2() {
    t_19_fu_276_p2 = (!t_26_cast_fu_273_p1.read().is_01() || !a_assign_cast1_fu_270_p1.read().is_01())? sc_lv<56>(): (sc_biguint<56>(t_26_cast_fu_273_p1.read()) + sc_biguint<56>(a_assign_cast1_fu_270_p1.read()));
}

void ntt_2::thread_t_20_fu_308_p1() {
    t_20_fu_308_p1 = esl_zext<32,24>(tmp_s_reg_427.read());
}

void ntt_2::thread_t_26_cast_fu_273_p1() {
    t_26_cast_fu_273_p1 = esl_zext<56,55>(t_18_reg_422.read());
}

void ntt_2::thread_t_fu_256_p2() {
    t_fu_256_p2 = (!ap_const_lv32_FC7FDFFF.is_01() || !tmp_615_reg_412.read().is_01())? sc_lv<32>(): sc_bigint<32>(ap_const_lv32_FC7FDFFF) * sc_bigint<32>(tmp_615_reg_412.read());
}

void ntt_2::thread_tmp_122_cast_fu_202_p1() {
    tmp_122_cast_fu_202_p1 = esl_zext<55,23>(zetas_q0.read());
}

void ntt_2::thread_tmp_129_cast_fu_297_p1() {
    tmp_129_cast_fu_297_p1 = esl_zext<32,24>(tmp_68_fu_292_p2.read());
}

void ntt_2::thread_tmp_611_fu_129_p1() {
    tmp_611_fu_129_p1 = j_reg_93.read().range(30-1, 0);
}

void ntt_2::thread_tmp_612_fu_133_p4() {
    tmp_612_fu_133_p4 = j_reg_93.read().range(30, 8);
}

void ntt_2::thread_tmp_613_fu_181_p1() {
    tmp_613_fu_181_p1 = tmp_62_fu_176_p2.read().range(30-1, 0);
}

void ntt_2::thread_tmp_614_fu_157_p4() {
    tmp_614_fu_157_p4 = len_reg_81.read().range(28, 1);
}

void ntt_2::thread_tmp_615_fu_252_p1() {
    tmp_615_fu_252_p1 = a_assign_fu_247_p2.read().range(32-1, 0);
}

void ntt_2::thread_tmp_61_fu_152_p1() {
    tmp_61_fu_152_p1 = esl_zext<64,32>(k_fu_44.read());
}

void ntt_2::thread_tmp_62_fu_176_p2() {
    tmp_62_fu_176_p2 = (!len_cast_cast7_reg_325.read().is_01() || !j_reg_93.read().is_01())? sc_lv<31>(): (sc_biguint<31>(len_cast_cast7_reg_325.read()) + sc_biguint<31>(j_reg_93.read()));
}

void ntt_2::thread_tmp_63_fu_185_p2() {
    tmp_63_fu_185_p2 = (!j_reg_93.read().is_01() || !tmp_62_fu_176_p2.read().is_01())? sc_lv<1>(): (sc_biguint<31>(j_reg_93.read()) > sc_biguint<31>(tmp_62_fu_176_p2.read()));
}

void ntt_2::thread_tmp_64_fu_210_p2() {
    tmp_64_fu_210_p2 = (!j5_reg_105.read().is_01() || !tmp_613_reg_364.read().is_01())? sc_lv<1>(): (sc_biguint<30>(j5_reg_105.read()) < sc_biguint<30>(tmp_613_reg_364.read()));
}

void ntt_2::thread_tmp_65_fu_215_p2() {
    tmp_65_fu_215_p2 = (!j5_cast2_fu_206_p1.read().is_01() || !len_cast_cast7_reg_325.read().is_01())? sc_lv<31>(): (sc_biguint<31>(j5_cast2_fu_206_p1.read()) + sc_biguint<31>(len_cast_cast7_reg_325.read()));
}

void ntt_2::thread_tmp_66_fu_220_p1() {
    tmp_66_fu_220_p1 = esl_zext<64,31>(tmp_65_fu_215_p2.read());
}

void ntt_2::thread_tmp_67_fu_225_p1() {
    tmp_67_fu_225_p1 = esl_zext<64,30>(j5_reg_105.read());
}

void ntt_2::thread_tmp_68_fu_292_p2() {
    tmp_68_fu_292_p2 = (!ap_const_lv24_FFC002.is_01() || !tmp_s_reg_427.read().is_01())? sc_lv<24>(): (sc_bigint<24>(ap_const_lv24_FFC002) - sc_biguint<24>(tmp_s_reg_427.read()));
}

void ntt_2::thread_tmp_69_fu_301_p2() {
    tmp_69_fu_301_p2 = (!p_q0.read().is_01() || !tmp_129_cast_fu_297_p1.read().is_01())? sc_lv<32>(): (sc_biguint<32>(p_q0.read()) + sc_biguint<32>(tmp_129_cast_fu_297_p1.read()));
}

void ntt_2::thread_tmp_70_fu_311_p2() {
    tmp_70_fu_311_p2 = (!p_q0.read().is_01() || !t_20_fu_308_p1.read().is_01())? sc_lv<32>(): (sc_biguint<32>(p_q0.read()) + sc_biguint<32>(t_20_fu_308_p1.read()));
}

void ntt_2::thread_tmp_71_fu_236_p2() {
    tmp_71_fu_236_p2 = (!len_cast_cast7_reg_325.read().is_01() || !start_cast_reg_369.read().is_01())? sc_lv<31>(): (sc_biguint<31>(len_cast_cast7_reg_325.read()) + sc_biguint<31>(start_cast_reg_369.read()));
}

void ntt_2::thread_tmp_fu_123_p2() {
    tmp_fu_123_p2 = (!len_reg_81.read().is_01() || !ap_const_lv29_0.is_01())? sc_lv<1>(): sc_lv<1>(len_reg_81.read() == ap_const_lv29_0);
}

void ntt_2::thread_zetas_address0() {
    zetas_address0 =  (sc_lv<8>) (tmp_61_fu_152_p1.read());
}

void ntt_2::thread_zetas_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        zetas_ce0 = ap_const_logic_1;
    } else {
        zetas_ce0 = ap_const_logic_0;
    }
}

void ntt_2::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(tmp_fu_123_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(icmp_fu_143_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(tmp_64_fu_210_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<13>) ("XXXXXXXXXXXXX");
            break;
    }
}

}

