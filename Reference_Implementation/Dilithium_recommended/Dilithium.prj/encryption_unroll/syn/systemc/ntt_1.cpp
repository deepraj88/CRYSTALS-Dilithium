// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "ntt_1.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic ntt_1::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic ntt_1::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<13> ntt_1::ap_ST_fsm_state1 = "1";
const sc_lv<13> ntt_1::ap_ST_fsm_state2 = "10";
const sc_lv<13> ntt_1::ap_ST_fsm_state3 = "100";
const sc_lv<13> ntt_1::ap_ST_fsm_state4 = "1000";
const sc_lv<13> ntt_1::ap_ST_fsm_state5 = "10000";
const sc_lv<13> ntt_1::ap_ST_fsm_state6 = "100000";
const sc_lv<13> ntt_1::ap_ST_fsm_state7 = "1000000";
const sc_lv<13> ntt_1::ap_ST_fsm_state8 = "10000000";
const sc_lv<13> ntt_1::ap_ST_fsm_state9 = "100000000";
const sc_lv<13> ntt_1::ap_ST_fsm_state10 = "1000000000";
const sc_lv<13> ntt_1::ap_ST_fsm_state11 = "10000000000";
const sc_lv<13> ntt_1::ap_ST_fsm_state12 = "100000000000";
const sc_lv<13> ntt_1::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<32> ntt_1::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> ntt_1::ap_const_lv32_1 = "1";
const sc_lv<32> ntt_1::ap_const_lv32_2 = "10";
const sc_lv<1> ntt_1::ap_const_lv1_1 = "1";
const sc_lv<1> ntt_1::ap_const_lv1_0 = "0";
const sc_lv<32> ntt_1::ap_const_lv32_3 = "11";
const sc_lv<32> ntt_1::ap_const_lv32_4 = "100";
const sc_lv<32> ntt_1::ap_const_lv32_5 = "101";
const sc_lv<32> ntt_1::ap_const_lv32_6 = "110";
const sc_lv<32> ntt_1::ap_const_lv32_7 = "111";
const sc_lv<32> ntt_1::ap_const_lv32_8 = "1000";
const sc_lv<32> ntt_1::ap_const_lv32_9 = "1001";
const sc_lv<29> ntt_1::ap_const_lv29_80 = "10000000";
const sc_lv<31> ntt_1::ap_const_lv31_0 = "0000000000000000000000000000000";
const sc_lv<32> ntt_1::ap_const_lv32_C = "1100";
const sc_lv<32> ntt_1::ap_const_lv32_A = "1010";
const sc_lv<32> ntt_1::ap_const_lv32_B = "1011";
const sc_lv<8> ntt_1::ap_const_lv8_0 = "00000000";
const sc_lv<29> ntt_1::ap_const_lv29_0 = "00000000000000000000000000000";
const sc_lv<32> ntt_1::ap_const_lv32_1E = "11110";
const sc_lv<23> ntt_1::ap_const_lv23_0 = "00000000000000000000000";
const sc_lv<32> ntt_1::ap_const_lv32_1C = "11100";
const sc_lv<30> ntt_1::ap_const_lv30_1 = "1";
const sc_lv<32> ntt_1::ap_const_lv32_FC7FDFFF = "11111100011111111101111111111111";
const sc_lv<55> ntt_1::ap_const_lv55_7FE001 = "11111111110000000000001";
const sc_lv<32> ntt_1::ap_const_lv32_20 = "100000";
const sc_lv<32> ntt_1::ap_const_lv32_37 = "110111";
const sc_lv<24> ntt_1::ap_const_lv24_FFC002 = "111111111100000000000010";
const bool ntt_1::ap_const_boolean_1 = true;

ntt_1::ntt_1(sc_module_name name) : sc_module(name), mVcdFile(0) {
    zetas_U = new ntt_1_zetas("zetas_U");
    zetas_U->clk(ap_clk);
    zetas_U->reset(ap_rst);
    zetas_U->address0(zetas_address0);
    zetas_U->ce0(zetas_ce0);
    zetas_U->q0(zetas_q0);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_a_assign_cast1_fu_315_p1);
    sensitive << ( a_assign_reg_457 );

    SC_METHOD(thread_a_assign_fu_292_p0);
    sensitive << ( tmp_136_cast_reg_424 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_a_assign_fu_292_p1);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( a_assign_fu_292_p10 );

    SC_METHOD(thread_a_assign_fu_292_p10);
    sensitive << ( p_load_reg_452 );

    SC_METHOD(thread_a_assign_fu_292_p2);
    sensitive << ( a_assign_fu_292_p0 );
    sensitive << ( a_assign_fu_292_p1 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_fu_149_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_fu_149_p2 );

    SC_METHOD(thread_icmp_fu_169_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_617_fu_159_p4 );

    SC_METHOD(thread_j_5_fu_275_p2);
    sensitive << ( j5_reg_119 );

    SC_METHOD(thread_k_4_fu_197_p2);
    sensitive << ( k_fu_52 );

    SC_METHOD(thread_len_1_fu_193_p1);
    sensitive << ( tmp_619_fu_183_p4 );

    SC_METHOD(thread_len_cast_cast7_fu_145_p1);
    sensitive << ( len_reg_95 );

    SC_METHOD(thread_p_address0);
    sensitive << ( p_addr11_reg_432 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( p_addr_reg_437 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( tmp_609_cast_fu_256_p1 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_p_ce0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_p_d0);
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( tmp_80_fu_346_p2 );
    sensitive << ( tmp_81_fu_356_p2 );

    SC_METHOD(thread_p_we0);
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_start_cast_fu_224_p1);
    sensitive << ( start_fu_217_p3 );

    SC_METHOD(thread_start_fu_217_p3);
    sensitive << ( tmp_616_reg_385 );
    sensitive << ( tmp_618_fu_207_p1 );
    sensitive << ( tmp_74_fu_211_p2 );

    SC_METHOD(thread_t_21_fu_309_p1);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( t_21_fu_309_p10 );

    SC_METHOD(thread_t_21_fu_309_p10);
    sensitive << ( t_reg_467 );

    SC_METHOD(thread_t_21_fu_309_p2);
    sensitive << ( t_21_fu_309_p1 );

    SC_METHOD(thread_t_22_fu_321_p2);
    sensitive << ( a_assign_cast1_fu_315_p1 );
    sensitive << ( t_30_cast_fu_318_p1 );

    SC_METHOD(thread_t_23_fu_353_p1);
    sensitive << ( tmp_602_reg_477 );

    SC_METHOD(thread_t_30_cast_fu_318_p1);
    sensitive << ( t_21_reg_472 );

    SC_METHOD(thread_t_fu_301_p2);
    sensitive << ( tmp_623_reg_462 );

    SC_METHOD(thread_tmp_136_cast_fu_228_p1);
    sensitive << ( zetas_q0 );

    SC_METHOD(thread_tmp_143_cast_fu_342_p1);
    sensitive << ( tmp_79_fu_337_p2 );

    SC_METHOD(thread_tmp_601_fu_251_p2);
    sensitive << ( tmp_607_cast_reg_370 );
    sensitive << ( tmp_622_fu_245_p2 );

    SC_METHOD(thread_tmp_603_fu_265_p2);
    sensitive << ( tmp_607_cast_reg_370 );
    sensitive << ( tmp_624_fu_261_p1 );

    SC_METHOD(thread_tmp_607_cast_fu_136_p1);
    sensitive << ( tmp_s_fu_128_p3 );

    SC_METHOD(thread_tmp_609_cast_fu_256_p1);
    sensitive << ( tmp_601_fu_251_p2 );

    SC_METHOD(thread_tmp_611_cast_fu_270_p1);
    sensitive << ( tmp_603_fu_265_p2 );

    SC_METHOD(thread_tmp_616_fu_155_p1);
    sensitive << ( j_reg_107 );

    SC_METHOD(thread_tmp_617_fu_159_p4);
    sensitive << ( j_reg_107 );

    SC_METHOD(thread_tmp_618_fu_207_p1);
    sensitive << ( tmp_73_fu_202_p2 );

    SC_METHOD(thread_tmp_619_fu_183_p4);
    sensitive << ( len_reg_95 );

    SC_METHOD(thread_tmp_620_fu_237_p1);
    sensitive << ( j5_reg_119 );

    SC_METHOD(thread_tmp_621_fu_241_p1);
    sensitive << ( len_reg_95 );

    SC_METHOD(thread_tmp_622_fu_245_p2);
    sensitive << ( tmp_621_fu_241_p1 );
    sensitive << ( tmp_620_fu_237_p1 );

    SC_METHOD(thread_tmp_623_fu_297_p1);
    sensitive << ( a_assign_fu_292_p2 );

    SC_METHOD(thread_tmp_624_fu_261_p1);
    sensitive << ( j5_reg_119 );

    SC_METHOD(thread_tmp_72_fu_178_p1);
    sensitive << ( k_fu_52 );

    SC_METHOD(thread_tmp_73_fu_202_p2);
    sensitive << ( len_cast_cast7_reg_376 );
    sensitive << ( j_reg_107 );

    SC_METHOD(thread_tmp_74_fu_211_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( j_reg_107 );
    sensitive << ( tmp_73_fu_202_p2 );

    SC_METHOD(thread_tmp_75_fu_232_p2);
    sensitive << ( tmp_618_reg_414 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( j5_reg_119 );

    SC_METHOD(thread_tmp_79_fu_337_p2);
    sensitive << ( tmp_602_reg_477 );

    SC_METHOD(thread_tmp_80_fu_346_p2);
    sensitive << ( p_q0 );
    sensitive << ( tmp_143_cast_fu_342_p1 );

    SC_METHOD(thread_tmp_81_fu_356_p2);
    sensitive << ( p_q0 );
    sensitive << ( t_23_fu_353_p1 );

    SC_METHOD(thread_tmp_82_fu_281_p2);
    sensitive << ( len_cast_cast7_reg_376 );
    sensitive << ( start_cast_reg_419 );

    SC_METHOD(thread_tmp_fu_149_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( len_reg_95 );

    SC_METHOD(thread_tmp_s_fu_128_p3);
    sensitive << ( p_offset );

    SC_METHOD(thread_zetas_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_72_fu_178_p1 );

    SC_METHOD(thread_zetas_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_fu_169_p2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_75_fu_232_p2 );
    sensitive << ( tmp_fu_149_p2 );

    ap_CS_fsm = "0000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "ntt_1_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, p_address0, "(port)p_address0");
    sc_trace(mVcdFile, p_ce0, "(port)p_ce0");
    sc_trace(mVcdFile, p_we0, "(port)p_we0");
    sc_trace(mVcdFile, p_d0, "(port)p_d0");
    sc_trace(mVcdFile, p_q0, "(port)p_q0");
    sc_trace(mVcdFile, p_offset, "(port)p_offset");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, zetas_address0, "zetas_address0");
    sc_trace(mVcdFile, zetas_ce0, "zetas_ce0");
    sc_trace(mVcdFile, zetas_q0, "zetas_q0");
    sc_trace(mVcdFile, tmp_607_cast_fu_136_p1, "tmp_607_cast_fu_136_p1");
    sc_trace(mVcdFile, tmp_607_cast_reg_370, "tmp_607_cast_reg_370");
    sc_trace(mVcdFile, len_cast_cast7_fu_145_p1, "len_cast_cast7_fu_145_p1");
    sc_trace(mVcdFile, len_cast_cast7_reg_376, "len_cast_cast7_reg_376");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, tmp_616_fu_155_p1, "tmp_616_fu_155_p1");
    sc_trace(mVcdFile, tmp_616_reg_385, "tmp_616_reg_385");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, icmp_fu_169_p2, "icmp_fu_169_p2");
    sc_trace(mVcdFile, len_1_fu_193_p1, "len_1_fu_193_p1");
    sc_trace(mVcdFile, k_4_fu_197_p2, "k_4_fu_197_p2");
    sc_trace(mVcdFile, k_4_reg_409, "k_4_reg_409");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, tmp_618_fu_207_p1, "tmp_618_fu_207_p1");
    sc_trace(mVcdFile, tmp_618_reg_414, "tmp_618_reg_414");
    sc_trace(mVcdFile, start_cast_fu_224_p1, "start_cast_fu_224_p1");
    sc_trace(mVcdFile, start_cast_reg_419, "start_cast_reg_419");
    sc_trace(mVcdFile, tmp_136_cast_fu_228_p1, "tmp_136_cast_fu_228_p1");
    sc_trace(mVcdFile, tmp_136_cast_reg_424, "tmp_136_cast_reg_424");
    sc_trace(mVcdFile, p_addr11_reg_432, "p_addr11_reg_432");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, tmp_75_fu_232_p2, "tmp_75_fu_232_p2");
    sc_trace(mVcdFile, p_addr_reg_437, "p_addr_reg_437");
    sc_trace(mVcdFile, j_5_fu_275_p2, "j_5_fu_275_p2");
    sc_trace(mVcdFile, j_5_reg_442, "j_5_reg_442");
    sc_trace(mVcdFile, tmp_82_fu_281_p2, "tmp_82_fu_281_p2");
    sc_trace(mVcdFile, p_load_reg_452, "p_load_reg_452");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, a_assign_fu_292_p2, "a_assign_fu_292_p2");
    sc_trace(mVcdFile, a_assign_reg_457, "a_assign_reg_457");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, tmp_623_fu_297_p1, "tmp_623_fu_297_p1");
    sc_trace(mVcdFile, tmp_623_reg_462, "tmp_623_reg_462");
    sc_trace(mVcdFile, t_fu_301_p2, "t_fu_301_p2");
    sc_trace(mVcdFile, t_reg_467, "t_reg_467");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, t_21_fu_309_p2, "t_21_fu_309_p2");
    sc_trace(mVcdFile, t_21_reg_472, "t_21_reg_472");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, tmp_602_reg_477, "tmp_602_reg_477");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, len_reg_95, "len_reg_95");
    sc_trace(mVcdFile, j_reg_107, "j_reg_107");
    sc_trace(mVcdFile, tmp_fu_149_p2, "tmp_fu_149_p2");
    sc_trace(mVcdFile, j5_reg_119, "j5_reg_119");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, tmp_72_fu_178_p1, "tmp_72_fu_178_p1");
    sc_trace(mVcdFile, tmp_609_cast_fu_256_p1, "tmp_609_cast_fu_256_p1");
    sc_trace(mVcdFile, tmp_611_cast_fu_270_p1, "tmp_611_cast_fu_270_p1");
    sc_trace(mVcdFile, k_fu_52, "k_fu_52");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, tmp_80_fu_346_p2, "tmp_80_fu_346_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, tmp_81_fu_356_p2, "tmp_81_fu_356_p2");
    sc_trace(mVcdFile, tmp_s_fu_128_p3, "tmp_s_fu_128_p3");
    sc_trace(mVcdFile, tmp_617_fu_159_p4, "tmp_617_fu_159_p4");
    sc_trace(mVcdFile, tmp_619_fu_183_p4, "tmp_619_fu_183_p4");
    sc_trace(mVcdFile, tmp_73_fu_202_p2, "tmp_73_fu_202_p2");
    sc_trace(mVcdFile, tmp_74_fu_211_p2, "tmp_74_fu_211_p2");
    sc_trace(mVcdFile, start_fu_217_p3, "start_fu_217_p3");
    sc_trace(mVcdFile, tmp_621_fu_241_p1, "tmp_621_fu_241_p1");
    sc_trace(mVcdFile, tmp_620_fu_237_p1, "tmp_620_fu_237_p1");
    sc_trace(mVcdFile, tmp_622_fu_245_p2, "tmp_622_fu_245_p2");
    sc_trace(mVcdFile, tmp_601_fu_251_p2, "tmp_601_fu_251_p2");
    sc_trace(mVcdFile, tmp_624_fu_261_p1, "tmp_624_fu_261_p1");
    sc_trace(mVcdFile, tmp_603_fu_265_p2, "tmp_603_fu_265_p2");
    sc_trace(mVcdFile, a_assign_fu_292_p0, "a_assign_fu_292_p0");
    sc_trace(mVcdFile, a_assign_fu_292_p1, "a_assign_fu_292_p1");
    sc_trace(mVcdFile, t_21_fu_309_p1, "t_21_fu_309_p1");
    sc_trace(mVcdFile, a_assign_cast1_fu_315_p1, "a_assign_cast1_fu_315_p1");
    sc_trace(mVcdFile, t_30_cast_fu_318_p1, "t_30_cast_fu_318_p1");
    sc_trace(mVcdFile, t_22_fu_321_p2, "t_22_fu_321_p2");
    sc_trace(mVcdFile, tmp_79_fu_337_p2, "tmp_79_fu_337_p2");
    sc_trace(mVcdFile, tmp_143_cast_fu_342_p1, "tmp_143_cast_fu_342_p1");
    sc_trace(mVcdFile, t_23_fu_353_p1, "t_23_fu_353_p1");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, a_assign_fu_292_p10, "a_assign_fu_292_p10");
    sc_trace(mVcdFile, t_21_fu_309_p10, "t_21_fu_309_p10");
#endif

    }
}

ntt_1::~ntt_1() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete zetas_U;
}

void ntt_1::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        j5_reg_119 = j_5_reg_442.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        j5_reg_119 = tmp_616_reg_385.read();
    }
    if ((esl_seteq<1,1,1>(tmp_fu_149_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        j_reg_107 = ap_const_lv31_0;
    } else if ((esl_seteq<1,1,1>(tmp_75_fu_232_p2.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()))) {
        j_reg_107 = tmp_82_fu_281_p2.read();
    }
    if ((esl_seteq<1,1,1>(tmp_75_fu_232_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()))) {
        k_fu_52 = k_4_reg_409.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        k_fu_52 = ap_const_lv32_1;
    }
    if ((esl_seteq<1,1,1>(icmp_fu_169_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        len_reg_95 = len_1_fu_193_p1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        len_reg_95 = ap_const_lv29_80;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        a_assign_reg_457 = a_assign_fu_292_p2.read();
        tmp_623_reg_462 = tmp_623_fu_297_p1.read();
    }
    if ((esl_seteq<1,1,1>(tmp_75_fu_232_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()))) {
        j_5_reg_442 = j_5_fu_275_p2.read();
        p_addr11_reg_432 =  (sc_lv<10>) (tmp_609_cast_fu_256_p1.read());
        p_addr_reg_437 =  (sc_lv<10>) (tmp_611_cast_fu_270_p1.read());
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        k_4_reg_409 = k_4_fu_197_p2.read();
        start_cast_reg_419 = start_cast_fu_224_p1.read();
        tmp_136_cast_reg_424 = tmp_136_cast_fu_228_p1.read();
        tmp_618_reg_414 = tmp_618_fu_207_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        len_cast_cast7_reg_376 = len_cast_cast7_fu_145_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        p_load_reg_452 = p_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        t_21_reg_472 = t_21_fu_309_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        t_reg_467 = t_fu_301_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        tmp_602_reg_477 = t_22_fu_321_p2.read().range(55, 32);
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        tmp_607_cast_reg_370 = tmp_607_cast_fu_136_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        tmp_616_reg_385 = tmp_616_fu_155_p1.read();
    }
}

void ntt_1::thread_a_assign_cast1_fu_315_p1() {
    a_assign_cast1_fu_315_p1 = esl_zext<56,55>(a_assign_reg_457.read());
}

void ntt_1::thread_a_assign_fu_292_p0() {
    a_assign_fu_292_p0 =  (sc_lv<23>) (tmp_136_cast_reg_424.read());
}

void ntt_1::thread_a_assign_fu_292_p1() {
    a_assign_fu_292_p1 =  (sc_lv<32>) (a_assign_fu_292_p10.read());
}

void ntt_1::thread_a_assign_fu_292_p10() {
    a_assign_fu_292_p10 = esl_zext<55,32>(p_load_reg_452.read());
}

void ntt_1::thread_a_assign_fu_292_p2() {
    a_assign_fu_292_p2 = (!a_assign_fu_292_p0.read().is_01() || !a_assign_fu_292_p1.read().is_01())? sc_lv<55>(): sc_biguint<23>(a_assign_fu_292_p0.read()) * sc_biguint<32>(a_assign_fu_292_p1.read());
}

void ntt_1::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void ntt_1::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void ntt_1::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void ntt_1::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void ntt_1::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void ntt_1::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void ntt_1::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void ntt_1::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void ntt_1::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void ntt_1::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void ntt_1::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void ntt_1::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void ntt_1::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void ntt_1::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(tmp_fu_149_p2.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void ntt_1::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void ntt_1::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(tmp_fu_149_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void ntt_1::thread_icmp_fu_169_p2() {
    icmp_fu_169_p2 = (!tmp_617_fu_159_p4.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_617_fu_159_p4.read() == ap_const_lv23_0);
}

void ntt_1::thread_j_5_fu_275_p2() {
    j_5_fu_275_p2 = (!ap_const_lv30_1.is_01() || !j5_reg_119.read().is_01())? sc_lv<30>(): (sc_biguint<30>(ap_const_lv30_1) + sc_biguint<30>(j5_reg_119.read()));
}

void ntt_1::thread_k_4_fu_197_p2() {
    k_4_fu_197_p2 = (!ap_const_lv32_1.is_01() || !k_fu_52.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_1) + sc_biguint<32>(k_fu_52.read()));
}

void ntt_1::thread_len_1_fu_193_p1() {
    len_1_fu_193_p1 = esl_zext<29,28>(tmp_619_fu_183_p4.read());
}

void ntt_1::thread_len_cast_cast7_fu_145_p1() {
    len_cast_cast7_fu_145_p1 = esl_zext<31,29>(len_reg_95.read());
}

void ntt_1::thread_p_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        p_address0 = p_addr11_reg_432.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()))) {
        p_address0 = p_addr_reg_437.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        p_address0 =  (sc_lv<10>) (tmp_609_cast_fu_256_p1.read());
    } else {
        p_address0 = "XXXXXXXXXX";
    }
}

void ntt_1::thread_p_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()))) {
        p_ce0 = ap_const_logic_1;
    } else {
        p_ce0 = ap_const_logic_0;
    }
}

void ntt_1::thread_p_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        p_d0 = tmp_81_fu_356_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        p_d0 = tmp_80_fu_346_p2.read();
    } else {
        p_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void ntt_1::thread_p_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()))) {
        p_we0 = ap_const_logic_1;
    } else {
        p_we0 = ap_const_logic_0;
    }
}

void ntt_1::thread_start_cast_fu_224_p1() {
    start_cast_fu_224_p1 = esl_zext<31,30>(start_fu_217_p3.read());
}

void ntt_1::thread_start_fu_217_p3() {
    start_fu_217_p3 = (!tmp_74_fu_211_p2.read()[0].is_01())? sc_lv<30>(): ((tmp_74_fu_211_p2.read()[0].to_bool())? tmp_616_reg_385.read(): tmp_618_fu_207_p1.read());
}

void ntt_1::thread_t_21_fu_309_p1() {
    t_21_fu_309_p1 =  (sc_lv<32>) (t_21_fu_309_p10.read());
}

void ntt_1::thread_t_21_fu_309_p10() {
    t_21_fu_309_p10 = esl_zext<55,32>(t_reg_467.read());
}

void ntt_1::thread_t_21_fu_309_p2() {
    t_21_fu_309_p2 = (!ap_const_lv55_7FE001.is_01() || !t_21_fu_309_p1.read().is_01())? sc_lv<55>(): sc_biguint<55>(ap_const_lv55_7FE001) * sc_biguint<32>(t_21_fu_309_p1.read());
}

void ntt_1::thread_t_22_fu_321_p2() {
    t_22_fu_321_p2 = (!a_assign_cast1_fu_315_p1.read().is_01() || !t_30_cast_fu_318_p1.read().is_01())? sc_lv<56>(): (sc_biguint<56>(a_assign_cast1_fu_315_p1.read()) + sc_biguint<56>(t_30_cast_fu_318_p1.read()));
}

void ntt_1::thread_t_23_fu_353_p1() {
    t_23_fu_353_p1 = esl_zext<32,24>(tmp_602_reg_477.read());
}

void ntt_1::thread_t_30_cast_fu_318_p1() {
    t_30_cast_fu_318_p1 = esl_zext<56,55>(t_21_reg_472.read());
}

void ntt_1::thread_t_fu_301_p2() {
    t_fu_301_p2 = (!ap_const_lv32_FC7FDFFF.is_01() || !tmp_623_reg_462.read().is_01())? sc_lv<32>(): sc_bigint<32>(ap_const_lv32_FC7FDFFF) * sc_bigint<32>(tmp_623_reg_462.read());
}

void ntt_1::thread_tmp_136_cast_fu_228_p1() {
    tmp_136_cast_fu_228_p1 = esl_zext<55,23>(zetas_q0.read());
}

void ntt_1::thread_tmp_143_cast_fu_342_p1() {
    tmp_143_cast_fu_342_p1 = esl_zext<32,24>(tmp_79_fu_337_p2.read());
}

void ntt_1::thread_tmp_601_fu_251_p2() {
    tmp_601_fu_251_p2 = (!tmp_607_cast_reg_370.read().is_01() || !tmp_622_fu_245_p2.read().is_01())? sc_lv<12>(): (sc_biguint<12>(tmp_607_cast_reg_370.read()) + sc_biguint<12>(tmp_622_fu_245_p2.read()));
}

void ntt_1::thread_tmp_603_fu_265_p2() {
    tmp_603_fu_265_p2 = (!tmp_607_cast_reg_370.read().is_01() || !tmp_624_fu_261_p1.read().is_01())? sc_lv<12>(): (sc_biguint<12>(tmp_607_cast_reg_370.read()) + sc_biguint<12>(tmp_624_fu_261_p1.read()));
}

void ntt_1::thread_tmp_607_cast_fu_136_p1() {
    tmp_607_cast_fu_136_p1 = esl_zext<12,11>(tmp_s_fu_128_p3.read());
}

void ntt_1::thread_tmp_609_cast_fu_256_p1() {
    tmp_609_cast_fu_256_p1 = esl_zext<64,12>(tmp_601_fu_251_p2.read());
}

void ntt_1::thread_tmp_611_cast_fu_270_p1() {
    tmp_611_cast_fu_270_p1 = esl_zext<64,12>(tmp_603_fu_265_p2.read());
}

void ntt_1::thread_tmp_616_fu_155_p1() {
    tmp_616_fu_155_p1 = j_reg_107.read().range(30-1, 0);
}

void ntt_1::thread_tmp_617_fu_159_p4() {
    tmp_617_fu_159_p4 = j_reg_107.read().range(30, 8);
}

void ntt_1::thread_tmp_618_fu_207_p1() {
    tmp_618_fu_207_p1 = tmp_73_fu_202_p2.read().range(30-1, 0);
}

void ntt_1::thread_tmp_619_fu_183_p4() {
    tmp_619_fu_183_p4 = len_reg_95.read().range(28, 1);
}

void ntt_1::thread_tmp_620_fu_237_p1() {
    tmp_620_fu_237_p1 = j5_reg_119.read().range(12-1, 0);
}

void ntt_1::thread_tmp_621_fu_241_p1() {
    tmp_621_fu_241_p1 = len_reg_95.read().range(12-1, 0);
}

void ntt_1::thread_tmp_622_fu_245_p2() {
    tmp_622_fu_245_p2 = (!tmp_621_fu_241_p1.read().is_01() || !tmp_620_fu_237_p1.read().is_01())? sc_lv<12>(): (sc_biguint<12>(tmp_621_fu_241_p1.read()) + sc_biguint<12>(tmp_620_fu_237_p1.read()));
}

void ntt_1::thread_tmp_623_fu_297_p1() {
    tmp_623_fu_297_p1 = a_assign_fu_292_p2.read().range(32-1, 0);
}

void ntt_1::thread_tmp_624_fu_261_p1() {
    tmp_624_fu_261_p1 = j5_reg_119.read().range(12-1, 0);
}

void ntt_1::thread_tmp_72_fu_178_p1() {
    tmp_72_fu_178_p1 = esl_zext<64,32>(k_fu_52.read());
}

void ntt_1::thread_tmp_73_fu_202_p2() {
    tmp_73_fu_202_p2 = (!len_cast_cast7_reg_376.read().is_01() || !j_reg_107.read().is_01())? sc_lv<31>(): (sc_biguint<31>(len_cast_cast7_reg_376.read()) + sc_biguint<31>(j_reg_107.read()));
}

void ntt_1::thread_tmp_74_fu_211_p2() {
    tmp_74_fu_211_p2 = (!j_reg_107.read().is_01() || !tmp_73_fu_202_p2.read().is_01())? sc_lv<1>(): (sc_biguint<31>(j_reg_107.read()) > sc_biguint<31>(tmp_73_fu_202_p2.read()));
}

void ntt_1::thread_tmp_75_fu_232_p2() {
    tmp_75_fu_232_p2 = (!j5_reg_119.read().is_01() || !tmp_618_reg_414.read().is_01())? sc_lv<1>(): (sc_biguint<30>(j5_reg_119.read()) < sc_biguint<30>(tmp_618_reg_414.read()));
}

void ntt_1::thread_tmp_79_fu_337_p2() {
    tmp_79_fu_337_p2 = (!ap_const_lv24_FFC002.is_01() || !tmp_602_reg_477.read().is_01())? sc_lv<24>(): (sc_bigint<24>(ap_const_lv24_FFC002) - sc_biguint<24>(tmp_602_reg_477.read()));
}

void ntt_1::thread_tmp_80_fu_346_p2() {
    tmp_80_fu_346_p2 = (!tmp_143_cast_fu_342_p1.read().is_01() || !p_q0.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_143_cast_fu_342_p1.read()) + sc_biguint<32>(p_q0.read()));
}

void ntt_1::thread_tmp_81_fu_356_p2() {
    tmp_81_fu_356_p2 = (!t_23_fu_353_p1.read().is_01() || !p_q0.read().is_01())? sc_lv<32>(): (sc_biguint<32>(t_23_fu_353_p1.read()) + sc_biguint<32>(p_q0.read()));
}

void ntt_1::thread_tmp_82_fu_281_p2() {
    tmp_82_fu_281_p2 = (!len_cast_cast7_reg_376.read().is_01() || !start_cast_reg_419.read().is_01())? sc_lv<31>(): (sc_biguint<31>(len_cast_cast7_reg_376.read()) + sc_biguint<31>(start_cast_reg_419.read()));
}

void ntt_1::thread_tmp_fu_149_p2() {
    tmp_fu_149_p2 = (!len_reg_95.read().is_01() || !ap_const_lv29_0.is_01())? sc_lv<1>(): sc_lv<1>(len_reg_95.read() == ap_const_lv29_0);
}

void ntt_1::thread_tmp_s_fu_128_p3() {
    tmp_s_fu_128_p3 = esl_concat<3,8>(p_offset.read(), ap_const_lv8_0);
}

void ntt_1::thread_zetas_address0() {
    zetas_address0 =  (sc_lv<8>) (tmp_72_fu_178_p1.read());
}

void ntt_1::thread_zetas_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        zetas_ce0 = ap_const_logic_1;
    } else {
        zetas_ce0 = ap_const_logic_0;
    }
}

void ntt_1::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(tmp_fu_149_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(icmp_fu_169_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(tmp_75_fu_232_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<13>) ("XXXXXXXXXXXXX");
            break;
    }
}

}

