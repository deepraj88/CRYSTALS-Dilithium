// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _rej_gamma1m1_HH_
#define _rej_gamma1m1_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct rej_gamma1m1 : public sc_module {
    // Port declarations 21
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<10> > a_address0;
    sc_out< sc_logic > a_ce0;
    sc_out< sc_logic > a_we0;
    sc_out< sc_lv<24> > a_d0;
    sc_in< sc_lv<3> > a_offset;
    sc_in< sc_lv<9> > a_offset1;
    sc_in< sc_lv<10> > len;
    sc_out< sc_lv<10> > buf_r_address0;
    sc_out< sc_logic > buf_r_ce0;
    sc_in< sc_lv<8> > buf_r_q0;
    sc_out< sc_lv<10> > buf_r_address1;
    sc_out< sc_logic > buf_r_ce1;
    sc_in< sc_lv<8> > buf_r_q1;
    sc_in< sc_lv<11> > buflen;
    sc_out< sc_lv<9> > ap_return;


    // Module declarations
    rej_gamma1m1(sc_module_name name);
    SC_HAS_PROCESS(rej_gamma1m1);

    ~rej_gamma1m1();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<6> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<12> > tmp_40_cast_fu_208_p1;
    sc_signal< sc_lv<12> > tmp_40_cast_reg_398;
    sc_signal< sc_lv<32> > tmp_cast_fu_222_p1;
    sc_signal< sc_lv<32> > tmp_cast_reg_404;
    sc_signal< sc_lv<9> > tmp_45_fu_226_p1;
    sc_signal< sc_lv<9> > tmp_45_reg_409;
    sc_signal< sc_lv<1> > tmp_s_fu_230_p2;
    sc_signal< sc_lv<1> > tmp_s_reg_415;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<4> > t_reg_424;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<24> > t_2_cast_fu_311_p1;
    sc_signal< sc_lv<24> > t_2_cast_reg_439;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<32> > pos_1_fu_316_p2;
    sc_signal< sc_lv<32> > pos_1_reg_444;
    sc_signal< sc_lv<1> > tmp_19_fu_322_p2;
    sc_signal< sc_lv<1> > tmp_19_reg_450;
    sc_signal< sc_lv<9> > ctr_4_fu_328_p2;
    sc_signal< sc_lv<1> > or_cond_fu_358_p2;
    sc_signal< sc_lv<1> > or_cond_reg_460;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<12> > tmp_41_fu_372_p2;
    sc_signal< sc_lv<12> > tmp_41_reg_464;
    sc_signal< sc_lv<9> > ctr_reg_136;
    sc_signal< sc_lv<9> > ap_phi_mux_ctr_2_phi_fu_175_p4;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<1> > tmp_25_fu_388_p2;
    sc_signal< sc_lv<32> > pos_reg_148;
    sc_signal< sc_lv<9> > ctr_1_reg_160;
    sc_signal< sc_lv<9> > ctr_5_fu_377_p2;
    sc_signal< sc_lv<9> > ctr_2_reg_171;
    sc_signal< sc_lv<9> > ap_phi_mux_ctr_3_phi_fu_186_p4;
    sc_signal< sc_lv<9> > ctr_3_reg_183;
    sc_signal< sc_lv<64> > tmp_13_fu_241_p1;
    sc_signal< sc_lv<64> > tmp_15_fu_262_p1;
    sc_signal< sc_lv<64> > tmp_18_fu_273_p1;
    sc_signal< sc_lv<64> > tmp_42_cast_fu_348_p1;
    sc_signal< sc_lv<64> > tmp_43_cast_fu_384_p1;
    sc_signal< sc_lv<24> > grp_fu_194_p1;
    sc_signal< sc_lv<11> > tmp_39_fu_200_p3;
    sc_signal< sc_lv<10> > tmp_44_fu_212_p1;
    sc_signal< sc_lv<10> > tmp_fu_216_p2;
    sc_signal< sc_lv<32> > tmp_12_fu_235_p2;
    sc_signal< sc_lv<32> > tmp_14_fu_256_p2;
    sc_signal< sc_lv<32> > tmp_17_fu_267_p2;
    sc_signal< sc_lv<8> > t_2_fu_278_p1;
    sc_signal< sc_lv<12> > tmp_20_fu_289_p3;
    sc_signal< sc_lv<12> > tmp_16_fu_281_p3;
    sc_signal< sc_lv<12> > tmp_21_fu_297_p2;
    sc_signal< sc_lv<20> > t_1_fu_303_p3;
    sc_signal< sc_lv<9> > sum_fu_334_p2;
    sc_signal< sc_lv<12> > sum_cast_cast_fu_339_p1;
    sc_signal< sc_lv<12> > tmp_40_fu_343_p2;
    sc_signal< sc_lv<1> > tmp_23_fu_353_p2;
    sc_signal< sc_lv<9> > sum3_fu_363_p2;
    sc_signal< sc_lv<12> > sum3_cast_cast_fu_368_p1;
    sc_signal< sc_lv<9> > ap_return_preg;
    sc_signal< sc_lv<6> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<6> ap_ST_fsm_state1;
    static const sc_lv<6> ap_ST_fsm_state2;
    static const sc_lv<6> ap_ST_fsm_state3;
    static const sc_lv<6> ap_ST_fsm_state4;
    static const sc_lv<6> ap_ST_fsm_state5;
    static const sc_lv<6> ap_ST_fsm_state6;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<9> ap_const_lv9_0;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<24> ap_const_lv24_87DE00;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<10> ap_const_lv10_3FB;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<20> ap_const_lv20_FFBFF;
    static const sc_lv<9> ap_const_lv9_1;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_a_address0();
    void thread_a_ce0();
    void thread_a_d0();
    void thread_a_we0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_phi_mux_ctr_2_phi_fu_175_p4();
    void thread_ap_phi_mux_ctr_3_phi_fu_186_p4();
    void thread_ap_ready();
    void thread_ap_return();
    void thread_buf_r_address0();
    void thread_buf_r_address1();
    void thread_buf_r_ce0();
    void thread_buf_r_ce1();
    void thread_ctr_4_fu_328_p2();
    void thread_ctr_5_fu_377_p2();
    void thread_grp_fu_194_p1();
    void thread_or_cond_fu_358_p2();
    void thread_pos_1_fu_316_p2();
    void thread_sum3_cast_cast_fu_368_p1();
    void thread_sum3_fu_363_p2();
    void thread_sum_cast_cast_fu_339_p1();
    void thread_sum_fu_334_p2();
    void thread_t_1_fu_303_p3();
    void thread_t_2_cast_fu_311_p1();
    void thread_t_2_fu_278_p1();
    void thread_tmp_12_fu_235_p2();
    void thread_tmp_13_fu_241_p1();
    void thread_tmp_14_fu_256_p2();
    void thread_tmp_15_fu_262_p1();
    void thread_tmp_16_fu_281_p3();
    void thread_tmp_17_fu_267_p2();
    void thread_tmp_18_fu_273_p1();
    void thread_tmp_19_fu_322_p2();
    void thread_tmp_20_fu_289_p3();
    void thread_tmp_21_fu_297_p2();
    void thread_tmp_23_fu_353_p2();
    void thread_tmp_25_fu_388_p2();
    void thread_tmp_39_fu_200_p3();
    void thread_tmp_40_cast_fu_208_p1();
    void thread_tmp_40_fu_343_p2();
    void thread_tmp_41_fu_372_p2();
    void thread_tmp_42_cast_fu_348_p1();
    void thread_tmp_43_cast_fu_384_p1();
    void thread_tmp_44_fu_212_p1();
    void thread_tmp_45_fu_226_p1();
    void thread_tmp_cast_fu_222_p1();
    void thread_tmp_fu_216_p2();
    void thread_tmp_s_fu_230_p2();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
