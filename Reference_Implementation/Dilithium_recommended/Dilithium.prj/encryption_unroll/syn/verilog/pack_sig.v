// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module pack_sig (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        sig_address0,
        sig_ce0,
        sig_we0,
        sig_d0,
        sig_q0,
        z_vec_coeffs_address0,
        z_vec_coeffs_ce0,
        z_vec_coeffs_q0,
        h_vec_coeffs_address0,
        h_vec_coeffs_ce0,
        h_vec_coeffs_q0,
        c_coeffs_address0,
        c_coeffs_ce0,
        c_coeffs_q0
);

parameter    ap_ST_fsm_state1 = 18'd1;
parameter    ap_ST_fsm_state2 = 18'd2;
parameter    ap_ST_fsm_state3 = 18'd4;
parameter    ap_ST_fsm_state4 = 18'd8;
parameter    ap_ST_fsm_state5 = 18'd16;
parameter    ap_ST_fsm_state6 = 18'd32;
parameter    ap_ST_fsm_state7 = 18'd64;
parameter    ap_ST_fsm_state8 = 18'd128;
parameter    ap_ST_fsm_state9 = 18'd256;
parameter    ap_ST_fsm_state10 = 18'd512;
parameter    ap_ST_fsm_state11 = 18'd1024;
parameter    ap_ST_fsm_state12 = 18'd2048;
parameter    ap_ST_fsm_state13 = 18'd4096;
parameter    ap_ST_fsm_state14 = 18'd8192;
parameter    ap_ST_fsm_state15 = 18'd16384;
parameter    ap_ST_fsm_state16 = 18'd32768;
parameter    ap_ST_fsm_state17 = 18'd65536;
parameter    ap_ST_fsm_state18 = 18'd131072;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [11:0] sig_address0;
output   sig_ce0;
output   sig_we0;
output  [7:0] sig_d0;
input  [7:0] sig_q0;
output  [9:0] z_vec_coeffs_address0;
output   z_vec_coeffs_ce0;
input  [31:0] z_vec_coeffs_q0;
output  [10:0] h_vec_coeffs_address0;
output   h_vec_coeffs_ce0;
input  [0:0] h_vec_coeffs_q0;
output  [7:0] c_coeffs_address0;
output   c_coeffs_ce0;
input  [22:0] c_coeffs_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[11:0] sig_address0;
reg sig_ce0;
reg sig_we0;
reg[7:0] sig_d0;
reg[9:0] z_vec_coeffs_address0;
reg z_vec_coeffs_ce0;
reg h_vec_coeffs_ce0;
reg c_coeffs_ce0;

(* fsm_encoding = "none" *) reg   [17:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [2:0] i_30_fu_411_p2;
reg   [2:0] i_30_reg_1082;
wire    ap_CS_fsm_state2;
wire   [11:0] tmp_87_cast_fu_431_p1;
reg   [11:0] tmp_87_cast_reg_1087;
wire   [0:0] tmp_fu_405_p2;
wire   [7:0] i_4_fu_450_p2;
reg   [7:0] i_4_reg_1106;
wire    ap_CS_fsm_state3;
wire   [0:0] tmp_i_fu_444_p2;
wire   [9:0] tmp_53_i_fu_487_p2;
reg   [9:0] tmp_53_i_reg_1116;
wire   [7:0] tmp_52_i_fu_537_p2;
reg   [7:0] tmp_52_i_reg_1125;
wire    ap_CS_fsm_state4;
reg   [7:0] tmp_56_i_reg_1130;
reg   [7:0] tmp_60_i_reg_1135;
wire    ap_CS_fsm_state5;
wire   [7:0] tmp_66_i_fu_674_p2;
reg   [7:0] tmp_66_i_reg_1145;
wire    ap_CS_fsm_state6;
reg   [7:0] tmp_68_i_reg_1150;
reg   [7:0] tmp_72_i_reg_1155;
wire   [11:0] sum8_i_fu_746_p2;
reg   [11:0] sum8_i_reg_1160;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state10;
wire   [2:0] i_31_fu_761_p2;
reg   [2:0] i_31_reg_1173;
wire   [11:0] tmp_593_cast_fu_775_p1;
reg   [11:0] tmp_593_cast_reg_1178;
wire   [0:0] tmp_32_fu_755_p2;
wire   [8:0] j_3_fu_785_p2;
reg   [8:0] j_3_reg_1186;
wire    ap_CS_fsm_state11;
wire   [0:0] tmp_35_fu_779_p2;
wire   [31:0] k_1_fu_872_p2;
wire    ap_CS_fsm_state13;
wire   [0:0] tmp_34_fu_866_p2;
wire   [5:0] i_32_fu_909_p2;
reg   [5:0] i_32_reg_1224;
wire    ap_CS_fsm_state14;
reg   [11:0] sig_addr_1_reg_1229;
wire   [0:0] tmp_40_fu_903_p2;
wire   [7:0] tmp_42_fu_934_p3;
reg   [7:0] tmp_42_reg_1234;
wire   [7:0] j_1_cast3_fu_942_p1;
reg   [7:0] j_1_cast3_reg_1239;
wire    ap_CS_fsm_state15;
wire   [3:0] j_4_fu_952_p2;
reg   [3:0] j_4_reg_1247;
wire   [0:0] tmp_44_fu_946_p2;
wire   [0:0] tmp_56_fu_968_p2;
reg   [0:0] tmp_56_reg_1257;
wire    ap_CS_fsm_state16;
wire   [3:0] i_33_fu_1031_p2;
wire    ap_CS_fsm_state18;
reg   [2:0] i_reg_295;
reg   [7:0] i_i_reg_307;
wire    ap_CS_fsm_state9;
reg   [2:0] i_1_reg_319;
reg   [8:0] j_reg_331;
wire    ap_CS_fsm_state12;
reg   [31:0] k_3_reg_343;
reg   [5:0] i_2_reg_352;
reg   [3:0] j_1_reg_363;
wire    ap_CS_fsm_state17;
reg   [3:0] i_3_reg_374;
wire   [0:0] tmp_43_fu_1025_p2;
wire   [63:0] tmp_591_fu_470_p1;
wire   [63:0] tmp_597_fu_583_p1;
wire   [63:0] sum_i_cast_fu_596_p1;
wire   [63:0] sum2_i_cast_fu_647_p1;
wire   [63:0] sum4_i_cast_fu_713_p1;
wire    ap_CS_fsm_state7;
wire   [63:0] sum6_i_cast_fu_732_p1;
wire   [63:0] sum8_i_cast_fu_751_p1;
wire   [63:0] tmp_600_cast_fu_800_p1;
wire   [63:0] sum4_cast_fu_830_p1;
wire  signed [63:0] sum2_cast_fu_856_p1;
wire   [63:0] sum6_cast_fu_888_p1;
wire   [63:0] sum8_cast_fu_925_p1;
wire   [63:0] tmp_55_fu_963_p1;
wire   [63:0] sum_cast_fu_1074_p1;
reg   [31:0] k_fu_150;
wire   [31:0] k_2_fu_840_p2;
reg   [63:0] mask_fu_154;
wire   [63:0] mask_1_fu_997_p2;
reg   [63:0] signs_fu_158;
wire   [63:0] p_signs_1_fu_991_p2;
wire   [7:0] tmp_604_fu_805_p1;
wire   [7:0] tmp_605_fu_835_p1;
wire   [7:0] tmp_58_fu_1018_p2;
wire   [7:0] tmp_609_fu_1059_p1;
wire   [31:0] grp_fu_385_p2;
wire   [1:0] tmp_588_fu_417_p1;
wire   [10:0] tmp_s_fu_421_p4;
wire   [6:0] tmp_589_fu_456_p1;
wire   [10:0] tmp_587_fu_460_p4;
wire   [8:0] p_shl_i_fu_475_p3;
wire   [9:0] p_shl_i_cast_fu_483_p1;
wire   [9:0] i_i_cast9_fu_440_p1;
wire   [0:0] grp_fu_391_p3;
wire   [23:0] tmp_592_fu_493_p1;
wire   [23:0] tmp_45_i_cast_cast_fu_497_p3;
wire   [15:0] tmp_49_cast_fu_513_p3;
wire   [15:0] tmp_595_fu_521_p1;
wire   [7:0] tmp_594_fu_505_p1;
wire   [7:0] tmp_4_i_fu_509_p1;
wire   [15:0] tmp_46_i_cast_fu_531_p2;
wire   [23:0] tmp_46_i_fu_525_p2;
wire   [7:0] tmp_590_fu_563_p2;
wire   [7:0] tmp_47_i_fu_569_p2;
wire   [10:0] tmp_596_fu_575_p3;
wire   [11:0] tmp_54_i_cast_fu_588_p1;
wire   [11:0] sum_i_fu_591_p2;
wire   [19:0] tmp_598_fu_601_p1;
wire   [19:0] tmp_50_i_cast_cast_fu_605_p3;
wire   [11:0] tmp_51_fu_613_p1;
wire   [11:0] tmp_601_fu_617_p1;
wire   [9:0] tmp_57_i_fu_633_p2;
wire   [11:0] tmp_58_i_cast_fu_638_p1;
wire   [11:0] sum2_i_fu_642_p2;
wire   [3:0] tmp_602_fu_656_p1;
wire   [3:0] tmp_7_i_fu_652_p1;
wire   [3:0] tmp_63_i_fu_660_p2;
wire   [7:0] tmp_65_i_fu_666_p3;
wire   [11:0] tmp_51_i_cast_fu_627_p2;
wire   [19:0] tmp_51_i_fu_621_p2;
wire   [9:0] tmp_61_i_fu_699_p2;
wire   [11:0] tmp_62_i_cast_fu_704_p1;
wire   [11:0] sum4_i_fu_708_p2;
wire   [9:0] tmp_69_i_fu_718_p2;
wire   [11:0] tmp_70_i_cast_fu_723_p1;
wire   [11:0] sum6_i_fu_727_p2;
wire   [9:0] tmp_73_i_fu_737_p2;
wire   [11:0] tmp_74_i_cast_fu_742_p1;
wire   [10:0] tmp_586_fu_767_p3;
wire   [11:0] tmp_38_cast_fu_791_p1;
wire   [11:0] tmp_600_fu_795_p2;
wire   [5:0] tmp_37_fu_810_p3;
wire  signed [6:0] tmp_95_cast_fu_818_p1;
wire   [11:0] sum1_fu_822_p3;
wire   [12:0] tmp_606_fu_846_p1;
wire   [12:0] sum2_fu_850_p2;
wire   [11:0] tmp_603_fu_878_p1;
wire   [11:0] sum6_fu_882_p2;
wire   [11:0] tmp_102_cast_fu_915_p1;
wire   [11:0] sum8_fu_919_p2;
wire   [4:0] tmp_607_fu_930_p1;
wire   [7:0] tmp_54_fu_958_p2;
wire   [0:0] tmp_59_fu_977_p2;
wire   [63:0] tmp_60_fu_983_p3;
wire   [7:0] tmp_57_fu_1013_p2;
wire   [2:0] tmp_608_fu_1037_p1;
wire   [5:0] tmp_45_fu_1041_p3;
wire   [63:0] tmp_46_fu_1049_p1;
wire   [63:0] tmp_47_fu_1053_p2;
wire   [11:0] tmp_110_cast_fu_1064_p1;
wire   [11:0] sum_fu_1068_p2;
reg   [17:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 18'd1;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_fu_405_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        i_1_reg_319 <= 3'd0;
    end else if (((1'b1 == ap_CS_fsm_state11) & (tmp_35_fu_779_p2 == 1'd1))) begin
        i_1_reg_319 <= i_31_reg_1173;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state15) & (tmp_44_fu_946_p2 == 1'd1))) begin
        i_2_reg_352 <= i_32_reg_1224;
    end else if (((tmp_34_fu_866_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state13))) begin
        i_2_reg_352 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state14) & (tmp_40_fu_903_p2 == 1'd1))) begin
        i_3_reg_374 <= 4'd0;
    end else if (((tmp_43_fu_1025_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state18))) begin
        i_3_reg_374 <= i_33_fu_1031_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        i_i_reg_307 <= i_4_reg_1106;
    end else if (((tmp_fu_405_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        i_i_reg_307 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_i_fu_444_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        i_reg_295 <= i_30_reg_1082;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_reg_295 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        j_1_reg_363 <= j_4_reg_1247;
    end else if (((tmp_40_fu_903_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state14))) begin
        j_1_reg_363 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        j_reg_331 <= j_3_reg_1186;
    end else if (((tmp_32_fu_755_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state10))) begin
        j_reg_331 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) & (tmp_32_fu_755_p2 == 1'd1))) begin
        k_3_reg_343 <= k_fu_150;
    end else if (((1'b1 == ap_CS_fsm_state13) & (tmp_34_fu_866_p2 == 1'd1))) begin
        k_3_reg_343 <= k_1_fu_872_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((h_vec_coeffs_q0 == 1'd1) & (1'b1 == ap_CS_fsm_state12))) begin
        k_fu_150 <= k_2_fu_840_p2;
    end else if (((tmp_fu_405_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        k_fu_150 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_56_fu_968_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state16))) begin
        mask_fu_154 <= mask_1_fu_997_p2;
    end else if (((tmp_34_fu_866_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state13))) begin
        mask_fu_154 <= 64'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_56_fu_968_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state16))) begin
        signs_fu_158 <= p_signs_1_fu_991_p2;
    end else if (((tmp_34_fu_866_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state13))) begin
        signs_fu_158 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_30_reg_1082 <= i_30_fu_411_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        i_31_reg_1173 <= i_31_fu_761_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        i_32_reg_1224 <= i_32_fu_909_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        i_4_reg_1106 <= i_4_fu_450_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        j_1_cast3_reg_1239[3 : 0] <= j_1_cast3_fu_942_p1[3 : 0];
        j_4_reg_1247 <= j_4_fu_952_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        j_3_reg_1186 <= j_3_fu_785_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_40_fu_903_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state14))) begin
        sig_addr_1_reg_1229 <= sum8_cast_fu_925_p1;
        tmp_42_reg_1234[7 : 3] <= tmp_42_fu_934_p3[7 : 3];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        sum8_i_reg_1160 <= sum8_i_fu_746_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        tmp_52_i_reg_1125 <= tmp_52_i_fu_537_p2;
        tmp_56_i_reg_1130 <= {{tmp_46_i_cast_fu_531_p2[15:8]}};
        tmp_60_i_reg_1135 <= {{tmp_46_i_fu_525_p2[23:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_i_fu_444_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        tmp_53_i_reg_1116 <= tmp_53_i_fu_487_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        tmp_56_reg_1257 <= tmp_56_fu_968_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_32_fu_755_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state10))) begin
        tmp_593_cast_reg_1178[10 : 8] <= tmp_593_cast_fu_775_p1[10 : 8];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        tmp_66_i_reg_1145 <= tmp_66_i_fu_674_p2;
        tmp_68_i_reg_1150 <= {{tmp_51_i_cast_fu_627_p2[11:4]}};
        tmp_72_i_reg_1155 <= {{tmp_51_i_fu_621_p2[19:12]}};
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_fu_405_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        tmp_87_cast_reg_1087[10 : 7] <= tmp_87_cast_fu_431_p1[10 : 7];
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == ap_CS_fsm_state18) & (tmp_43_fu_1025_p2 == 1'd1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state18) & (tmp_43_fu_1025_p2 == 1'd1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        c_coeffs_ce0 = 1'b1;
    end else begin
        c_coeffs_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        h_vec_coeffs_ce0 = 1'b1;
    end else begin
        h_vec_coeffs_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        sig_address0 = sum_cast_fu_1074_p1;
    end else if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16))) begin
        sig_address0 = sig_addr_1_reg_1229;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        sig_address0 = sum8_cast_fu_925_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        sig_address0 = sum6_cast_fu_888_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        sig_address0 = sum2_cast_fu_856_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        sig_address0 = sum4_cast_fu_830_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        sig_address0 = sum8_i_cast_fu_751_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        sig_address0 = sum6_i_cast_fu_732_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        sig_address0 = sum4_i_cast_fu_713_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        sig_address0 = sum2_i_cast_fu_647_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        sig_address0 = sum_i_cast_fu_596_p1;
    end else begin
        sig_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        sig_ce0 = 1'b1;
    end else begin
        sig_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        sig_d0 = tmp_609_fu_1059_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        sig_d0 = tmp_58_fu_1018_p2;
    end else if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13))) begin
        sig_d0 = 8'd0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        sig_d0 = tmp_605_fu_835_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        sig_d0 = tmp_604_fu_805_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        sig_d0 = tmp_72_i_reg_1155;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        sig_d0 = tmp_68_i_reg_1150;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        sig_d0 = tmp_66_i_reg_1145;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        sig_d0 = tmp_56_i_reg_1130;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        sig_d0 = tmp_52_i_reg_1125;
    end else begin
        sig_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | ((tmp_56_reg_1257 == 1'd0) & (1'b1 == ap_CS_fsm_state17)) | ((h_vec_coeffs_q0 == 1'd1) & (1'b1 == ap_CS_fsm_state12)) | ((tmp_43_fu_1025_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state18)) | ((tmp_40_fu_903_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state14)) | ((1'b1 == ap_CS_fsm_state13) & (tmp_34_fu_866_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state11) & (tmp_35_fu_779_p2 == 1'd1)))) begin
        sig_we0 = 1'b1;
    end else begin
        sig_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        z_vec_coeffs_address0 = tmp_597_fu_583_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        z_vec_coeffs_address0 = tmp_591_fu_470_p1;
    end else begin
        z_vec_coeffs_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state5))) begin
        z_vec_coeffs_ce0 = 1'b1;
    end else begin
        z_vec_coeffs_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((tmp_fu_405_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((tmp_i_fu_444_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state10 : begin
            if (((1'b1 == ap_CS_fsm_state10) & (tmp_32_fu_755_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state11 : begin
            if (((1'b1 == ap_CS_fsm_state11) & (tmp_35_fu_779_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state13 : begin
            if (((tmp_34_fu_866_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state13))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state14 : begin
            if (((1'b1 == ap_CS_fsm_state14) & (tmp_40_fu_903_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        ap_ST_fsm_state15 : begin
            if (((1'b1 == ap_CS_fsm_state15) & (tmp_44_fu_946_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state18 : begin
            if (((1'b1 == ap_CS_fsm_state18) & (tmp_43_fu_1025_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign c_coeffs_address0 = tmp_55_fu_963_p1;

assign grp_fu_385_p2 = (32'd523775 - z_vec_coeffs_q0);

assign grp_fu_391_p3 = grp_fu_385_p2[32'd31];

assign h_vec_coeffs_address0 = tmp_600_cast_fu_800_p1;

assign i_30_fu_411_p2 = (i_reg_295 + 3'd1);

assign i_31_fu_761_p2 = (i_1_reg_319 + 3'd1);

assign i_32_fu_909_p2 = (i_2_reg_352 + 6'd1);

assign i_33_fu_1031_p2 = (i_3_reg_374 + 4'd1);

assign i_4_fu_450_p2 = (i_i_reg_307 + 8'd1);

assign i_i_cast9_fu_440_p1 = i_i_reg_307;

assign j_1_cast3_fu_942_p1 = j_1_reg_363;

assign j_3_fu_785_p2 = (j_reg_331 + 9'd1);

assign j_4_fu_952_p2 = (j_1_reg_363 + 4'd1);

assign k_1_fu_872_p2 = (32'd1 + k_3_reg_343);

assign k_2_fu_840_p2 = (32'd1 + k_fu_150);

assign mask_1_fu_997_p2 = mask_fu_154 << 64'd1;

assign p_shl_i_cast_fu_483_p1 = p_shl_i_fu_475_p3;

assign p_shl_i_fu_475_p3 = {{tmp_589_fu_456_p1}, {2'd0}};

assign p_signs_1_fu_991_p2 = (tmp_60_fu_983_p3 | signs_fu_158);

assign sum1_fu_822_p3 = {{5'd20}, {tmp_95_cast_fu_818_p1}};

assign sum2_cast_fu_856_p1 = $signed(sum2_fu_850_p2);

assign sum2_fu_850_p2 = (13'd2560 + tmp_606_fu_846_p1);

assign sum2_i_cast_fu_647_p1 = sum2_i_fu_642_p2;

assign sum2_i_fu_642_p2 = (tmp_58_i_cast_fu_638_p1 + tmp_87_cast_reg_1087);

assign sum4_cast_fu_830_p1 = sum1_fu_822_p3;

assign sum4_i_cast_fu_713_p1 = sum4_i_fu_708_p2;

assign sum4_i_fu_708_p2 = (tmp_62_i_cast_fu_704_p1 + tmp_87_cast_reg_1087);

assign sum6_cast_fu_888_p1 = sum6_fu_882_p2;

assign sum6_fu_882_p2 = ($signed(12'd2560) + $signed(tmp_603_fu_878_p1));

assign sum6_i_cast_fu_732_p1 = sum6_i_fu_727_p2;

assign sum6_i_fu_727_p2 = (tmp_70_i_cast_fu_723_p1 + tmp_87_cast_reg_1087);

assign sum8_cast_fu_925_p1 = sum8_fu_919_p2;

assign sum8_fu_919_p2 = ($signed(12'd2661) + $signed(tmp_102_cast_fu_915_p1));

assign sum8_i_cast_fu_751_p1 = sum8_i_reg_1160;

assign sum8_i_fu_746_p2 = (tmp_74_i_cast_fu_742_p1 + tmp_87_cast_reg_1087);

assign sum_cast_fu_1074_p1 = sum_fu_1068_p2;

assign sum_fu_1068_p2 = ($signed(12'd2693) + $signed(tmp_110_cast_fu_1064_p1));

assign sum_i_cast_fu_596_p1 = sum_i_fu_591_p2;

assign sum_i_fu_591_p2 = (tmp_54_i_cast_fu_588_p1 + tmp_87_cast_reg_1087);

assign tmp_102_cast_fu_915_p1 = i_2_reg_352;

assign tmp_110_cast_fu_1064_p1 = i_3_reg_374;

assign tmp_32_fu_755_p2 = ((i_1_reg_319 == 3'd5) ? 1'b1 : 1'b0);

assign tmp_34_fu_866_p2 = ((k_3_reg_343 < 32'd96) ? 1'b1 : 1'b0);

assign tmp_35_fu_779_p2 = ((j_reg_331 == 9'd256) ? 1'b1 : 1'b0);

assign tmp_37_fu_810_p3 = {{3'd4}, {i_1_reg_319}};

assign tmp_38_cast_fu_791_p1 = j_reg_331;

assign tmp_40_fu_903_p2 = ((i_2_reg_352 == 6'd32) ? 1'b1 : 1'b0);

assign tmp_42_fu_934_p3 = {{tmp_607_fu_930_p1}, {3'd0}};

assign tmp_43_fu_1025_p2 = ((i_3_reg_374 == 4'd8) ? 1'b1 : 1'b0);

assign tmp_44_fu_946_p2 = ((j_1_reg_363 == 4'd8) ? 1'b1 : 1'b0);

assign tmp_45_fu_1041_p3 = {{tmp_608_fu_1037_p1}, {3'd0}};

assign tmp_45_i_cast_cast_fu_497_p3 = ((grp_fu_391_p3[0:0] === 1'b1) ? 24'd8380417 : 24'd0);

assign tmp_46_fu_1049_p1 = tmp_45_fu_1041_p3;

assign tmp_46_i_cast_fu_531_p2 = (tmp_49_cast_fu_513_p3 + tmp_595_fu_521_p1);

assign tmp_46_i_fu_525_p2 = (tmp_592_fu_493_p1 + tmp_45_i_cast_cast_fu_497_p3);

assign tmp_47_fu_1053_p2 = signs_fu_158 >> tmp_46_fu_1049_p1;

assign tmp_47_i_fu_569_p2 = (tmp_590_fu_563_p2 | 8'd1);

assign tmp_49_cast_fu_513_p3 = ((grp_fu_391_p3[0:0] === 1'b1) ? 16'd57345 : 16'd0);

assign tmp_4_i_fu_509_p1 = grp_fu_391_p3;

assign tmp_50_i_cast_cast_fu_605_p3 = ((grp_fu_391_p3[0:0] === 1'b1) ? 20'd1040385 : 20'd0);

assign tmp_51_fu_613_p1 = grp_fu_391_p3;

assign tmp_51_i_cast_fu_627_p2 = (tmp_51_fu_613_p1 + tmp_601_fu_617_p1);

assign tmp_51_i_fu_621_p2 = (tmp_598_fu_601_p1 + tmp_50_i_cast_cast_fu_605_p3);

assign tmp_52_i_fu_537_p2 = (tmp_594_fu_505_p1 + tmp_4_i_fu_509_p1);

assign tmp_53_i_fu_487_p2 = (p_shl_i_cast_fu_483_p1 + i_i_cast9_fu_440_p1);

assign tmp_54_fu_958_p2 = (j_1_cast3_fu_942_p1 + tmp_42_reg_1234);

assign tmp_54_i_cast_fu_588_p1 = tmp_53_i_reg_1116;

assign tmp_55_fu_963_p1 = tmp_54_fu_958_p2;

assign tmp_56_fu_968_p2 = ((c_coeffs_q0 == 23'd0) ? 1'b1 : 1'b0);

assign tmp_57_fu_1013_p2 = 8'd1 << j_1_cast3_reg_1239;

assign tmp_57_i_fu_633_p2 = (10'd1 + tmp_53_i_reg_1116);

assign tmp_586_fu_767_p3 = {{i_1_reg_319}, {8'd0}};

assign tmp_587_fu_460_p4 = {{{i_reg_295}, {tmp_589_fu_456_p1}}, {1'd0}};

assign tmp_588_fu_417_p1 = i_reg_295[1:0];

assign tmp_589_fu_456_p1 = i_i_reg_307[6:0];

assign tmp_58_fu_1018_p2 = (tmp_57_fu_1013_p2 | sig_q0);

assign tmp_58_i_cast_fu_638_p1 = tmp_57_i_fu_633_p2;

assign tmp_590_fu_563_p2 = i_i_reg_307 << 8'd1;

assign tmp_591_fu_470_p1 = tmp_587_fu_460_p4;

assign tmp_592_fu_493_p1 = grp_fu_385_p2[23:0];

assign tmp_593_cast_fu_775_p1 = tmp_586_fu_767_p3;

assign tmp_594_fu_505_p1 = grp_fu_385_p2[7:0];

assign tmp_595_fu_521_p1 = grp_fu_385_p2[15:0];

assign tmp_596_fu_575_p3 = {{i_reg_295}, {tmp_47_i_fu_569_p2}};

assign tmp_597_fu_583_p1 = tmp_596_fu_575_p3;

assign tmp_598_fu_601_p1 = grp_fu_385_p2[19:0];

assign tmp_59_fu_977_p2 = ((c_coeffs_q0 == 23'd8380416) ? 1'b1 : 1'b0);

assign tmp_600_cast_fu_800_p1 = tmp_600_fu_795_p2;

assign tmp_600_fu_795_p2 = (tmp_593_cast_reg_1178 + tmp_38_cast_fu_791_p1);

assign tmp_601_fu_617_p1 = grp_fu_385_p2[11:0];

assign tmp_602_fu_656_p1 = grp_fu_385_p2[3:0];

assign tmp_603_fu_878_p1 = k_3_reg_343[11:0];

assign tmp_604_fu_805_p1 = k_fu_150[7:0];

assign tmp_605_fu_835_p1 = j_reg_331[7:0];

assign tmp_606_fu_846_p1 = k_fu_150[12:0];

assign tmp_607_fu_930_p1 = i_2_reg_352[4:0];

assign tmp_608_fu_1037_p1 = i_3_reg_374[2:0];

assign tmp_609_fu_1059_p1 = tmp_47_fu_1053_p2[7:0];

assign tmp_60_fu_983_p3 = ((tmp_59_fu_977_p2[0:0] === 1'b1) ? mask_fu_154 : 64'd0);

assign tmp_61_i_fu_699_p2 = (10'd2 + tmp_53_i_reg_1116);

assign tmp_62_i_cast_fu_704_p1 = tmp_61_i_fu_699_p2;

assign tmp_63_i_fu_660_p2 = (tmp_602_fu_656_p1 + tmp_7_i_fu_652_p1);

assign tmp_65_i_fu_666_p3 = {{tmp_63_i_fu_660_p2}, {4'd0}};

assign tmp_66_i_fu_674_p2 = (tmp_65_i_fu_666_p3 | tmp_60_i_reg_1135);

assign tmp_69_i_fu_718_p2 = (10'd3 + tmp_53_i_reg_1116);

assign tmp_70_i_cast_fu_723_p1 = tmp_69_i_fu_718_p2;

assign tmp_73_i_fu_737_p2 = (10'd4 + tmp_53_i_reg_1116);

assign tmp_74_i_cast_fu_742_p1 = tmp_73_i_fu_737_p2;

assign tmp_7_i_fu_652_p1 = grp_fu_391_p3;

assign tmp_87_cast_fu_431_p1 = tmp_s_fu_421_p4;

assign tmp_95_cast_fu_818_p1 = $signed(tmp_37_fu_810_p3);

assign tmp_fu_405_p2 = ((i_reg_295 == 3'd4) ? 1'b1 : 1'b0);

assign tmp_i_fu_444_p2 = ((i_i_reg_307 == 8'd128) ? 1'b1 : 1'b0);

assign tmp_s_fu_421_p4 = {{{tmp_588_fu_417_p1}, {tmp_588_fu_417_p1}}, {7'd0}};

always @ (posedge ap_clk) begin
    tmp_87_cast_reg_1087[6:0] <= 7'b0000000;
    tmp_87_cast_reg_1087[11] <= 1'b0;
    tmp_593_cast_reg_1178[7:0] <= 8'b00000000;
    tmp_593_cast_reg_1178[11] <= 1'b0;
    tmp_42_reg_1234[2:0] <= 3'b000;
    j_1_cast3_reg_1239[7:4] <= 4'b0000;
end

endmodule //pack_sig
