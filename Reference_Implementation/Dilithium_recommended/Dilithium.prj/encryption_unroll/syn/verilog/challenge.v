// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module challenge (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        c_coeffs_address0,
        c_coeffs_ce0,
        c_coeffs_we0,
        c_coeffs_d0,
        c_coeffs_q0,
        mu_address0,
        mu_ce0,
        mu_q0,
        w1_vec_coeffs_address0,
        w1_vec_coeffs_ce0,
        w1_vec_coeffs_q0,
        w1_vec_coeffs_address1,
        w1_vec_coeffs_ce1,
        w1_vec_coeffs_q1
);

parameter    ap_ST_fsm_state1 = 19'd1;
parameter    ap_ST_fsm_state2 = 19'd2;
parameter    ap_ST_fsm_state3 = 19'd4;
parameter    ap_ST_fsm_state4 = 19'd8;
parameter    ap_ST_fsm_state5 = 19'd16;
parameter    ap_ST_fsm_state6 = 19'd32;
parameter    ap_ST_fsm_state7 = 19'd64;
parameter    ap_ST_fsm_state8 = 19'd128;
parameter    ap_ST_fsm_state9 = 19'd256;
parameter    ap_ST_fsm_state10 = 19'd512;
parameter    ap_ST_fsm_state11 = 19'd1024;
parameter    ap_ST_fsm_state12 = 19'd2048;
parameter    ap_ST_fsm_state13 = 19'd4096;
parameter    ap_ST_fsm_state14 = 19'd8192;
parameter    ap_ST_fsm_state15 = 19'd16384;
parameter    ap_ST_fsm_state16 = 19'd32768;
parameter    ap_ST_fsm_state17 = 19'd65536;
parameter    ap_ST_fsm_state18 = 19'd131072;
parameter    ap_ST_fsm_state19 = 19'd262144;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [7:0] c_coeffs_address0;
output   c_coeffs_ce0;
output   c_coeffs_we0;
output  [22:0] c_coeffs_d0;
input  [22:0] c_coeffs_q0;
output  [6:0] mu_address0;
output   mu_ce0;
input  [7:0] mu_q0;
output  [10:0] w1_vec_coeffs_address0;
output   w1_vec_coeffs_ce0;
input  [31:0] w1_vec_coeffs_q0;
output  [10:0] w1_vec_coeffs_address1;
output   w1_vec_coeffs_ce1;
input  [31:0] w1_vec_coeffs_q1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[7:0] c_coeffs_address0;
reg c_coeffs_ce0;
reg c_coeffs_we0;
reg[22:0] c_coeffs_d0;
reg mu_ce0;
reg w1_vec_coeffs_ce0;
reg w1_vec_coeffs_ce1;

(* fsm_encoding = "none" *) reg   [18:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [5:0] i_106_fu_367_p2;
reg   [5:0] i_106_reg_657;
wire    ap_CS_fsm_state2;
wire   [0:0] tmp_fu_361_p2;
wire   [2:0] i_107_fu_397_p2;
reg   [2:0] i_107_reg_670;
wire    ap_CS_fsm_state4;
wire   [10:0] p_sum1_cast_fu_417_p1;
reg   [10:0] p_sum1_cast_reg_675;
wire   [0:0] tmp_204_fu_391_p2;
wire   [7:0] i_20_fu_427_p2;
reg   [7:0] i_20_reg_683;
wire    ap_CS_fsm_state5;
wire   [0:0] tmp_i_fu_421_p2;
wire   [10:0] sum_i_fu_481_p2;
reg   [10:0] sum_i_reg_698;
wire   [3:0] i_108_fu_519_p2;
reg   [3:0] i_108_reg_706;
wire    ap_CS_fsm_state10;
wire   [0:0] tmp_206_fu_513_p2;
wire   [63:0] signs_1_fu_556_p2;
wire    ap_CS_fsm_state11;
wire   [8:0] i_109_fu_568_p2;
wire    ap_CS_fsm_state12;
wire   [0:0] tmp_214_fu_585_p2;
reg   [0:0] tmp_214_reg_732;
wire    ap_CS_fsm_state14;
wire   [31:0] pos_5_fu_591_p2;
reg   [31:0] pos_5_reg_736;
wire    ap_CS_fsm_state16;
reg   [7:0] c_coeffs_addr_1_reg_750;
wire    ap_CS_fsm_state17;
wire   [0:0] tmp_216_fu_606_p2;
wire   [0:0] tmp_220_fu_623_p2;
reg   [0:0] tmp_220_reg_755;
wire   [63:0] mask_2_fu_629_p2;
reg   [63:0] mask_2_reg_760;
wire   [8:0] i_110_fu_640_p2;
reg   [8:0] i_110_reg_765;
wire    ap_CS_fsm_state18;
reg   [9:0] inbuf_address0;
reg    inbuf_ce0;
reg    inbuf_we0;
reg   [7:0] inbuf_d0;
wire   [7:0] inbuf_q0;
reg   [7:0] outbuf_address0;
reg    outbuf_ce0;
reg    outbuf_we0;
wire   [7:0] outbuf_q0;
reg   [4:0] state_address0;
reg    state_ce0;
reg    state_we0;
reg   [63:0] state_d0;
wire   [63:0] state_q0;
reg   [4:0] state_address1;
reg    state_ce1;
reg    state_we1;
reg   [63:0] state_d1;
wire   [63:0] state_q1;
wire    grp_keccak_absorb_2_fu_345_ap_start;
wire    grp_keccak_absorb_2_fu_345_ap_done;
wire    grp_keccak_absorb_2_fu_345_ap_idle;
wire    grp_keccak_absorb_2_fu_345_ap_ready;
wire   [4:0] grp_keccak_absorb_2_fu_345_s_address0;
wire    grp_keccak_absorb_2_fu_345_s_ce0;
wire    grp_keccak_absorb_2_fu_345_s_we0;
wire   [63:0] grp_keccak_absorb_2_fu_345_s_d0;
wire   [4:0] grp_keccak_absorb_2_fu_345_s_address1;
wire    grp_keccak_absorb_2_fu_345_s_ce1;
wire    grp_keccak_absorb_2_fu_345_s_we1;
wire   [63:0] grp_keccak_absorb_2_fu_345_s_d1;
wire   [9:0] grp_keccak_absorb_2_fu_345_m_address0;
wire    grp_keccak_absorb_2_fu_345_m_ce0;
wire    grp_keccak_squeezeblocks_2_fu_353_ap_start;
wire    grp_keccak_squeezeblocks_2_fu_353_ap_done;
wire    grp_keccak_squeezeblocks_2_fu_353_ap_idle;
wire    grp_keccak_squeezeblocks_2_fu_353_ap_ready;
wire   [7:0] grp_keccak_squeezeblocks_2_fu_353_h_address0;
wire    grp_keccak_squeezeblocks_2_fu_353_h_ce0;
wire    grp_keccak_squeezeblocks_2_fu_353_h_we0;
wire   [7:0] grp_keccak_squeezeblocks_2_fu_353_h_d0;
wire   [4:0] grp_keccak_squeezeblocks_2_fu_353_s_address0;
wire    grp_keccak_squeezeblocks_2_fu_353_s_ce0;
wire    grp_keccak_squeezeblocks_2_fu_353_s_we0;
wire   [63:0] grp_keccak_squeezeblocks_2_fu_353_s_d0;
wire   [4:0] grp_keccak_squeezeblocks_2_fu_353_s_address1;
wire    grp_keccak_squeezeblocks_2_fu_353_s_ce1;
wire    grp_keccak_squeezeblocks_2_fu_353_s_we1;
wire   [63:0] grp_keccak_squeezeblocks_2_fu_353_s_d1;
reg   [5:0] i_reg_216;
wire    ap_CS_fsm_state3;
reg   [2:0] i_1_reg_228;
reg   [7:0] i_i_reg_240;
wire    ap_CS_fsm_state6;
reg   [3:0] i_2_reg_251;
wire    ap_CS_fsm_state9;
reg   [63:0] signs_reg_263;
reg   [8:0] i_3_reg_275;
wire   [0:0] tmp_212_fu_562_p2;
reg   [8:0] i_4_reg_286;
wire    ap_CS_fsm_state19;
reg   [31:0] pos_reg_298;
reg   [63:0] mask_reg_310;
reg   [31:0] pos_1_reg_322;
wire    ap_CS_fsm_state13;
wire   [0:0] exitcond_fu_579_p2;
reg   [31:0] pos_2_reg_333;
wire    ap_CS_fsm_state15;
reg    ap_block_state15_on_subcall_done;
reg    grp_keccak_absorb_2_fu_345_ap_start_reg;
wire    ap_CS_fsm_state7;
reg    grp_keccak_squeezeblocks_2_fu_353_ap_start_reg;
wire    ap_CS_fsm_state8;
wire   [63:0] sum_cast_fu_381_p1;
wire   [63:0] tmp_s_fu_386_p1;
wire   [63:0] tmp_646_fu_453_p1;
wire   [63:0] tmp_648_fu_472_p1;
wire   [63:0] sum_i_cast_fu_509_p1;
wire   [63:0] tmp_207_fu_525_p1;
wire   [63:0] tmp_213_fu_574_p1;
wire   [63:0] tmp_215_fu_597_p1;
wire   [63:0] tmp_217_fu_612_p1;
wire   [63:0] tmp_218_fu_635_p1;
wire   [7:0] tmp_78_i_fu_502_p2;
wire   [22:0] tmp_318_cast_cast_ca_fu_646_p3;
wire   [6:0] sum1_fu_373_p3;
wire   [9:0] tmp_205_fu_403_p3;
wire   [9:0] p_sum1_fu_411_p2;
wire   [6:0] tmp_691_fu_433_p1;
wire   [10:0] tmp_645_fu_443_p4;
wire   [7:0] tmp_692_fu_437_p2;
wire   [7:0] tmp_76_i_fu_458_p2;
wire   [10:0] tmp_647_fu_464_p3;
wire   [10:0] tmp_79_i_cast_fu_477_p1;
wire   [3:0] tmp_694_fu_490_p1;
wire   [7:0] tmp_11_i_fu_494_p3;
wire   [7:0] tmp_693_fu_486_p1;
wire   [2:0] tmp_690_fu_534_p1;
wire   [5:0] tmp_209_fu_538_p3;
wire   [63:0] tmp_208_fu_530_p1;
wire   [63:0] tmp_210_fu_546_p1;
wire   [63:0] tmp_211_fu_550_p2;
wire   [8:0] b_cast_fu_602_p1;
wire   [63:0] tmp_219_fu_617_p2;
reg   [18:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 19'd1;
#0 grp_keccak_absorb_2_fu_345_ap_start_reg = 1'b0;
#0 grp_keccak_squeezeblocks_2_fu_353_ap_start_reg = 1'b0;
end

challenge_inbuf #(
    .DataWidth( 8 ),
    .AddressRange( 688 ),
    .AddressWidth( 10 ))
inbuf_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(inbuf_address0),
    .ce0(inbuf_ce0),
    .we0(inbuf_we0),
    .d0(inbuf_d0),
    .q0(inbuf_q0)
);

challenge_outbuf #(
    .DataWidth( 8 ),
    .AddressRange( 136 ),
    .AddressWidth( 8 ))
outbuf_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(outbuf_address0),
    .ce0(outbuf_ce0),
    .we0(outbuf_we0),
    .d0(grp_keccak_squeezeblocks_2_fu_353_h_d0),
    .q0(outbuf_q0)
);

challenge_state #(
    .DataWidth( 64 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
state_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(state_address0),
    .ce0(state_ce0),
    .we0(state_we0),
    .d0(state_d0),
    .q0(state_q0),
    .address1(state_address1),
    .ce1(state_ce1),
    .we1(state_we1),
    .d1(state_d1),
    .q1(state_q1)
);

keccak_absorb_2 grp_keccak_absorb_2_fu_345(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_keccak_absorb_2_fu_345_ap_start),
    .ap_done(grp_keccak_absorb_2_fu_345_ap_done),
    .ap_idle(grp_keccak_absorb_2_fu_345_ap_idle),
    .ap_ready(grp_keccak_absorb_2_fu_345_ap_ready),
    .s_address0(grp_keccak_absorb_2_fu_345_s_address0),
    .s_ce0(grp_keccak_absorb_2_fu_345_s_ce0),
    .s_we0(grp_keccak_absorb_2_fu_345_s_we0),
    .s_d0(grp_keccak_absorb_2_fu_345_s_d0),
    .s_q0(state_q0),
    .s_address1(grp_keccak_absorb_2_fu_345_s_address1),
    .s_ce1(grp_keccak_absorb_2_fu_345_s_ce1),
    .s_we1(grp_keccak_absorb_2_fu_345_s_we1),
    .s_d1(grp_keccak_absorb_2_fu_345_s_d1),
    .s_q1(state_q1),
    .m_address0(grp_keccak_absorb_2_fu_345_m_address0),
    .m_ce0(grp_keccak_absorb_2_fu_345_m_ce0),
    .m_q0(inbuf_q0)
);

keccak_squeezeblocks_2 grp_keccak_squeezeblocks_2_fu_353(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_keccak_squeezeblocks_2_fu_353_ap_start),
    .ap_done(grp_keccak_squeezeblocks_2_fu_353_ap_done),
    .ap_idle(grp_keccak_squeezeblocks_2_fu_353_ap_idle),
    .ap_ready(grp_keccak_squeezeblocks_2_fu_353_ap_ready),
    .h_address0(grp_keccak_squeezeblocks_2_fu_353_h_address0),
    .h_ce0(grp_keccak_squeezeblocks_2_fu_353_h_ce0),
    .h_we0(grp_keccak_squeezeblocks_2_fu_353_h_we0),
    .h_d0(grp_keccak_squeezeblocks_2_fu_353_h_d0),
    .s_address0(grp_keccak_squeezeblocks_2_fu_353_s_address0),
    .s_ce0(grp_keccak_squeezeblocks_2_fu_353_s_ce0),
    .s_we0(grp_keccak_squeezeblocks_2_fu_353_s_we0),
    .s_d0(grp_keccak_squeezeblocks_2_fu_353_s_d0),
    .s_q0(state_q0),
    .s_address1(grp_keccak_squeezeblocks_2_fu_353_s_address1),
    .s_ce1(grp_keccak_squeezeblocks_2_fu_353_s_ce1),
    .s_we1(grp_keccak_squeezeblocks_2_fu_353_s_we1),
    .s_d1(grp_keccak_squeezeblocks_2_fu_353_s_d1),
    .s_q1(state_q1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_keccak_absorb_2_fu_345_ap_start_reg <= 1'b0;
    end else begin
        if (((tmp_204_fu_391_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
            grp_keccak_absorb_2_fu_345_ap_start_reg <= 1'b1;
        end else if ((grp_keccak_absorb_2_fu_345_ap_ready == 1'b1)) begin
            grp_keccak_absorb_2_fu_345_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_keccak_squeezeblocks_2_fu_353_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state8) | ((1'b1 == ap_CS_fsm_state14) & (tmp_214_fu_585_p2 == 1'd1)))) begin
            grp_keccak_squeezeblocks_2_fu_353_ap_start_reg <= 1'b1;
        end else if ((grp_keccak_squeezeblocks_2_fu_353_ap_ready == 1'b1)) begin
            grp_keccak_squeezeblocks_2_fu_353_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_fu_361_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        i_1_reg_228 <= 3'd0;
    end else if (((tmp_i_fu_421_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        i_1_reg_228 <= i_107_reg_670;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        i_2_reg_251 <= i_108_reg_706;
    end else if (((grp_keccak_squeezeblocks_2_fu_353_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state9))) begin
        i_2_reg_251 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) & (tmp_206_fu_513_p2 == 1'd1))) begin
        i_3_reg_275 <= 9'd0;
    end else if (((tmp_212_fu_562_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state12))) begin
        i_3_reg_275 <= i_109_fu_568_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_212_fu_562_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state12))) begin
        i_4_reg_286 <= 9'd196;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        i_4_reg_286 <= i_110_reg_765;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        i_i_reg_240 <= i_20_reg_683;
    end else if (((tmp_204_fu_391_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        i_i_reg_240 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        i_reg_216 <= i_106_reg_657;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_reg_216 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_212_fu_562_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state12))) begin
        mask_reg_310 <= 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        mask_reg_310 <= mask_2_reg_760;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_fu_579_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state13))) begin
        pos_1_reg_322 <= pos_reg_298;
    end else if (((1'b1 == ap_CS_fsm_state17) & (tmp_216_fu_606_p2 == 1'd1))) begin
        pos_1_reg_322 <= pos_5_reg_736;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_214_fu_585_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state14))) begin
        pos_2_reg_333 <= pos_1_reg_322;
    end else if (((1'b0 == ap_block_state15_on_subcall_done) & (1'b1 == ap_CS_fsm_state15) & (tmp_214_reg_732 == 1'd1))) begin
        pos_2_reg_333 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_212_fu_562_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state12))) begin
        pos_reg_298 <= 32'd8;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        pos_reg_298 <= pos_5_reg_736;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        signs_reg_263 <= signs_1_fu_556_p2;
    end else if (((grp_keccak_squeezeblocks_2_fu_353_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state9))) begin
        signs_reg_263 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_216_fu_606_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state17))) begin
        c_coeffs_addr_1_reg_750 <= tmp_217_fu_612_p1;
        mask_2_reg_760[63 : 1] <= mask_2_fu_629_p2[63 : 1];
        tmp_220_reg_755 <= tmp_220_fu_623_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_106_reg_657 <= i_106_fu_367_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        i_107_reg_670 <= i_107_fu_397_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        i_108_reg_706 <= i_108_fu_519_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        i_110_reg_765 <= i_110_fu_640_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        i_20_reg_683 <= i_20_fu_427_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_204_fu_391_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        p_sum1_cast_reg_675[9 : 7] <= p_sum1_cast_fu_417_p1[9 : 7];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        pos_5_reg_736 <= pos_5_fu_591_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_i_fu_421_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        sum_i_reg_698 <= sum_i_fu_481_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        tmp_214_reg_732 <= tmp_214_fu_585_p2;
    end
end

always @ (*) begin
    if ((((exitcond_fu_579_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state13)) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_fu_579_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state13))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        c_coeffs_address0 = c_coeffs_addr_1_reg_750;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        c_coeffs_address0 = tmp_218_fu_635_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        c_coeffs_address0 = tmp_217_fu_612_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        c_coeffs_address0 = tmp_213_fu_574_p1;
    end else begin
        c_coeffs_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state12))) begin
        c_coeffs_ce0 = 1'b1;
    end else begin
        c_coeffs_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        c_coeffs_d0 = tmp_318_cast_cast_ca_fu_646_p3;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        c_coeffs_d0 = c_coeffs_q0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        c_coeffs_d0 = 23'd0;
    end else begin
        c_coeffs_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | ((tmp_212_fu_562_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state12)))) begin
        c_coeffs_we0 = 1'b1;
    end else begin
        c_coeffs_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        inbuf_address0 = sum_i_cast_fu_509_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        inbuf_address0 = tmp_s_fu_386_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        inbuf_address0 = grp_keccak_absorb_2_fu_345_m_address0;
    end else begin
        inbuf_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state3))) begin
        inbuf_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        inbuf_ce0 = grp_keccak_absorb_2_fu_345_m_ce0;
    end else begin
        inbuf_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        inbuf_d0 = tmp_78_i_fu_502_p2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        inbuf_d0 = mu_q0;
    end else begin
        inbuf_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state3))) begin
        inbuf_we0 = 1'b1;
    end else begin
        inbuf_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        mu_ce0 = 1'b1;
    end else begin
        mu_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        outbuf_address0 = tmp_215_fu_597_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        outbuf_address0 = tmp_207_fu_525_p1;
    end else if (((1'b1 == ap_CS_fsm_state9) | ((1'b1 == ap_CS_fsm_state15) & (tmp_214_reg_732 == 1'd1)))) begin
        outbuf_address0 = grp_keccak_squeezeblocks_2_fu_353_h_address0;
    end else begin
        outbuf_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state10))) begin
        outbuf_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state9) | ((1'b1 == ap_CS_fsm_state15) & (tmp_214_reg_732 == 1'd1)))) begin
        outbuf_ce0 = grp_keccak_squeezeblocks_2_fu_353_h_ce0;
    end else begin
        outbuf_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | ((1'b1 == ap_CS_fsm_state15) & (tmp_214_reg_732 == 1'd1)))) begin
        outbuf_we0 = grp_keccak_squeezeblocks_2_fu_353_h_we0;
    end else begin
        outbuf_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | ((1'b1 == ap_CS_fsm_state15) & (tmp_214_reg_732 == 1'd1)))) begin
        state_address0 = grp_keccak_squeezeblocks_2_fu_353_s_address0;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        state_address0 = grp_keccak_absorb_2_fu_345_s_address0;
    end else begin
        state_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | ((1'b1 == ap_CS_fsm_state15) & (tmp_214_reg_732 == 1'd1)))) begin
        state_address1 = grp_keccak_squeezeblocks_2_fu_353_s_address1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        state_address1 = grp_keccak_absorb_2_fu_345_s_address1;
    end else begin
        state_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | ((1'b1 == ap_CS_fsm_state15) & (tmp_214_reg_732 == 1'd1)))) begin
        state_ce0 = grp_keccak_squeezeblocks_2_fu_353_s_ce0;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        state_ce0 = grp_keccak_absorb_2_fu_345_s_ce0;
    end else begin
        state_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | ((1'b1 == ap_CS_fsm_state15) & (tmp_214_reg_732 == 1'd1)))) begin
        state_ce1 = grp_keccak_squeezeblocks_2_fu_353_s_ce1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        state_ce1 = grp_keccak_absorb_2_fu_345_s_ce1;
    end else begin
        state_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | ((1'b1 == ap_CS_fsm_state15) & (tmp_214_reg_732 == 1'd1)))) begin
        state_d0 = grp_keccak_squeezeblocks_2_fu_353_s_d0;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        state_d0 = grp_keccak_absorb_2_fu_345_s_d0;
    end else begin
        state_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | ((1'b1 == ap_CS_fsm_state15) & (tmp_214_reg_732 == 1'd1)))) begin
        state_d1 = grp_keccak_squeezeblocks_2_fu_353_s_d1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        state_d1 = grp_keccak_absorb_2_fu_345_s_d1;
    end else begin
        state_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | ((1'b1 == ap_CS_fsm_state15) & (tmp_214_reg_732 == 1'd1)))) begin
        state_we0 = grp_keccak_squeezeblocks_2_fu_353_s_we0;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        state_we0 = grp_keccak_absorb_2_fu_345_s_we0;
    end else begin
        state_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | ((1'b1 == ap_CS_fsm_state15) & (tmp_214_reg_732 == 1'd1)))) begin
        state_we1 = grp_keccak_squeezeblocks_2_fu_353_s_we1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        state_we1 = grp_keccak_absorb_2_fu_345_s_we1;
    end else begin
        state_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        w1_vec_coeffs_ce0 = 1'b1;
    end else begin
        w1_vec_coeffs_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        w1_vec_coeffs_ce1 = 1'b1;
    end else begin
        w1_vec_coeffs_ce1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((tmp_fu_361_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        ap_ST_fsm_state4 : begin
            if (((tmp_204_fu_391_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((tmp_i_fu_421_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state7 : begin
            if (((grp_keccak_absorb_2_fu_345_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            if (((grp_keccak_squeezeblocks_2_fu_353_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state9))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state10 : begin
            if (((1'b1 == ap_CS_fsm_state10) & (tmp_206_fu_513_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state12 : begin
            if (((tmp_212_fu_562_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state12))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state13 : begin
            if (((exitcond_fu_579_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state13))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            if (((1'b0 == ap_block_state15_on_subcall_done) & (1'b1 == ap_CS_fsm_state15))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            if (((tmp_216_fu_606_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state17))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state15_on_subcall_done = ((grp_keccak_squeezeblocks_2_fu_353_ap_done == 1'b0) & (tmp_214_reg_732 == 1'd1));
end

assign b_cast_fu_602_p1 = outbuf_q0;

assign exitcond_fu_579_p2 = ((i_4_reg_286 == 9'd256) ? 1'b1 : 1'b0);

assign grp_keccak_absorb_2_fu_345_ap_start = grp_keccak_absorb_2_fu_345_ap_start_reg;

assign grp_keccak_squeezeblocks_2_fu_353_ap_start = grp_keccak_squeezeblocks_2_fu_353_ap_start_reg;

assign i_106_fu_367_p2 = (i_reg_216 + 6'd1);

assign i_107_fu_397_p2 = (i_1_reg_228 + 3'd1);

assign i_108_fu_519_p2 = (i_2_reg_251 + 4'd1);

assign i_109_fu_568_p2 = (i_3_reg_275 + 9'd1);

assign i_110_fu_640_p2 = (9'd1 + i_4_reg_286);

assign i_20_fu_427_p2 = (i_i_reg_240 + 8'd1);

assign mask_2_fu_629_p2 = mask_reg_310 << 64'd1;

assign mu_address0 = sum_cast_fu_381_p1;

assign p_sum1_cast_fu_417_p1 = p_sum1_fu_411_p2;

assign p_sum1_fu_411_p2 = (tmp_205_fu_403_p3 | 10'd48);

assign pos_5_fu_591_p2 = (pos_2_reg_333 + 32'd1);

assign signs_1_fu_556_p2 = (tmp_211_fu_550_p2 | signs_reg_263);

assign sum1_fu_373_p3 = {{1'd1}, {i_reg_216}};

assign sum_cast_fu_381_p1 = sum1_fu_373_p3;

assign sum_i_cast_fu_509_p1 = sum_i_reg_698;

assign sum_i_fu_481_p2 = (tmp_79_i_cast_fu_477_p1 + p_sum1_cast_reg_675);

assign tmp_11_i_fu_494_p3 = {{tmp_694_fu_490_p1}, {4'd0}};

assign tmp_204_fu_391_p2 = ((i_1_reg_228 == 3'd5) ? 1'b1 : 1'b0);

assign tmp_205_fu_403_p3 = {{i_1_reg_228}, {7'd0}};

assign tmp_206_fu_513_p2 = ((i_2_reg_251 == 4'd8) ? 1'b1 : 1'b0);

assign tmp_207_fu_525_p1 = i_2_reg_251;

assign tmp_208_fu_530_p1 = outbuf_q0;

assign tmp_209_fu_538_p3 = {{tmp_690_fu_534_p1}, {3'd0}};

assign tmp_210_fu_546_p1 = tmp_209_fu_538_p3;

assign tmp_211_fu_550_p2 = tmp_208_fu_530_p1 << tmp_210_fu_546_p1;

assign tmp_212_fu_562_p2 = ((i_3_reg_275 == 9'd256) ? 1'b1 : 1'b0);

assign tmp_213_fu_574_p1 = i_3_reg_275;

assign tmp_214_fu_585_p2 = ((pos_1_reg_322 > 32'd135) ? 1'b1 : 1'b0);

assign tmp_215_fu_597_p1 = pos_2_reg_333;

assign tmp_216_fu_606_p2 = ((b_cast_fu_602_p1 > i_4_reg_286) ? 1'b1 : 1'b0);

assign tmp_217_fu_612_p1 = outbuf_q0;

assign tmp_218_fu_635_p1 = i_4_reg_286;

assign tmp_219_fu_617_p2 = (signs_reg_263 & mask_reg_310);

assign tmp_220_fu_623_p2 = ((tmp_219_fu_617_p2 != 64'd0) ? 1'b1 : 1'b0);

assign tmp_318_cast_cast_ca_fu_646_p3 = ((tmp_220_reg_755[0:0] === 1'b1) ? 23'd8380416 : 23'd1);

assign tmp_645_fu_443_p4 = {{{i_1_reg_228}, {tmp_691_fu_433_p1}}, {1'd0}};

assign tmp_646_fu_453_p1 = tmp_645_fu_443_p4;

assign tmp_647_fu_464_p3 = {{i_1_reg_228}, {tmp_76_i_fu_458_p2}};

assign tmp_648_fu_472_p1 = tmp_647_fu_464_p3;

assign tmp_690_fu_534_p1 = i_2_reg_251[2:0];

assign tmp_691_fu_433_p1 = i_i_reg_240[6:0];

assign tmp_692_fu_437_p2 = i_i_reg_240 << 8'd1;

assign tmp_693_fu_486_p1 = w1_vec_coeffs_q0[7:0];

assign tmp_694_fu_490_p1 = w1_vec_coeffs_q1[3:0];

assign tmp_76_i_fu_458_p2 = (tmp_692_fu_437_p2 | 8'd1);

assign tmp_78_i_fu_502_p2 = (tmp_693_fu_486_p1 | tmp_11_i_fu_494_p3);

assign tmp_79_i_cast_fu_477_p1 = i_i_reg_240;

assign tmp_fu_361_p2 = ((i_reg_216 == 6'd48) ? 1'b1 : 1'b0);

assign tmp_i_fu_421_p2 = ((i_i_reg_240 == 8'd128) ? 1'b1 : 1'b0);

assign tmp_s_fu_386_p1 = i_reg_216;

assign w1_vec_coeffs_address0 = tmp_646_fu_453_p1;

assign w1_vec_coeffs_address1 = tmp_648_fu_472_p1;

always @ (posedge ap_clk) begin
    p_sum1_cast_reg_675[6:0] <= 7'b0110000;
    p_sum1_cast_reg_675[10] <= 1'b0;
    mask_2_reg_760[0] <= 1'b0;
end

endmodule //challenge
