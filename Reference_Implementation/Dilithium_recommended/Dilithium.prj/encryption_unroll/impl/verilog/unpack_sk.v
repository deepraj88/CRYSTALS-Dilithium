// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module unpack_sk (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        rho_address0,
        rho_ce0,
        rho_we0,
        rho_d0,
        tr_address0,
        tr_ce0,
        tr_we0,
        tr_d0,
        s1_vec_coeffs_address0,
        s1_vec_coeffs_ce0,
        s1_vec_coeffs_we0,
        s1_vec_coeffs_d0,
        s1_vec_coeffs_address1,
        s1_vec_coeffs_ce1,
        s1_vec_coeffs_we1,
        s1_vec_coeffs_d1,
        s2_vec_coeffs_address0,
        s2_vec_coeffs_ce0,
        s2_vec_coeffs_we0,
        s2_vec_coeffs_d0,
        s2_vec_coeffs_address1,
        s2_vec_coeffs_ce1,
        s2_vec_coeffs_we1,
        s2_vec_coeffs_d1,
        t0_vec_coeffs_address0,
        t0_vec_coeffs_ce0,
        t0_vec_coeffs_we0,
        t0_vec_coeffs_d0,
        sk_address0,
        sk_ce0,
        sk_q0,
        sk_address1,
        sk_ce1,
        sk_q1
);

parameter    ap_ST_fsm_state1 = 19'd1;
parameter    ap_ST_fsm_state2 = 19'd2;
parameter    ap_ST_fsm_state3 = 19'd4;
parameter    ap_ST_fsm_state4 = 19'd8;
parameter    ap_ST_fsm_state5 = 19'd16;
parameter    ap_ST_fsm_state6 = 19'd32;
parameter    ap_ST_fsm_state7 = 19'd64;
parameter    ap_ST_fsm_state8 = 19'd128;
parameter    ap_ST_fsm_state9 = 19'd256;
parameter    ap_ST_fsm_state10 = 19'd512;
parameter    ap_ST_fsm_state11 = 19'd1024;
parameter    ap_ST_fsm_state12 = 19'd2048;
parameter    ap_ST_fsm_state13 = 19'd4096;
parameter    ap_ST_fsm_state14 = 19'd8192;
parameter    ap_ST_fsm_state15 = 19'd16384;
parameter    ap_ST_fsm_state16 = 19'd32768;
parameter    ap_ST_fsm_state17 = 19'd65536;
parameter    ap_ST_fsm_state18 = 19'd131072;
parameter    ap_ST_fsm_state19 = 19'd262144;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [6:0] rho_address0;
output   rho_ce0;
output   rho_we0;
output  [7:0] rho_d0;
output  [11:0] tr_address0;
output   tr_ce0;
output   tr_we0;
output  [7:0] tr_d0;
output  [9:0] s1_vec_coeffs_address0;
output   s1_vec_coeffs_ce0;
output   s1_vec_coeffs_we0;
output  [31:0] s1_vec_coeffs_d0;
output  [9:0] s1_vec_coeffs_address1;
output   s1_vec_coeffs_ce1;
output   s1_vec_coeffs_we1;
output  [31:0] s1_vec_coeffs_d1;
output  [10:0] s2_vec_coeffs_address0;
output   s2_vec_coeffs_ce0;
output   s2_vec_coeffs_we0;
output  [31:0] s2_vec_coeffs_d0;
output  [10:0] s2_vec_coeffs_address1;
output   s2_vec_coeffs_ce1;
output   s2_vec_coeffs_we1;
output  [31:0] s2_vec_coeffs_d1;
output  [10:0] t0_vec_coeffs_address0;
output   t0_vec_coeffs_ce0;
output   t0_vec_coeffs_we0;
output  [31:0] t0_vec_coeffs_d0;
output  [11:0] sk_address0;
output   sk_ce0;
input  [7:0] sk_q0;
output  [11:0] sk_address1;
output   sk_ce1;
input  [7:0] sk_q1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[6:0] rho_address0;
reg rho_ce0;
reg rho_we0;
reg tr_ce0;
reg tr_we0;
reg s1_vec_coeffs_ce0;
reg s1_vec_coeffs_we0;
reg s1_vec_coeffs_ce1;
reg s1_vec_coeffs_we1;
reg s2_vec_coeffs_ce0;
reg s2_vec_coeffs_we0;
reg s2_vec_coeffs_ce1;
reg s2_vec_coeffs_we1;
reg[10:0] t0_vec_coeffs_address0;
reg t0_vec_coeffs_ce0;
reg t0_vec_coeffs_we0;
reg[31:0] t0_vec_coeffs_d0;
reg[11:0] sk_address0;
reg sk_ce0;
reg[11:0] sk_address1;
reg sk_ce1;

(* fsm_encoding = "none" *) reg   [18:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [7:0] reg_487;
wire    ap_CS_fsm_state16;
wire    ap_CS_fsm_state17;
wire   [5:0] i_6_fu_498_p2;
reg   [5:0] i_6_reg_1342;
wire    ap_CS_fsm_state2;
wire   [63:0] tmp_1_fu_504_p1;
reg   [63:0] tmp_1_reg_1347;
wire   [0:0] tmp_fu_492_p2;
wire   [5:0] i_7_fu_515_p2;
reg   [5:0] i_7_reg_1360;
wire    ap_CS_fsm_state4;
wire   [63:0] sum2_cast_fu_527_p1;
reg   [63:0] sum2_cast_reg_1365;
wire   [0:0] tmp_3_fu_509_p2;
wire   [5:0] i_8_fu_538_p2;
reg   [5:0] i_8_reg_1378;
wire    ap_CS_fsm_state6;
wire   [0:0] tmp_6_fu_532_p2;
wire   [2:0] i_9_fu_578_p2;
reg   [2:0] i_9_reg_1391;
wire    ap_CS_fsm_state8;
wire   [9:0] p_sum2_cast_fu_602_p1;
reg   [9:0] p_sum2_cast_reg_1396;
wire   [0:0] tmp_9_fu_572_p2;
wire   [7:0] i_15_fu_612_p2;
reg   [7:0] i_15_reg_1404;
wire    ap_CS_fsm_state9;
wire   [0:0] tmp_i_fu_606_p2;
wire   [2:0] i_11_fu_724_p2;
reg   [2:0] i_11_reg_1417;
wire    ap_CS_fsm_state11;
wire   [10:0] tmp_12_cast_fu_738_p1;
reg   [10:0] tmp_12_cast_reg_1422;
wire   [0:0] tmp_8_fu_718_p2;
wire   [7:0] i_17_fu_748_p2;
reg   [7:0] i_17_reg_1430;
wire    ap_CS_fsm_state12;
wire   [0:0] tmp_i2_fu_742_p2;
wire   [2:0] i_16_fu_870_p2;
reg   [2:0] i_16_reg_1443;
wire    ap_CS_fsm_state14;
wire   [12:0] sum_cast_fu_906_p2;
reg   [12:0] sum_cast_reg_1448;
wire   [0:0] tmp_7_fu_864_p2;
wire   [6:0] i_18_fu_922_p2;
reg   [6:0] i_18_reg_1462;
wire    ap_CS_fsm_state15;
wire   [5:0] tmp_28_fu_928_p1;
reg   [5:0] tmp_28_reg_1467;
wire   [0:0] tmp_i3_fu_916_p2;
wire  signed [9:0] tmp_i4_fu_944_p2;
reg  signed [9:0] tmp_i4_reg_1473;
wire   [7:0] tmp_41_i_fu_1063_p3;
reg   [7:0] tmp_41_i_reg_1502;
wire   [12:0] sum5_i5_fu_1188_p2;
reg   [12:0] sum5_i5_reg_1518;
reg   [5:0] tmp_75_i_reg_1523;
wire    ap_CS_fsm_state18;
reg   [5:0] i_reg_372;
wire    ap_CS_fsm_state3;
reg   [5:0] i_1_reg_383;
wire    ap_CS_fsm_state5;
reg   [5:0] i_2_reg_394;
wire    ap_CS_fsm_state7;
reg   [2:0] i_3_reg_406;
reg   [7:0] i_i_reg_418;
wire    ap_CS_fsm_state10;
reg   [2:0] i_4_reg_430;
reg   [7:0] i_i1_reg_442;
wire    ap_CS_fsm_state13;
reg   [2:0] i_5_reg_454;
reg   [6:0] i_i2_reg_466;
wire    ap_CS_fsm_state19;
wire   [63:0] sum4_cast_fu_552_p1;
wire   [63:0] sum6_cast_fu_567_p1;
wire   [63:0] sum5_i_cast_fu_627_p1;
wire   [63:0] tmp_18_fu_660_p1;
wire   [63:0] tmp_20_fu_683_p1;
wire   [63:0] sum5_i4_cast_fu_773_p1;
wire   [63:0] tmp_24_fu_806_p1;
wire   [63:0] tmp_26_fu_829_p1;
wire  signed [63:0] sum9_i_cast_fu_959_p1;
wire  signed [63:0] sum_i_cast_fu_979_p1;
wire   [63:0] tmp_30_fu_993_p1;
wire  signed [63:0] sum1_i_cast_fu_1028_p1;
wire  signed [63:0] sum2_i_cast_fu_1047_p1;
wire   [63:0] tmp_33_fu_1098_p1;
wire  signed [63:0] sum3_i_cast_fu_1155_p1;
wire  signed [63:0] sum4_i_cast_fu_1174_p1;
wire   [63:0] tmp_36_fu_1231_p1;
wire  signed [63:0] sum5_i5_cast_fu_1284_p1;
wire   [63:0] tmp_38_fu_1312_p1;
wire   [31:0] tmp_83_i_cast_fu_1058_p1;
wire   [31:0] tmp_84_i_cast_fu_1199_p1;
wire   [31:0] tmp_85_i_cast_fu_1294_p1;
wire   [31:0] tmp_86_i_cast_fu_1334_p1;
wire   [5:0] sum2_fu_521_p2;
wire   [6:0] sum_fu_544_p3;
wire   [11:0] tmp_7_cast1_fu_557_p1;
wire   [11:0] sum6_fu_561_p2;
wire   [1:0] tmp_4_fu_584_p1;
wire   [8:0] tmp_2_fu_588_p3;
wire   [8:0] p_sum2_fu_596_p2;
wire   [9:0] tmp_i_cast_fu_618_p1;
wire   [9:0] sum5_i_fu_622_p2;
wire   [3:0] tmp_10_fu_632_p1;
wire   [6:0] tmp_11_fu_640_p1;
wire   [10:0] tmp_17_fu_650_p4;
wire   [3:0] grp_fu_477_p4;
wire   [7:0] tmp_14_fu_644_p2;
wire   [7:0] tmp_138_i_fu_669_p2;
wire   [10:0] tmp_19_fu_675_p3;
wire   [14:0] tmp_134_i_cast_cast_fu_636_p1;
wire   [14:0] tmp_140_i_fu_688_p2;
wire  signed [22:0] tmp_140_i_cast1_fu_694_p1;
wire   [14:0] tmp_137_i_cast_cast_fu_665_p1;
wire   [14:0] tmp_141_i_fu_703_p2;
wire  signed [22:0] tmp_141_i_cast1_fu_709_p1;
wire   [9:0] tmp_5_fu_730_p3;
wire   [9:0] tmp_i3_cast_fu_754_p1;
wire   [9:0] tmp6_fu_758_p2;
wire   [10:0] tmp6_cast_fu_764_p1;
wire   [10:0] sum5_i4_fu_768_p2;
wire   [3:0] tmp_21_fu_778_p1;
wire   [6:0] tmp_22_fu_786_p1;
wire   [10:0] tmp_23_fu_796_p4;
wire   [7:0] tmp_27_fu_790_p2;
wire   [7:0] tmp_147_i_fu_815_p2;
wire   [10:0] tmp_25_fu_821_p3;
wire   [14:0] tmp_143_i_cast_cast_fu_782_p1;
wire   [14:0] tmp_149_i_fu_834_p2;
wire  signed [22:0] tmp_149_i_cast1_fu_840_p1;
wire   [14:0] tmp_146_i_cast_cast_fu_811_p1;
wire   [14:0] tmp_150_i_fu_849_p2;
wire  signed [22:0] tmp_150_i_cast1_fu_855_p1;
wire   [11:0] p_shl_fu_876_p3;
wire   [8:0] p_shl8_fu_888_p3;
wire   [12:0] p_shl_cast_fu_884_p1;
wire   [12:0] p_shl8_cast_fu_896_p1;
wire   [12:0] tmp_s_fu_900_p2;
wire   [8:0] p_shl_i_fu_932_p3;
wire   [9:0] p_shl_i_cast_fu_940_p1;
wire   [9:0] i_i2_cast1_fu_912_p1;
wire  signed [12:0] tmp_40_i_cast_fu_950_p1;
wire   [12:0] sum9_i_fu_954_p2;
wire   [9:0] tmp_43_i_fu_964_p2;
wire  signed [12:0] tmp_44_i_cast_fu_970_p1;
wire   [12:0] sum_i_fu_974_p2;
wire   [10:0] tmp_29_fu_984_p4;
wire   [5:0] tmp_39_fu_998_p1;
wire   [13:0] tmp_15_i_fu_1002_p3;
wire   [9:0] tmp_50_i_fu_1014_p2;
wire  signed [12:0] tmp_51_i_cast_fu_1019_p1;
wire   [12:0] sum1_i_fu_1023_p2;
wire   [9:0] tmp_55_i_fu_1033_p2;
wire  signed [12:0] tmp_56_i_cast_fu_1038_p1;
wire   [12:0] sum2_i_fu_1042_p2;
wire   [23:0] tmp_46_i_cast_fu_1010_p1;
wire   [23:0] tmp_83_i_fu_1052_p2;
wire   [1:0] tmp_47_i_fu_1070_p4;
wire   [7:0] tmp_48_i_fu_1084_p2;
wire   [10:0] tmp_32_fu_1090_p3;
wire   [7:0] tmp_31_fu_1080_p1;
wire   [9:0] tmp_12_fu_1115_p3;
wire   [9:0] tmp_53_i_fu_1103_p3;
wire   [3:0] tmp_40_fu_1111_p1;
wire   [9:0] tmp_13_fu_1123_p2;
wire   [13:0] tmp_60_i_fu_1129_p3;
wire   [9:0] tmp_64_i_fu_1141_p2;
wire  signed [12:0] tmp_65_i_cast_fu_1146_p1;
wire   [12:0] sum3_i_fu_1150_p2;
wire   [9:0] tmp_69_i_fu_1160_p2;
wire  signed [12:0] tmp_70_i_cast_fu_1165_p1;
wire   [12:0] sum4_i_fu_1169_p2;
wire   [9:0] tmp_78_i_fu_1179_p2;
wire  signed [12:0] tmp_79_i_cast_fu_1184_p1;
wire   [23:0] tmp_60_i_cast_fu_1137_p1;
wire   [23:0] tmp_84_i_fu_1193_p2;
wire   [3:0] tmp_61_i_fu_1204_p4;
wire   [7:0] tmp_62_i_fu_1218_p2;
wire   [10:0] tmp_35_fu_1223_p3;
wire   [7:0] tmp_34_fu_1214_p1;
wire   [11:0] tmp_15_fu_1248_p3;
wire   [11:0] tmp_67_i_fu_1236_p3;
wire   [1:0] tmp_41_fu_1244_p1;
wire   [11:0] tmp_16_fu_1256_p2;
wire   [13:0] tmp_74_i_fu_1262_p3;
wire   [23:0] tmp_74_i_cast_fu_1270_p1;
wire   [23:0] tmp_85_i_fu_1288_p2;
wire   [7:0] tmp_76_i_fu_1299_p2;
wire   [10:0] tmp_37_fu_1304_p3;
wire   [13:0] tmp_82_i_fu_1317_p3;
wire   [23:0] tmp_82_i_cast_fu_1324_p1;
wire   [23:0] tmp_86_i_fu_1328_p2;
reg   [18:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 19'd1;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (tmp_fu_492_p2 == 1'd1))) begin
        i_1_reg_383 <= 6'd0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        i_1_reg_383 <= i_7_reg_1360;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (tmp_3_fu_509_p2 == 1'd1))) begin
        i_2_reg_394 <= 6'd0;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        i_2_reg_394 <= i_8_reg_1378;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (tmp_6_fu_532_p2 == 1'd1))) begin
        i_3_reg_406 <= 3'd0;
    end else if (((1'b1 == ap_CS_fsm_state9) & (tmp_i_fu_606_p2 == 1'd1))) begin
        i_3_reg_406 <= i_9_reg_1391;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) & (tmp_9_fu_572_p2 == 1'd1))) begin
        i_4_reg_430 <= 3'd0;
    end else if (((1'b1 == ap_CS_fsm_state12) & (tmp_i2_fu_742_p2 == 1'd1))) begin
        i_4_reg_430 <= i_11_reg_1417;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state11) & (tmp_8_fu_718_p2 == 1'd1))) begin
        i_5_reg_454 <= 3'd0;
    end else if (((tmp_i3_fu_916_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state15))) begin
        i_5_reg_454 <= i_16_reg_1443;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        i_i1_reg_442 <= i_17_reg_1430;
    end else if (((1'b1 == ap_CS_fsm_state11) & (tmp_8_fu_718_p2 == 1'd0))) begin
        i_i1_reg_442 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        i_i2_reg_466 <= i_18_reg_1462;
    end else if (((1'b1 == ap_CS_fsm_state14) & (tmp_7_fu_864_p2 == 1'd0))) begin
        i_i2_reg_466 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        i_i_reg_418 <= i_15_reg_1404;
    end else if (((1'b1 == ap_CS_fsm_state8) & (tmp_9_fu_572_p2 == 1'd0))) begin
        i_i_reg_418 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        i_reg_372 <= i_6_reg_1342;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_reg_372 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        reg_487 <= sk_q0;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        reg_487 <= sk_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        i_11_reg_1417 <= i_11_fu_724_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        i_15_reg_1404 <= i_15_fu_612_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        i_16_reg_1443 <= i_16_fu_870_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        i_17_reg_1430 <= i_17_fu_748_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        i_18_reg_1462 <= i_18_fu_922_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_6_reg_1342 <= i_6_fu_498_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        i_7_reg_1360 <= i_7_fu_515_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        i_8_reg_1378 <= i_8_fu_538_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        i_9_reg_1391 <= i_9_fu_578_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) & (tmp_9_fu_572_p2 == 1'd0))) begin
        p_sum2_cast_reg_1396[8 : 7] <= p_sum2_cast_fu_602_p1[8 : 7];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (tmp_3_fu_509_p2 == 1'd0))) begin
        sum2_cast_reg_1365[5 : 0] <= sum2_cast_fu_527_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        sum5_i5_reg_1518 <= sum5_i5_fu_1188_p2;
        tmp_41_i_reg_1502[7 : 2] <= tmp_41_i_fu_1063_p3[7 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state14) & (tmp_7_fu_864_p2 == 1'd0))) begin
        sum_cast_reg_1448[12 : 6] <= sum_cast_fu_906_p2[12 : 6];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state11) & (tmp_8_fu_718_p2 == 1'd0))) begin
        tmp_12_cast_reg_1422[9 : 7] <= tmp_12_cast_fu_738_p1[9 : 7];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (tmp_fu_492_p2 == 1'd0))) begin
        tmp_1_reg_1347[5 : 0] <= tmp_1_fu_504_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state15) & (tmp_i3_fu_916_p2 == 1'd0))) begin
        tmp_28_reg_1467 <= tmp_28_fu_928_p1;
        tmp_i4_reg_1473 <= tmp_i4_fu_944_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        tmp_75_i_reg_1523 <= {{sk_q0[7:2]}};
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((tmp_7_fu_864_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state14)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_7_fu_864_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state14))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        rho_address0 = sum2_cast_reg_1365;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        rho_address0 = tmp_1_reg_1347;
    end else begin
        rho_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state3))) begin
        rho_ce0 = 1'b1;
    end else begin
        rho_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state3))) begin
        rho_we0 = 1'b1;
    end else begin
        rho_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        s1_vec_coeffs_ce0 = 1'b1;
    end else begin
        s1_vec_coeffs_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        s1_vec_coeffs_ce1 = 1'b1;
    end else begin
        s1_vec_coeffs_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        s1_vec_coeffs_we0 = 1'b1;
    end else begin
        s1_vec_coeffs_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        s1_vec_coeffs_we1 = 1'b1;
    end else begin
        s1_vec_coeffs_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        s2_vec_coeffs_ce0 = 1'b1;
    end else begin
        s2_vec_coeffs_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        s2_vec_coeffs_ce1 = 1'b1;
    end else begin
        s2_vec_coeffs_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        s2_vec_coeffs_we0 = 1'b1;
    end else begin
        s2_vec_coeffs_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        s2_vec_coeffs_we1 = 1'b1;
    end else begin
        s2_vec_coeffs_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        sk_address0 = sum4_i_cast_fu_1174_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        sk_address0 = sum2_i_cast_fu_1047_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        sk_address0 = sum9_i_cast_fu_959_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        sk_address0 = sum5_i4_cast_fu_773_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        sk_address0 = sum5_i_cast_fu_627_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        sk_address0 = sum4_cast_fu_552_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        sk_address0 = sum2_cast_fu_527_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        sk_address0 = tmp_1_fu_504_p1;
    end else begin
        sk_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        sk_address1 = sum5_i5_cast_fu_1284_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        sk_address1 = sum3_i_cast_fu_1155_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        sk_address1 = sum1_i_cast_fu_1028_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        sk_address1 = sum_i_cast_fu_979_p1;
    end else begin
        sk_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state17))) begin
        sk_ce0 = 1'b1;
    end else begin
        sk_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state17))) begin
        sk_ce1 = 1'b1;
    end else begin
        sk_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        t0_vec_coeffs_address0 = tmp_38_fu_1312_p1;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        t0_vec_coeffs_address0 = tmp_36_fu_1231_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        t0_vec_coeffs_address0 = tmp_33_fu_1098_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        t0_vec_coeffs_address0 = tmp_30_fu_993_p1;
    end else begin
        t0_vec_coeffs_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17))) begin
        t0_vec_coeffs_ce0 = 1'b1;
    end else begin
        t0_vec_coeffs_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        t0_vec_coeffs_d0 = tmp_86_i_cast_fu_1334_p1;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        t0_vec_coeffs_d0 = tmp_85_i_cast_fu_1294_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        t0_vec_coeffs_d0 = tmp_84_i_cast_fu_1199_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        t0_vec_coeffs_d0 = tmp_83_i_cast_fu_1058_p1;
    end else begin
        t0_vec_coeffs_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17))) begin
        t0_vec_coeffs_we0 = 1'b1;
    end else begin
        t0_vec_coeffs_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        tr_ce0 = 1'b1;
    end else begin
        tr_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        tr_we0 = 1'b1;
    end else begin
        tr_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (tmp_fu_492_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (tmp_3_fu_509_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == ap_CS_fsm_state6) & (tmp_6_fu_532_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state8 : begin
            if (((1'b1 == ap_CS_fsm_state8) & (tmp_9_fu_572_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state9 : begin
            if (((1'b1 == ap_CS_fsm_state9) & (tmp_i_fu_606_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state11 : begin
            if (((1'b1 == ap_CS_fsm_state11) & (tmp_8_fu_718_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state12 : begin
            if (((1'b1 == ap_CS_fsm_state12) & (tmp_i2_fu_742_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state14 : begin
            if (((tmp_7_fu_864_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state14))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        ap_ST_fsm_state15 : begin
            if (((tmp_i3_fu_916_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state15))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign grp_fu_477_p4 = {{sk_q0[7:4]}};

assign i_11_fu_724_p2 = (i_4_reg_430 + 3'd1);

assign i_15_fu_612_p2 = (i_i_reg_418 + 8'd1);

assign i_16_fu_870_p2 = (i_5_reg_454 + 3'd1);

assign i_17_fu_748_p2 = (i_i1_reg_442 + 8'd1);

assign i_18_fu_922_p2 = (i_i2_reg_466 + 7'd1);

assign i_6_fu_498_p2 = (i_reg_372 + 6'd1);

assign i_7_fu_515_p2 = (i_1_reg_383 + 6'd1);

assign i_8_fu_538_p2 = (i_2_reg_394 + 6'd1);

assign i_9_fu_578_p2 = (i_3_reg_406 + 3'd1);

assign i_i2_cast1_fu_912_p1 = i_i2_reg_466;

assign p_shl8_cast_fu_896_p1 = p_shl8_fu_888_p3;

assign p_shl8_fu_888_p3 = {{i_5_reg_454}, {6'd0}};

assign p_shl_cast_fu_884_p1 = p_shl_fu_876_p3;

assign p_shl_fu_876_p3 = {{i_5_reg_454}, {9'd0}};

assign p_shl_i_cast_fu_940_p1 = p_shl_i_fu_932_p3;

assign p_shl_i_fu_932_p3 = {{tmp_28_fu_928_p1}, {3'd0}};

assign p_sum2_cast_fu_602_p1 = p_sum2_fu_596_p2;

assign p_sum2_fu_596_p2 = (tmp_2_fu_588_p3 | 9'd112);

assign rho_d0 = sk_q0;

assign s1_vec_coeffs_address0 = tmp_18_fu_660_p1;

assign s1_vec_coeffs_address1 = tmp_20_fu_683_p1;

assign s1_vec_coeffs_d0 = $unsigned(tmp_140_i_cast1_fu_694_p1);

assign s1_vec_coeffs_d1 = $unsigned(tmp_141_i_cast1_fu_709_p1);

assign s2_vec_coeffs_address0 = tmp_24_fu_806_p1;

assign s2_vec_coeffs_address1 = tmp_26_fu_829_p1;

assign s2_vec_coeffs_d0 = $unsigned(tmp_149_i_cast1_fu_840_p1);

assign s2_vec_coeffs_d1 = $unsigned(tmp_150_i_cast1_fu_855_p1);

assign sum1_i_cast_fu_1028_p1 = $signed(sum1_i_fu_1023_p2);

assign sum1_i_fu_1023_p2 = ($signed(sum_cast_reg_1448) + $signed(tmp_51_i_cast_fu_1019_p1));

assign sum2_cast_fu_527_p1 = sum2_fu_521_p2;

assign sum2_fu_521_p2 = (i_1_reg_383 ^ 6'd32);

assign sum2_i_cast_fu_1047_p1 = $signed(sum2_i_fu_1042_p2);

assign sum2_i_fu_1042_p2 = ($signed(sum_cast_reg_1448) + $signed(tmp_56_i_cast_fu_1038_p1));

assign sum3_i_cast_fu_1155_p1 = $signed(sum3_i_fu_1150_p2);

assign sum3_i_fu_1150_p2 = ($signed(sum_cast_reg_1448) + $signed(tmp_65_i_cast_fu_1146_p1));

assign sum4_cast_fu_552_p1 = sum_fu_544_p3;

assign sum4_i_cast_fu_1174_p1 = $signed(sum4_i_fu_1169_p2);

assign sum4_i_fu_1169_p2 = ($signed(sum_cast_reg_1448) + $signed(tmp_70_i_cast_fu_1165_p1));

assign sum5_i4_cast_fu_773_p1 = sum5_i4_fu_768_p2;

assign sum5_i4_fu_768_p2 = (tmp6_cast_fu_764_p1 + tmp_12_cast_reg_1422);

assign sum5_i5_cast_fu_1284_p1 = $signed(sum5_i5_reg_1518);

assign sum5_i5_fu_1188_p2 = ($signed(sum_cast_reg_1448) + $signed(tmp_79_i_cast_fu_1184_p1));

assign sum5_i_cast_fu_627_p1 = sum5_i_fu_622_p2;

assign sum5_i_fu_622_p2 = (p_sum2_cast_reg_1396 + tmp_i_cast_fu_618_p1);

assign sum6_cast_fu_567_p1 = sum6_fu_561_p2;

assign sum6_fu_561_p2 = ($signed(tmp_7_cast1_fu_557_p1) + $signed(12'd2653));

assign sum9_i_cast_fu_959_p1 = $signed(sum9_i_fu_954_p2);

assign sum9_i_fu_954_p2 = ($signed(sum_cast_reg_1448) + $signed(tmp_40_i_cast_fu_950_p1));

assign sum_cast_fu_906_p2 = (tmp_s_fu_900_p2 + 13'd1264);

assign sum_fu_544_p3 = {{1'd1}, {i_2_reg_394}};

assign sum_i_cast_fu_979_p1 = $signed(sum_i_fu_974_p2);

assign sum_i_fu_974_p2 = ($signed(sum_cast_reg_1448) + $signed(tmp_44_i_cast_fu_970_p1));

assign tmp6_cast_fu_764_p1 = tmp6_fu_758_p2;

assign tmp6_fu_758_p2 = ($signed(10'd624) + $signed(tmp_i3_cast_fu_754_p1));

assign tmp_10_fu_632_p1 = sk_q0[3:0];

assign tmp_11_fu_640_p1 = i_i_reg_418[6:0];

assign tmp_12_cast_fu_738_p1 = tmp_5_fu_730_p3;

assign tmp_12_fu_1115_p3 = {{2'd0}, {tmp_31_fu_1080_p1}};

assign tmp_134_i_cast_cast_fu_636_p1 = tmp_10_fu_632_p1;

assign tmp_137_i_cast_cast_fu_665_p1 = grp_fu_477_p4;

assign tmp_138_i_fu_669_p2 = (tmp_14_fu_644_p2 | 8'd1);

assign tmp_13_fu_1123_p2 = (tmp_53_i_fu_1103_p3 | tmp_12_fu_1115_p3);

assign tmp_140_i_cast1_fu_694_p1 = $signed(tmp_140_i_fu_688_p2);

assign tmp_140_i_fu_688_p2 = ($signed(15'd24582) - $signed(tmp_134_i_cast_cast_fu_636_p1));

assign tmp_141_i_cast1_fu_709_p1 = $signed(tmp_141_i_fu_703_p2);

assign tmp_141_i_fu_703_p2 = ($signed(15'd24582) - $signed(tmp_137_i_cast_cast_fu_665_p1));

assign tmp_143_i_cast_cast_fu_782_p1 = tmp_21_fu_778_p1;

assign tmp_146_i_cast_cast_fu_811_p1 = grp_fu_477_p4;

assign tmp_147_i_fu_815_p2 = (tmp_27_fu_790_p2 | 8'd1);

assign tmp_149_i_cast1_fu_840_p1 = $signed(tmp_149_i_fu_834_p2);

assign tmp_149_i_fu_834_p2 = ($signed(15'd24582) - $signed(tmp_143_i_cast_cast_fu_782_p1));

assign tmp_14_fu_644_p2 = i_i_reg_418 << 8'd1;

assign tmp_150_i_cast1_fu_855_p1 = $signed(tmp_150_i_fu_849_p2);

assign tmp_150_i_fu_849_p2 = ($signed(15'd24582) - $signed(tmp_146_i_cast_cast_fu_811_p1));

assign tmp_15_fu_1248_p3 = {{4'd0}, {tmp_34_fu_1214_p1}};

assign tmp_15_i_fu_1002_p3 = {{tmp_39_fu_998_p1}, {sk_q0}};

assign tmp_16_fu_1256_p2 = (tmp_67_i_fu_1236_p3 | tmp_15_fu_1248_p3);

assign tmp_17_fu_650_p4 = {{{i_3_reg_406}, {tmp_11_fu_640_p1}}, {1'd0}};

assign tmp_18_fu_660_p1 = tmp_17_fu_650_p4;

assign tmp_19_fu_675_p3 = {{i_3_reg_406}, {tmp_138_i_fu_669_p2}};

assign tmp_1_fu_504_p1 = i_reg_372;

assign tmp_20_fu_683_p1 = tmp_19_fu_675_p3;

assign tmp_21_fu_778_p1 = sk_q0[3:0];

assign tmp_22_fu_786_p1 = i_i1_reg_442[6:0];

assign tmp_23_fu_796_p4 = {{{i_4_reg_430}, {tmp_22_fu_786_p1}}, {1'd0}};

assign tmp_24_fu_806_p1 = tmp_23_fu_796_p4;

assign tmp_25_fu_821_p3 = {{i_4_reg_430}, {tmp_147_i_fu_815_p2}};

assign tmp_26_fu_829_p1 = tmp_25_fu_821_p3;

assign tmp_27_fu_790_p2 = i_i1_reg_442 << 8'd1;

assign tmp_28_fu_928_p1 = i_i2_reg_466[5:0];

assign tmp_29_fu_984_p4 = {{{i_5_reg_454}, {tmp_28_reg_1467}}, {2'd0}};

assign tmp_2_fu_588_p3 = {{tmp_4_fu_584_p1}, {7'd0}};

assign tmp_30_fu_993_p1 = tmp_29_fu_984_p4;

assign tmp_31_fu_1080_p1 = tmp_47_i_fu_1070_p4;

assign tmp_32_fu_1090_p3 = {{i_5_reg_454}, {tmp_48_i_fu_1084_p2}};

assign tmp_33_fu_1098_p1 = tmp_32_fu_1090_p3;

assign tmp_34_fu_1214_p1 = tmp_61_i_fu_1204_p4;

assign tmp_35_fu_1223_p3 = {{i_5_reg_454}, {tmp_62_i_fu_1218_p2}};

assign tmp_36_fu_1231_p1 = tmp_35_fu_1223_p3;

assign tmp_37_fu_1304_p3 = {{i_5_reg_454}, {tmp_76_i_fu_1299_p2}};

assign tmp_38_fu_1312_p1 = tmp_37_fu_1304_p3;

assign tmp_39_fu_998_p1 = sk_q1[5:0];

assign tmp_3_fu_509_p2 = ((i_1_reg_383 == 6'd32) ? 1'b1 : 1'b0);

assign tmp_40_fu_1111_p1 = sk_q0[3:0];

assign tmp_40_i_cast_fu_950_p1 = tmp_i4_fu_944_p2;

assign tmp_41_fu_1244_p1 = sk_q0[1:0];

assign tmp_41_i_fu_1063_p3 = {{tmp_28_reg_1467}, {2'd0}};

assign tmp_43_i_fu_964_p2 = ($signed(10'd1) + $signed(tmp_i4_fu_944_p2));

assign tmp_44_i_cast_fu_970_p1 = $signed(tmp_43_i_fu_964_p2);

assign tmp_46_i_cast_fu_1010_p1 = tmp_15_i_fu_1002_p3;

assign tmp_47_i_fu_1070_p4 = {{reg_487[7:6]}};

assign tmp_48_i_fu_1084_p2 = (tmp_41_i_fu_1063_p3 | 8'd1);

assign tmp_4_fu_584_p1 = i_3_reg_406[1:0];

assign tmp_50_i_fu_1014_p2 = ($signed(10'd2) + $signed(tmp_i4_reg_1473));

assign tmp_51_i_cast_fu_1019_p1 = $signed(tmp_50_i_fu_1014_p2);

assign tmp_53_i_fu_1103_p3 = {{sk_q1}, {2'd0}};

assign tmp_55_i_fu_1033_p2 = ($signed(10'd3) + $signed(tmp_i4_reg_1473));

assign tmp_56_i_cast_fu_1038_p1 = $signed(tmp_55_i_fu_1033_p2);

assign tmp_5_fu_730_p3 = {{i_4_reg_430}, {7'd0}};

assign tmp_60_i_cast_fu_1137_p1 = tmp_60_i_fu_1129_p3;

assign tmp_60_i_fu_1129_p3 = {{tmp_40_fu_1111_p1}, {tmp_13_fu_1123_p2}};

assign tmp_61_i_fu_1204_p4 = {{reg_487[7:4]}};

assign tmp_62_i_fu_1218_p2 = (tmp_41_i_reg_1502 | 8'd2);

assign tmp_64_i_fu_1141_p2 = ($signed(10'd4) + $signed(tmp_i4_reg_1473));

assign tmp_65_i_cast_fu_1146_p1 = $signed(tmp_64_i_fu_1141_p2);

assign tmp_67_i_fu_1236_p3 = {{sk_q1}, {4'd0}};

assign tmp_69_i_fu_1160_p2 = ($signed(10'd5) + $signed(tmp_i4_reg_1473));

assign tmp_6_fu_532_p2 = ((i_2_reg_394 == 6'd48) ? 1'b1 : 1'b0);

assign tmp_70_i_cast_fu_1165_p1 = $signed(tmp_69_i_fu_1160_p2);

assign tmp_74_i_cast_fu_1270_p1 = tmp_74_i_fu_1262_p3;

assign tmp_74_i_fu_1262_p3 = {{tmp_41_fu_1244_p1}, {tmp_16_fu_1256_p2}};

assign tmp_76_i_fu_1299_p2 = (tmp_41_i_reg_1502 | 8'd3);

assign tmp_78_i_fu_1179_p2 = ($signed(10'd6) + $signed(tmp_i4_reg_1473));

assign tmp_79_i_cast_fu_1184_p1 = $signed(tmp_78_i_fu_1179_p2);

assign tmp_7_cast1_fu_557_p1 = i_2_reg_394;

assign tmp_7_fu_864_p2 = ((i_5_reg_454 == 3'd5) ? 1'b1 : 1'b0);

assign tmp_82_i_cast_fu_1324_p1 = tmp_82_i_fu_1317_p3;

assign tmp_82_i_fu_1317_p3 = {{sk_q1}, {tmp_75_i_reg_1523}};

assign tmp_83_i_cast_fu_1058_p1 = tmp_83_i_fu_1052_p2;

assign tmp_83_i_fu_1052_p2 = ($signed(24'd8388609) - $signed(tmp_46_i_cast_fu_1010_p1));

assign tmp_84_i_cast_fu_1199_p1 = tmp_84_i_fu_1193_p2;

assign tmp_84_i_fu_1193_p2 = ($signed(24'd8388609) - $signed(tmp_60_i_cast_fu_1137_p1));

assign tmp_85_i_cast_fu_1294_p1 = tmp_85_i_fu_1288_p2;

assign tmp_85_i_fu_1288_p2 = ($signed(24'd8388609) - $signed(tmp_74_i_cast_fu_1270_p1));

assign tmp_86_i_cast_fu_1334_p1 = tmp_86_i_fu_1328_p2;

assign tmp_86_i_fu_1328_p2 = ($signed(24'd8388609) - $signed(tmp_82_i_cast_fu_1324_p1));

assign tmp_8_fu_718_p2 = ((i_4_reg_430 == 3'd5) ? 1'b1 : 1'b0);

assign tmp_9_fu_572_p2 = ((i_3_reg_406 == 3'd4) ? 1'b1 : 1'b0);

assign tmp_fu_492_p2 = ((i_reg_372 == 6'd32) ? 1'b1 : 1'b0);

assign tmp_i2_fu_742_p2 = ((i_i1_reg_442 == 8'd128) ? 1'b1 : 1'b0);

assign tmp_i3_cast_fu_754_p1 = i_i1_reg_442;

assign tmp_i3_fu_916_p2 = ((i_i2_reg_466 == 7'd64) ? 1'b1 : 1'b0);

assign tmp_i4_fu_944_p2 = (p_shl_i_cast_fu_940_p1 - i_i2_cast1_fu_912_p1);

assign tmp_i_cast_fu_618_p1 = i_i_reg_418;

assign tmp_i_fu_606_p2 = ((i_i_reg_418 == 8'd128) ? 1'b1 : 1'b0);

assign tmp_s_fu_900_p2 = (p_shl_cast_fu_884_p1 - p_shl8_cast_fu_896_p1);

assign tr_address0 = sum6_cast_fu_567_p1;

assign tr_d0 = sk_q0;

always @ (posedge ap_clk) begin
    tmp_1_reg_1347[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    sum2_cast_reg_1365[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    p_sum2_cast_reg_1396[6:0] <= 7'b1110000;
    p_sum2_cast_reg_1396[9] <= 1'b0;
    tmp_12_cast_reg_1422[6:0] <= 7'b0000000;
    tmp_12_cast_reg_1422[10] <= 1'b0;
    sum_cast_reg_1448[5:0] <= 6'b110000;
    tmp_41_i_reg_1502[1:0] <= 2'b00;
end

endmodule //unpack_sk
