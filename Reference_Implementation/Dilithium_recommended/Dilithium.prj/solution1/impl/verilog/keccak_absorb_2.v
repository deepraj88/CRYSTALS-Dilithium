// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module keccak_absorb_2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        s_address0,
        s_ce0,
        s_we0,
        s_d0,
        s_q0,
        s_address1,
        s_ce1,
        s_we1,
        s_d1,
        s_q1,
        m_address0,
        m_ce0,
        m_q0
);

parameter    ap_ST_fsm_state1 = 16'd1;
parameter    ap_ST_fsm_state2 = 16'd2;
parameter    ap_ST_fsm_state3 = 16'd4;
parameter    ap_ST_fsm_state4 = 16'd8;
parameter    ap_ST_fsm_state5 = 16'd16;
parameter    ap_ST_fsm_state6 = 16'd32;
parameter    ap_ST_fsm_state7 = 16'd64;
parameter    ap_ST_fsm_state8 = 16'd128;
parameter    ap_ST_fsm_state9 = 16'd256;
parameter    ap_ST_fsm_state10 = 16'd512;
parameter    ap_ST_fsm_state11 = 16'd1024;
parameter    ap_ST_fsm_state12 = 16'd2048;
parameter    ap_ST_fsm_state13 = 16'd4096;
parameter    ap_ST_fsm_state14 = 16'd8192;
parameter    ap_ST_fsm_state15 = 16'd16384;
parameter    ap_ST_fsm_state16 = 16'd32768;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [4:0] s_address0;
output   s_ce0;
output   s_we0;
output  [63:0] s_d0;
input  [63:0] s_q0;
output  [4:0] s_address1;
output   s_ce1;
output   s_we1;
output  [63:0] s_d1;
input  [63:0] s_q1;
output  [9:0] m_address0;
output   m_ce0;
input  [7:0] m_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[4:0] s_address0;
reg s_ce0;
reg s_we0;
reg[63:0] s_d0;
reg s_ce1;
reg s_we1;
reg[9:0] m_address0;
reg m_ce0;

(* fsm_encoding = "none" *) reg   [15:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [4:0] i_47_fu_313_p2;
wire    ap_CS_fsm_state2;
wire   [4:0] i_7_fu_336_p2;
reg   [4:0] i_7_reg_601;
wire    ap_CS_fsm_state4;
wire   [7:0] tmp_109_fu_342_p3;
reg   [7:0] tmp_109_reg_606;
wire   [0:0] exitcond3_fu_330_p2;
wire   [9:0] mlen_assign_fu_350_p2;
reg   [9:0] mlen_assign_reg_611;
wire   [3:0] i_49_fu_362_p2;
reg   [3:0] i_49_reg_619;
wire    ap_CS_fsm_state5;
wire   [0:0] tmp_i_fu_356_p2;
reg   [4:0] s_addr_2_reg_629;
wire   [63:0] r_fu_423_p2;
wire    ap_CS_fsm_state6;
wire   [9:0] p_rec_fu_436_p2;
wire    ap_CS_fsm_state8;
wire    grp_KeccakF1600_StatePer_fu_299_ap_idle;
wire    grp_KeccakF1600_StatePer_fu_299_ap_ready;
wire    grp_KeccakF1600_StatePer_fu_299_ap_done;
wire   [7:0] i_48_fu_448_p2;
wire    ap_CS_fsm_state9;
wire   [63:0] tmp_110_fu_459_p1;
reg   [63:0] tmp_110_reg_652;
wire    ap_CS_fsm_state10;
wire   [3:0] tmp_111_fu_473_p2;
reg   [3:0] tmp_111_reg_660;
wire   [0:0] exitcond1_fu_467_p2;
wire   [4:0] i_50_fu_503_p2;
reg   [4:0] i_50_reg_679;
wire    ap_CS_fsm_state13;
wire   [7:0] tmp_114_fu_509_p3;
reg   [7:0] tmp_114_reg_684;
wire   [0:0] exitcond4_fu_497_p2;
wire   [3:0] i_8_fu_523_p2;
reg   [3:0] i_8_reg_692;
wire    ap_CS_fsm_state14;
wire   [0:0] tmp_i3_fu_517_p2;
reg   [4:0] s_addr_3_reg_702;
wire   [63:0] r_1_fu_574_p2;
wire    ap_CS_fsm_state15;
reg   [7:0] t_address0;
reg    t_ce0;
reg    t_we0;
reg   [7:0] t_d0;
wire   [7:0] t_q0;
reg   [7:0] t_address1;
reg    t_ce1;
reg    t_we1;
wire   [7:0] t_d1;
wire   [7:0] t_q1;
wire    grp_KeccakF1600_StatePer_fu_299_ap_start;
wire   [4:0] grp_KeccakF1600_StatePer_fu_299_state_address0;
wire    grp_KeccakF1600_StatePer_fu_299_state_ce0;
wire    grp_KeccakF1600_StatePer_fu_299_state_we0;
wire   [63:0] grp_KeccakF1600_StatePer_fu_299_state_d0;
wire   [4:0] grp_KeccakF1600_StatePer_fu_299_state_address1;
wire    grp_KeccakF1600_StatePer_fu_299_state_ce1;
wire    grp_KeccakF1600_StatePer_fu_299_state_we1;
wire   [63:0] grp_KeccakF1600_StatePer_fu_299_state_d1;
reg   [4:0] i_reg_170;
wire   [0:0] tmp_fu_307_p2;
reg   [9:0] p_01_rec_reg_181;
reg   [9:0] p_0_reg_193;
reg   [4:0] i_1_reg_205;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state3;
wire   [0:0] tmp_107_fu_324_p2;
reg   [3:0] i_i_reg_217;
reg   [63:0] r_i_reg_229;
reg   [7:0] i_2_reg_241;
wire   [0:0] exitcond_fu_442_p2;
reg   [3:0] i_3_reg_252;
wire    ap_CS_fsm_state11;
reg   [4:0] i_4_reg_263;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state16;
reg   [3:0] i_i1_reg_275;
reg   [63:0] r_i2_reg_287;
reg    grp_KeccakF1600_StatePer_fu_299_ap_start_reg;
wire   [63:0] tmp_106_fu_319_p1;
wire   [63:0] sum_i_cast_fu_387_p1;
wire   [63:0] tmp_112_fu_392_p1;
wire   [63:0] tmp_108_fu_454_p1;
wire   [63:0] sum9_cast_fu_485_p1;
wire   [63:0] sum_i5_cast_fu_538_p1;
wire   [63:0] tmp_115_fu_543_p1;
wire   [63:0] tmp_113_fu_429_p2;
wire   [63:0] tmp_116_fu_580_p2;
wire   [7:0] tmp_i_cast_fu_368_p1;
wire   [7:0] tmp2_fu_372_p2;
wire   [9:0] tmp2_cast_fu_377_p1;
wire   [9:0] sum_i_fu_381_p2;
wire   [2:0] tmp_132_fu_401_p1;
wire   [5:0] tmp_224_i_fu_405_p3;
wire   [63:0] tmp_223_i_fu_397_p1;
wire   [63:0] tmp_225_i_fu_413_p1;
wire   [63:0] tmp_226_i_fu_417_p2;
wire   [9:0] tmp_186_cast_fu_463_p1;
wire   [9:0] sum9_fu_479_p2;
wire   [7:0] tmp_i4_cast_fu_529_p1;
wire   [7:0] sum_i5_fu_533_p2;
wire   [2:0] tmp_133_fu_552_p1;
wire   [5:0] tmp_224_i9_fu_556_p3;
wire   [63:0] tmp_223_i8_fu_548_p1;
wire   [63:0] tmp_225_i1_fu_564_p1;
wire   [63:0] tmp_226_i1_fu_568_p2;
reg   [15:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 16'd1;
#0 grp_KeccakF1600_StatePer_fu_299_ap_start_reg = 1'b0;
end

keccak_absorb_3_t #(
    .DataWidth( 8 ),
    .AddressRange( 200 ),
    .AddressWidth( 8 ))
t_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(t_address0),
    .ce0(t_ce0),
    .we0(t_we0),
    .d0(t_d0),
    .q0(t_q0),
    .address1(t_address1),
    .ce1(t_ce1),
    .we1(t_we1),
    .d1(t_d1),
    .q1(t_q1)
);

KeccakF1600_StatePer grp_KeccakF1600_StatePer_fu_299(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_KeccakF1600_StatePer_fu_299_ap_start),
    .ap_done(grp_KeccakF1600_StatePer_fu_299_ap_done),
    .ap_idle(grp_KeccakF1600_StatePer_fu_299_ap_idle),
    .ap_ready(grp_KeccakF1600_StatePer_fu_299_ap_ready),
    .state_address0(grp_KeccakF1600_StatePer_fu_299_state_address0),
    .state_ce0(grp_KeccakF1600_StatePer_fu_299_state_ce0),
    .state_we0(grp_KeccakF1600_StatePer_fu_299_state_we0),
    .state_d0(grp_KeccakF1600_StatePer_fu_299_state_d0),
    .state_q0(s_q0),
    .state_address1(grp_KeccakF1600_StatePer_fu_299_state_address1),
    .state_ce1(grp_KeccakF1600_StatePer_fu_299_state_ce1),
    .state_we1(grp_KeccakF1600_StatePer_fu_299_state_we1),
    .state_d1(grp_KeccakF1600_StatePer_fu_299_state_d1),
    .state_q1(s_q1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_KeccakF1600_StatePer_fu_299_ap_start_reg <= 1'b0;
    end else begin
        if (((exitcond3_fu_330_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
            grp_KeccakF1600_StatePer_fu_299_ap_start_reg <= 1'b1;
        end else if ((grp_KeccakF1600_StatePer_fu_299_ap_ready == 1'b1)) begin
            grp_KeccakF1600_StatePer_fu_299_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_107_fu_324_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        i_1_reg_205 <= 5'd0;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        i_1_reg_205 <= i_7_reg_601;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_107_fu_324_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        i_2_reg_241 <= 8'd0;
    end else if (((exitcond_fu_442_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state9))) begin
        i_2_reg_241 <= i_48_fu_448_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_fu_442_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state9))) begin
        i_3_reg_252 <= 4'd0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        i_3_reg_252 <= tmp_111_reg_660;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        i_4_reg_263 <= i_50_reg_679;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        i_4_reg_263 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        i_i1_reg_275 <= i_8_reg_692;
    end else if (((exitcond4_fu_497_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state13))) begin
        i_i1_reg_275 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        i_i_reg_217 <= i_49_reg_619;
    end else if (((exitcond3_fu_330_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        i_i_reg_217 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_fu_307_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        i_reg_170 <= i_47_fu_313_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_reg_170 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_fu_307_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        p_01_rec_reg_181 <= 10'd0;
    end else if (((1'b1 == ap_CS_fsm_state8) & (grp_KeccakF1600_StatePer_fu_299_ap_done == 1'b1))) begin
        p_01_rec_reg_181 <= p_rec_fu_436_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_fu_307_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        p_0_reg_193 <= 10'd688;
    end else if (((1'b1 == ap_CS_fsm_state8) & (grp_KeccakF1600_StatePer_fu_299_ap_done == 1'b1))) begin
        p_0_reg_193 <= mlen_assign_reg_611;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        r_i2_reg_287 <= r_1_fu_574_p2;
    end else if (((exitcond4_fu_497_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state13))) begin
        r_i2_reg_287 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        r_i_reg_229 <= r_fu_423_p2;
    end else if (((exitcond3_fu_330_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        r_i_reg_229 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        i_49_reg_619 <= i_49_fu_362_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        i_50_reg_679 <= i_50_fu_503_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        i_7_reg_601 <= i_7_fu_336_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        i_8_reg_692 <= i_8_fu_523_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond3_fu_330_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        mlen_assign_reg_611 <= mlen_assign_fu_350_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_i_fu_356_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        s_addr_2_reg_629 <= tmp_112_fu_392_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_i3_fu_517_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state14))) begin
        s_addr_3_reg_702 <= tmp_115_fu_543_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond3_fu_330_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        tmp_109_reg_606[7 : 3] <= tmp_109_fu_342_p3[7 : 3];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        tmp_110_reg_652[3 : 0] <= tmp_110_fu_459_p1[3 : 0];
        tmp_111_reg_660 <= tmp_111_fu_473_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond4_fu_497_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state13))) begin
        tmp_114_reg_684[7 : 3] <= tmp_114_fu_509_p3[7 : 3];
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((exitcond4_fu_497_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state13)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond4_fu_497_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state13))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        m_address0 = sum9_cast_fu_485_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        m_address0 = sum_i_cast_fu_387_p1;
    end else begin
        m_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state10))) begin
        m_ce0 = 1'b1;
    end else begin
        m_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        s_address0 = s_addr_3_reg_702;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        s_address0 = tmp_115_fu_543_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        s_address0 = s_addr_2_reg_629;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        s_address0 = tmp_112_fu_392_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        s_address0 = tmp_106_fu_319_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        s_address0 = grp_KeccakF1600_StatePer_fu_299_state_address0;
    end else begin
        s_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state14))) begin
        s_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        s_ce0 = grp_KeccakF1600_StatePer_fu_299_state_ce0;
    end else begin
        s_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        s_ce1 = grp_KeccakF1600_StatePer_fu_299_state_ce1;
    end else begin
        s_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        s_d0 = tmp_116_fu_580_p2;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        s_d0 = tmp_113_fu_429_p2;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        s_d0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        s_d0 = grp_KeccakF1600_StatePer_fu_299_state_d0;
    end else begin
        s_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state7) | ((tmp_fu_307_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        s_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        s_we0 = grp_KeccakF1600_StatePer_fu_299_state_we0;
    end else begin
        s_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        s_we1 = grp_KeccakF1600_StatePer_fu_299_state_we1;
    end else begin
        s_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        t_address0 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        t_address0 = tmp_110_reg_652;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        t_address0 = 64'd135;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        t_address0 = tmp_108_fu_454_p1;
    end else begin
        t_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        t_address1 = sum_i5_cast_fu_538_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        t_address1 = 64'd135;
    end else begin
        t_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9))) begin
        t_ce0 = 1'b1;
    end else begin
        t_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state14))) begin
        t_ce1 = 1'b1;
    end else begin
        t_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        t_d0 = 8'd31;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        t_d0 = m_q0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        t_d0 = 8'd0;
    end else begin
        t_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | ((exitcond_fu_442_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state9)))) begin
        t_we0 = 1'b1;
    end else begin
        t_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        t_we1 = 1'b1;
    end else begin
        t_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((tmp_fu_307_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((tmp_107_fu_324_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((exitcond3_fu_330_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((tmp_i_fu_356_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state8 : begin
            if (((1'b1 == ap_CS_fsm_state8) & (grp_KeccakF1600_StatePer_fu_299_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state9 : begin
            if (((exitcond_fu_442_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state9))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state10 : begin
            if (((exitcond1_fu_467_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            if (((exitcond4_fu_497_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state13))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state14 : begin
            if (((tmp_i3_fu_517_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state14))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign exitcond1_fu_467_p2 = ((i_3_reg_252 == 4'd8) ? 1'b1 : 1'b0);

assign exitcond3_fu_330_p2 = ((i_1_reg_205 == 5'd17) ? 1'b1 : 1'b0);

assign exitcond4_fu_497_p2 = ((i_4_reg_263 == 5'd17) ? 1'b1 : 1'b0);

assign exitcond_fu_442_p2 = ((i_2_reg_241 == 8'd136) ? 1'b1 : 1'b0);

assign grp_KeccakF1600_StatePer_fu_299_ap_start = grp_KeccakF1600_StatePer_fu_299_ap_start_reg;

assign i_47_fu_313_p2 = (i_reg_170 + 5'd1);

assign i_48_fu_448_p2 = (i_2_reg_241 + 8'd1);

assign i_49_fu_362_p2 = (i_i_reg_217 + 4'd1);

assign i_50_fu_503_p2 = (i_4_reg_263 + 5'd1);

assign i_7_fu_336_p2 = (i_1_reg_205 + 5'd1);

assign i_8_fu_523_p2 = (i_i1_reg_275 + 4'd1);

assign mlen_assign_fu_350_p2 = ($signed(p_0_reg_193) + $signed(10'd888));

assign p_rec_fu_436_p2 = (p_01_rec_reg_181 + 10'd136);

assign r_1_fu_574_p2 = (tmp_226_i1_fu_568_p2 | r_i2_reg_287);

assign r_fu_423_p2 = (tmp_226_i_fu_417_p2 | r_i_reg_229);

assign s_address1 = grp_KeccakF1600_StatePer_fu_299_state_address1;

assign s_d1 = grp_KeccakF1600_StatePer_fu_299_state_d1;

assign sum9_cast_fu_485_p1 = sum9_fu_479_p2;

assign sum9_fu_479_p2 = ($signed(tmp_186_cast_fu_463_p1) + $signed(10'd680));

assign sum_i5_cast_fu_538_p1 = sum_i5_fu_533_p2;

assign sum_i5_fu_533_p2 = (tmp_114_reg_684 + tmp_i4_cast_fu_529_p1);

assign sum_i_cast_fu_387_p1 = sum_i_fu_381_p2;

assign sum_i_fu_381_p2 = (p_01_rec_reg_181 + tmp2_cast_fu_377_p1);

assign t_d1 = (t_q0 | 8'd128);

assign tmp2_cast_fu_377_p1 = tmp2_fu_372_p2;

assign tmp2_fu_372_p2 = (tmp_i_cast_fu_368_p1 + tmp_109_reg_606);

assign tmp_106_fu_319_p1 = i_reg_170;

assign tmp_107_fu_324_p2 = ((p_0_reg_193 < 10'd136) ? 1'b1 : 1'b0);

assign tmp_108_fu_454_p1 = i_2_reg_241;

assign tmp_109_fu_342_p3 = {{i_1_reg_205}, {3'd0}};

assign tmp_110_fu_459_p1 = i_3_reg_252;

assign tmp_111_fu_473_p2 = (i_3_reg_252 + 4'd1);

assign tmp_112_fu_392_p1 = i_1_reg_205;

assign tmp_113_fu_429_p2 = (s_q0 ^ r_i_reg_229);

assign tmp_114_fu_509_p3 = {{i_4_reg_263}, {3'd0}};

assign tmp_115_fu_543_p1 = i_4_reg_263;

assign tmp_116_fu_580_p2 = (s_q0 ^ r_i2_reg_287);

assign tmp_132_fu_401_p1 = i_i_reg_217[2:0];

assign tmp_133_fu_552_p1 = i_i1_reg_275[2:0];

assign tmp_186_cast_fu_463_p1 = i_3_reg_252;

assign tmp_223_i8_fu_548_p1 = t_q1;

assign tmp_223_i_fu_397_p1 = m_q0;

assign tmp_224_i9_fu_556_p3 = {{tmp_133_fu_552_p1}, {3'd0}};

assign tmp_224_i_fu_405_p3 = {{tmp_132_fu_401_p1}, {3'd0}};

assign tmp_225_i1_fu_564_p1 = tmp_224_i9_fu_556_p3;

assign tmp_225_i_fu_413_p1 = tmp_224_i_fu_405_p3;

assign tmp_226_i1_fu_568_p2 = tmp_223_i8_fu_548_p1 << tmp_225_i1_fu_564_p1;

assign tmp_226_i_fu_417_p2 = tmp_223_i_fu_397_p1 << tmp_225_i_fu_413_p1;

assign tmp_fu_307_p2 = ((i_reg_170 == 5'd25) ? 1'b1 : 1'b0);

assign tmp_i3_fu_517_p2 = ((i_i1_reg_275 == 4'd8) ? 1'b1 : 1'b0);

assign tmp_i4_cast_fu_529_p1 = i_i1_reg_275;

assign tmp_i_cast_fu_368_p1 = i_i_reg_217;

assign tmp_i_fu_356_p2 = ((i_i_reg_217 == 4'd8) ? 1'b1 : 1'b0);

always @ (posedge ap_clk) begin
    tmp_109_reg_606[2:0] <= 3'b000;
    tmp_110_reg_652[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    tmp_114_reg_684[2:0] <= 3'b000;
end

endmodule //keccak_absorb_2
