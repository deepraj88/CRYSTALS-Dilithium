// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "polyveck_decompose.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic polyveck_decompose::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic polyveck_decompose::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<6> polyveck_decompose::ap_ST_fsm_state1 = "1";
const sc_lv<6> polyveck_decompose::ap_ST_fsm_state2 = "10";
const sc_lv<6> polyveck_decompose::ap_ST_fsm_state3 = "100";
const sc_lv<6> polyveck_decompose::ap_ST_fsm_state4 = "1000";
const sc_lv<6> polyveck_decompose::ap_ST_fsm_state5 = "10000";
const sc_lv<6> polyveck_decompose::ap_ST_fsm_state6 = "100000";
const sc_lv<32> polyveck_decompose::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> polyveck_decompose::ap_const_lv32_1 = "1";
const sc_lv<1> polyveck_decompose::ap_const_lv1_0 = "0";
const sc_lv<32> polyveck_decompose::ap_const_lv32_2 = "10";
const sc_lv<32> polyveck_decompose::ap_const_lv32_3 = "11";
const sc_lv<32> polyveck_decompose::ap_const_lv32_4 = "100";
const sc_lv<3> polyveck_decompose::ap_const_lv3_0 = "000";
const sc_lv<1> polyveck_decompose::ap_const_lv1_1 = "1";
const sc_lv<32> polyveck_decompose::ap_const_lv32_5 = "101";
const sc_lv<9> polyveck_decompose::ap_const_lv9_0 = "000000000";
const sc_lv<3> polyveck_decompose::ap_const_lv3_5 = "101";
const sc_lv<3> polyveck_decompose::ap_const_lv3_1 = "1";
const sc_lv<8> polyveck_decompose::ap_const_lv8_0 = "00000000";
const sc_lv<9> polyveck_decompose::ap_const_lv9_100 = "100000000";
const sc_lv<9> polyveck_decompose::ap_const_lv9_1 = "1";
const sc_lv<32> polyveck_decompose::ap_const_lv32_13 = "10011";
const sc_lv<32> polyveck_decompose::ap_const_lv32_1F = "11111";
const sc_lv<23> polyveck_decompose::ap_const_lv23_7C00FF = "11111000000000011111111";
const sc_lv<32> polyveck_decompose::ap_const_lv32_17 = "10111";
const sc_lv<24> polyveck_decompose::ap_const_lv24_7FE00 = "1111111111000000000";
const sc_lv<24> polyveck_decompose::ap_const_lv24_0 = "000000000000000000000000";
const sc_lv<32> polyveck_decompose::ap_const_lv32_3FEFF = "111111111011111111";
const sc_lv<32> polyveck_decompose::ap_const_lv32_FFFFFFFF = "11111111111111111111111111111111";
const sc_lv<32> polyveck_decompose::ap_const_lv32_16 = "10110";
const sc_lv<32> polyveck_decompose::ap_const_lv32_D = "1101";
const sc_lv<24> polyveck_decompose::ap_const_lv24_7BE102 = "11110111110000100000010";
const bool polyveck_decompose::ap_const_boolean_1 = true;

polyveck_decompose::polyveck_decompose(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_a0_write_assign_fu_343_p2);
    sensitive << ( tmp_288_i_fu_338_p2 );
    sensitive << ( tmp_287_i_cast_fu_335_p1 );

    SC_METHOD(thread_a_assign_3_fu_313_p2);
    sensitive << ( tmp2_cast_fu_295_p1 );
    sensitive << ( tmp_286_i_cast_fu_277_p1 );

    SC_METHOD(thread_a_assign_4_fu_319_p2);
    sensitive << ( tmp_34_fu_299_p4 );
    sensitive << ( tmp_35_fu_309_p1 );

    SC_METHOD(thread_a_assign_s_fu_255_p2);
    sensitive << ( t_1_i_fu_250_p2 );
    sensitive << ( t_23_cast_fu_247_p1 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_fu_129_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_fu_129_p2 );

    SC_METHOD(thread_i_26_fu_135_p2);
    sensitive << ( i_reg_107 );

    SC_METHOD(thread_j_2_fu_159_p2);
    sensitive << ( j_reg_118 );

    SC_METHOD(thread_t_15_fu_219_p2);
    sensitive << ( tmp1_cast_fu_215_p1 );
    sensitive << ( t_cast_fu_183_p1 );

    SC_METHOD(thread_t_16_fu_241_p2);
    sensitive << ( t_15_fu_219_p2 );
    sensitive << ( tmp_285_i_cast_cast_fu_233_p3 );

    SC_METHOD(thread_t_1_i_fu_250_p2);
    sensitive << ( v_vec_coeffs_load_reg_390 );

    SC_METHOD(thread_t_23_cast_fu_247_p1);
    sensitive << ( t_16_reg_395 );

    SC_METHOD(thread_t_cast_fu_183_p1);
    sensitive << ( t_fu_179_p1 );

    SC_METHOD(thread_t_fu_179_p1);
    sensitive << ( v_vec_coeffs_q0 );

    SC_METHOD(thread_tmp1_cast_fu_215_p1);
    sensitive << ( tmp1_fu_209_p2 );

    SC_METHOD(thread_tmp1_fu_209_p2);
    sensitive << ( tmp_i_cast_fu_205_p1 );

    SC_METHOD(thread_tmp2_cast_fu_295_p1);
    sensitive << ( tmp2_fu_289_p2 );

    SC_METHOD(thread_tmp2_fu_289_p2);
    sensitive << ( tmp_76_fu_281_p3 );

    SC_METHOD(thread_tmp_285_i_cast_cast_fu_233_p3);
    sensitive << ( tmp_74_fu_225_p3 );

    SC_METHOD(thread_tmp_286_i_cast_fu_277_p1);
    sensitive << ( tmp_75_fu_267_p4 );

    SC_METHOD(thread_tmp_287_i_cast_fu_335_p1);
    sensitive << ( tmp_287_i_reg_406 );

    SC_METHOD(thread_tmp_288_i_fu_338_p2);
    sensitive << ( t_16_reg_395 );

    SC_METHOD(thread_tmp_29_fu_153_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( j_reg_118 );

    SC_METHOD(thread_tmp_30_cast_fu_165_p1);
    sensitive << ( j_reg_118 );

    SC_METHOD(thread_tmp_34_fu_299_p4);
    sensitive << ( a_assign_s_fu_255_p2 );

    SC_METHOD(thread_tmp_35_fu_309_p1);
    sensitive << ( tmp2_fu_289_p2 );

    SC_METHOD(thread_tmp_72_fu_169_p2);
    sensitive << ( tmp_76_cast_reg_366 );
    sensitive << ( tmp_30_cast_fu_165_p1 );

    SC_METHOD(thread_tmp_73_fu_187_p4);
    sensitive << ( v_vec_coeffs_q0 );

    SC_METHOD(thread_tmp_74_fu_225_p3);
    sensitive << ( t_15_fu_219_p2 );

    SC_METHOD(thread_tmp_75_fu_267_p4);
    sensitive << ( a_assign_s_fu_255_p2 );

    SC_METHOD(thread_tmp_76_cast_fu_149_p1);
    sensitive << ( tmp_s_fu_141_p3 );

    SC_METHOD(thread_tmp_76_fu_281_p3);
    sensitive << ( u_fu_261_p2 );

    SC_METHOD(thread_tmp_77_cast_fu_174_p1);
    sensitive << ( tmp_72_fu_169_p2 );

    SC_METHOD(thread_tmp_fu_129_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_reg_107 );

    SC_METHOD(thread_tmp_i_cast_fu_205_p1);
    sensitive << ( tmp_i_fu_197_p3 );

    SC_METHOD(thread_tmp_i_fu_197_p3);
    sensitive << ( tmp_73_fu_187_p4 );

    SC_METHOD(thread_tmp_s_fu_141_p3);
    sensitive << ( i_reg_107 );

    SC_METHOD(thread_u_fu_261_p2);
    sensitive << ( a_assign_s_fu_255_p2 );

    SC_METHOD(thread_v0_vec_coeffs_address0);
    sensitive << ( tmp_77_cast_reg_379 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_v0_vec_coeffs_ce0);
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_v0_vec_coeffs_d0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( a0_write_assign_fu_343_p2 );

    SC_METHOD(thread_v0_vec_coeffs_we0);
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_v1_vec_coeffs_address0);
    sensitive << ( tmp_77_cast_reg_379 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_v1_vec_coeffs_ce0);
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_v1_vec_coeffs_d0);
    sensitive << ( a_assign_4_reg_401 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_v1_vec_coeffs_we0);
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_v_vec_coeffs_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_77_cast_fu_174_p1 );

    SC_METHOD(thread_v_vec_coeffs_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_fu_129_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_29_fu_153_p2 );

    ap_CS_fsm = "000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "polyveck_decompose_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, v1_vec_coeffs_address0, "(port)v1_vec_coeffs_address0");
    sc_trace(mVcdFile, v1_vec_coeffs_ce0, "(port)v1_vec_coeffs_ce0");
    sc_trace(mVcdFile, v1_vec_coeffs_we0, "(port)v1_vec_coeffs_we0");
    sc_trace(mVcdFile, v1_vec_coeffs_d0, "(port)v1_vec_coeffs_d0");
    sc_trace(mVcdFile, v0_vec_coeffs_address0, "(port)v0_vec_coeffs_address0");
    sc_trace(mVcdFile, v0_vec_coeffs_ce0, "(port)v0_vec_coeffs_ce0");
    sc_trace(mVcdFile, v0_vec_coeffs_we0, "(port)v0_vec_coeffs_we0");
    sc_trace(mVcdFile, v0_vec_coeffs_d0, "(port)v0_vec_coeffs_d0");
    sc_trace(mVcdFile, v_vec_coeffs_address0, "(port)v_vec_coeffs_address0");
    sc_trace(mVcdFile, v_vec_coeffs_ce0, "(port)v_vec_coeffs_ce0");
    sc_trace(mVcdFile, v_vec_coeffs_q0, "(port)v_vec_coeffs_q0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, i_26_fu_135_p2, "i_26_fu_135_p2");
    sc_trace(mVcdFile, i_26_reg_361, "i_26_reg_361");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, tmp_76_cast_fu_149_p1, "tmp_76_cast_fu_149_p1");
    sc_trace(mVcdFile, tmp_76_cast_reg_366, "tmp_76_cast_reg_366");
    sc_trace(mVcdFile, tmp_fu_129_p2, "tmp_fu_129_p2");
    sc_trace(mVcdFile, j_2_fu_159_p2, "j_2_fu_159_p2");
    sc_trace(mVcdFile, j_2_reg_374, "j_2_reg_374");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, tmp_77_cast_fu_174_p1, "tmp_77_cast_fu_174_p1");
    sc_trace(mVcdFile, tmp_77_cast_reg_379, "tmp_77_cast_reg_379");
    sc_trace(mVcdFile, tmp_29_fu_153_p2, "tmp_29_fu_153_p2");
    sc_trace(mVcdFile, v_vec_coeffs_load_reg_390, "v_vec_coeffs_load_reg_390");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, t_16_fu_241_p2, "t_16_fu_241_p2");
    sc_trace(mVcdFile, t_16_reg_395, "t_16_reg_395");
    sc_trace(mVcdFile, a_assign_4_fu_319_p2, "a_assign_4_fu_319_p2");
    sc_trace(mVcdFile, a_assign_4_reg_401, "a_assign_4_reg_401");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, tmp_287_i_reg_406, "tmp_287_i_reg_406");
    sc_trace(mVcdFile, i_reg_107, "i_reg_107");
    sc_trace(mVcdFile, j_reg_118, "j_reg_118");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, tmp_s_fu_141_p3, "tmp_s_fu_141_p3");
    sc_trace(mVcdFile, tmp_30_cast_fu_165_p1, "tmp_30_cast_fu_165_p1");
    sc_trace(mVcdFile, tmp_72_fu_169_p2, "tmp_72_fu_169_p2");
    sc_trace(mVcdFile, t_fu_179_p1, "t_fu_179_p1");
    sc_trace(mVcdFile, tmp_73_fu_187_p4, "tmp_73_fu_187_p4");
    sc_trace(mVcdFile, tmp_i_fu_197_p3, "tmp_i_fu_197_p3");
    sc_trace(mVcdFile, tmp_i_cast_fu_205_p1, "tmp_i_cast_fu_205_p1");
    sc_trace(mVcdFile, tmp1_fu_209_p2, "tmp1_fu_209_p2");
    sc_trace(mVcdFile, tmp1_cast_fu_215_p1, "tmp1_cast_fu_215_p1");
    sc_trace(mVcdFile, t_cast_fu_183_p1, "t_cast_fu_183_p1");
    sc_trace(mVcdFile, t_15_fu_219_p2, "t_15_fu_219_p2");
    sc_trace(mVcdFile, tmp_74_fu_225_p3, "tmp_74_fu_225_p3");
    sc_trace(mVcdFile, tmp_285_i_cast_cast_fu_233_p3, "tmp_285_i_cast_cast_fu_233_p3");
    sc_trace(mVcdFile, t_1_i_fu_250_p2, "t_1_i_fu_250_p2");
    sc_trace(mVcdFile, t_23_cast_fu_247_p1, "t_23_cast_fu_247_p1");
    sc_trace(mVcdFile, a_assign_s_fu_255_p2, "a_assign_s_fu_255_p2");
    sc_trace(mVcdFile, tmp_75_fu_267_p4, "tmp_75_fu_267_p4");
    sc_trace(mVcdFile, u_fu_261_p2, "u_fu_261_p2");
    sc_trace(mVcdFile, tmp_76_fu_281_p3, "tmp_76_fu_281_p3");
    sc_trace(mVcdFile, tmp2_fu_289_p2, "tmp2_fu_289_p2");
    sc_trace(mVcdFile, tmp2_cast_fu_295_p1, "tmp2_cast_fu_295_p1");
    sc_trace(mVcdFile, tmp_286_i_cast_fu_277_p1, "tmp_286_i_cast_fu_277_p1");
    sc_trace(mVcdFile, tmp_34_fu_299_p4, "tmp_34_fu_299_p4");
    sc_trace(mVcdFile, tmp_35_fu_309_p1, "tmp_35_fu_309_p1");
    sc_trace(mVcdFile, a_assign_3_fu_313_p2, "a_assign_3_fu_313_p2");
    sc_trace(mVcdFile, tmp_288_i_fu_338_p2, "tmp_288_i_fu_338_p2");
    sc_trace(mVcdFile, tmp_287_i_cast_fu_335_p1, "tmp_287_i_cast_fu_335_p1");
    sc_trace(mVcdFile, a0_write_assign_fu_343_p2, "a0_write_assign_fu_343_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

polyveck_decompose::~polyveck_decompose() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void polyveck_decompose::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(tmp_29_fu_153_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        i_reg_107 = i_26_reg_361.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_reg_107 = ap_const_lv3_0;
    }
    if ((esl_seteq<1,1,1>(tmp_fu_129_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        j_reg_118 = ap_const_lv9_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        j_reg_118 = j_2_reg_374.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        a_assign_4_reg_401 = a_assign_4_fu_319_p2.read();
        tmp_287_i_reg_406 = a_assign_3_fu_313_p2.read().range(13, 4);
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        i_26_reg_361 = i_26_fu_135_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        j_2_reg_374 = j_2_fu_159_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        t_16_reg_395 = t_16_fu_241_p2.read();
        v_vec_coeffs_load_reg_390 = v_vec_coeffs_q0.read();
    }
    if ((esl_seteq<1,1,1>(tmp_fu_129_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        tmp_76_cast_reg_366 = tmp_76_cast_fu_149_p1.read();
    }
    if ((esl_seteq<1,1,1>(tmp_29_fu_153_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        tmp_77_cast_reg_379 = tmp_77_cast_fu_174_p1.read();
    }
}

void polyveck_decompose::thread_a0_write_assign_fu_343_p2() {
    a0_write_assign_fu_343_p2 = (!tmp_288_i_fu_338_p2.read().is_01() || !tmp_287_i_cast_fu_335_p1.read().is_01())? sc_lv<24>(): (sc_biguint<24>(tmp_288_i_fu_338_p2.read()) - sc_biguint<24>(tmp_287_i_cast_fu_335_p1.read()));
}

void polyveck_decompose::thread_a_assign_3_fu_313_p2() {
    a_assign_3_fu_313_p2 = (!tmp2_cast_fu_295_p1.read().is_01() || !tmp_286_i_cast_fu_277_p1.read().is_01())? sc_lv<14>(): (sc_biguint<14>(tmp2_cast_fu_295_p1.read()) + sc_biguint<14>(tmp_286_i_cast_fu_277_p1.read()));
}

void polyveck_decompose::thread_a_assign_4_fu_319_p2() {
    a_assign_4_fu_319_p2 = (!tmp_34_fu_299_p4.read().is_01() || !tmp_35_fu_309_p1.read().is_01())? sc_lv<4>(): (sc_biguint<4>(tmp_34_fu_299_p4.read()) + sc_biguint<4>(tmp_35_fu_309_p1.read()));
}

void polyveck_decompose::thread_a_assign_s_fu_255_p2() {
    a_assign_s_fu_255_p2 = (!t_1_i_fu_250_p2.read().is_01() || !t_23_cast_fu_247_p1.read().is_01())? sc_lv<32>(): (sc_biguint<32>(t_1_i_fu_250_p2.read()) - sc_bigint<32>(t_23_cast_fu_247_p1.read()));
}

void polyveck_decompose::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void polyveck_decompose::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void polyveck_decompose::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void polyveck_decompose::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void polyveck_decompose::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void polyveck_decompose::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void polyveck_decompose::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(tmp_fu_129_p2.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void polyveck_decompose::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void polyveck_decompose::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(tmp_fu_129_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void polyveck_decompose::thread_i_26_fu_135_p2() {
    i_26_fu_135_p2 = (!i_reg_107.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(i_reg_107.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void polyveck_decompose::thread_j_2_fu_159_p2() {
    j_2_fu_159_p2 = (!j_reg_118.read().is_01() || !ap_const_lv9_1.is_01())? sc_lv<9>(): (sc_biguint<9>(j_reg_118.read()) + sc_biguint<9>(ap_const_lv9_1));
}

void polyveck_decompose::thread_t_15_fu_219_p2() {
    t_15_fu_219_p2 = (!tmp1_cast_fu_215_p1.read().is_01() || !t_cast_fu_183_p1.read().is_01())? sc_lv<24>(): (sc_bigint<24>(tmp1_cast_fu_215_p1.read()) + sc_biguint<24>(t_cast_fu_183_p1.read()));
}

void polyveck_decompose::thread_t_16_fu_241_p2() {
    t_16_fu_241_p2 = (!tmp_285_i_cast_cast_fu_233_p3.read().is_01() || !t_15_fu_219_p2.read().is_01())? sc_lv<24>(): (sc_biguint<24>(tmp_285_i_cast_cast_fu_233_p3.read()) + sc_biguint<24>(t_15_fu_219_p2.read()));
}

void polyveck_decompose::thread_t_1_i_fu_250_p2() {
    t_1_i_fu_250_p2 = (!ap_const_lv32_3FEFF.is_01() || !v_vec_coeffs_load_reg_390.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_3FEFF) + sc_biguint<32>(v_vec_coeffs_load_reg_390.read()));
}

void polyveck_decompose::thread_t_23_cast_fu_247_p1() {
    t_23_cast_fu_247_p1 = esl_sext<32,24>(t_16_reg_395.read());
}

void polyveck_decompose::thread_t_cast_fu_183_p1() {
    t_cast_fu_183_p1 = esl_zext<24,19>(t_fu_179_p1.read());
}

void polyveck_decompose::thread_t_fu_179_p1() {
    t_fu_179_p1 = v_vec_coeffs_q0.read().range(19-1, 0);
}

void polyveck_decompose::thread_tmp1_cast_fu_215_p1() {
    tmp1_cast_fu_215_p1 = esl_sext<24,23>(tmp1_fu_209_p2.read());
}

void polyveck_decompose::thread_tmp1_fu_209_p2() {
    tmp1_fu_209_p2 = (!ap_const_lv23_7C00FF.is_01() || !tmp_i_cast_fu_205_p1.read().is_01())? sc_lv<23>(): (sc_bigint<23>(ap_const_lv23_7C00FF) + sc_biguint<23>(tmp_i_cast_fu_205_p1.read()));
}

void polyveck_decompose::thread_tmp2_cast_fu_295_p1() {
    tmp2_cast_fu_295_p1 = esl_zext<14,1>(tmp2_fu_289_p2.read());
}

void polyveck_decompose::thread_tmp2_fu_289_p2() {
    tmp2_fu_289_p2 = (tmp_76_fu_281_p3.read() ^ ap_const_lv1_1);
}

void polyveck_decompose::thread_tmp_285_i_cast_cast_fu_233_p3() {
    tmp_285_i_cast_cast_fu_233_p3 = (!tmp_74_fu_225_p3.read()[0].is_01())? sc_lv<24>(): ((tmp_74_fu_225_p3.read()[0].to_bool())? ap_const_lv24_7FE00: ap_const_lv24_0);
}

void polyveck_decompose::thread_tmp_286_i_cast_fu_277_p1() {
    tmp_286_i_cast_fu_277_p1 = esl_zext<14,13>(tmp_75_fu_267_p4.read());
}

void polyveck_decompose::thread_tmp_287_i_cast_fu_335_p1() {
    tmp_287_i_cast_fu_335_p1 = esl_zext<24,10>(tmp_287_i_reg_406.read());
}

void polyveck_decompose::thread_tmp_288_i_fu_338_p2() {
    tmp_288_i_fu_338_p2 = (!ap_const_lv24_7BE102.is_01() || !t_16_reg_395.read().is_01())? sc_lv<24>(): (sc_biguint<24>(ap_const_lv24_7BE102) + sc_bigint<24>(t_16_reg_395.read()));
}

void polyveck_decompose::thread_tmp_29_fu_153_p2() {
    tmp_29_fu_153_p2 = (!j_reg_118.read().is_01() || !ap_const_lv9_100.is_01())? sc_lv<1>(): sc_lv<1>(j_reg_118.read() == ap_const_lv9_100);
}

void polyveck_decompose::thread_tmp_30_cast_fu_165_p1() {
    tmp_30_cast_fu_165_p1 = esl_zext<12,9>(j_reg_118.read());
}

void polyveck_decompose::thread_tmp_34_fu_299_p4() {
    tmp_34_fu_299_p4 = a_assign_s_fu_255_p2.read().range(22, 19);
}

void polyveck_decompose::thread_tmp_35_fu_309_p1() {
    tmp_35_fu_309_p1 = esl_zext<4,1>(tmp2_fu_289_p2.read());
}

void polyveck_decompose::thread_tmp_72_fu_169_p2() {
    tmp_72_fu_169_p2 = (!tmp_30_cast_fu_165_p1.read().is_01() || !tmp_76_cast_reg_366.read().is_01())? sc_lv<12>(): (sc_biguint<12>(tmp_30_cast_fu_165_p1.read()) + sc_biguint<12>(tmp_76_cast_reg_366.read()));
}

void polyveck_decompose::thread_tmp_73_fu_187_p4() {
    tmp_73_fu_187_p4 = v_vec_coeffs_q0.read().range(31, 19);
}

void polyveck_decompose::thread_tmp_74_fu_225_p3() {
    tmp_74_fu_225_p3 = t_15_fu_219_p2.read().range(23, 23);
}

void polyveck_decompose::thread_tmp_75_fu_267_p4() {
    tmp_75_fu_267_p4 = a_assign_s_fu_255_p2.read().range(31, 19);
}

void polyveck_decompose::thread_tmp_76_cast_fu_149_p1() {
    tmp_76_cast_fu_149_p1 = esl_zext<12,11>(tmp_s_fu_141_p3.read());
}

void polyveck_decompose::thread_tmp_76_fu_281_p3() {
    tmp_76_fu_281_p3 = u_fu_261_p2.read().range(31, 31);
}

void polyveck_decompose::thread_tmp_77_cast_fu_174_p1() {
    tmp_77_cast_fu_174_p1 = esl_zext<64,12>(tmp_72_fu_169_p2.read());
}

void polyveck_decompose::thread_tmp_fu_129_p2() {
    tmp_fu_129_p2 = (!i_reg_107.read().is_01() || !ap_const_lv3_5.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_107.read() == ap_const_lv3_5);
}

void polyveck_decompose::thread_tmp_i_cast_fu_205_p1() {
    tmp_i_cast_fu_205_p1 = esl_zext<23,22>(tmp_i_fu_197_p3.read());
}

void polyveck_decompose::thread_tmp_i_fu_197_p3() {
    tmp_i_fu_197_p3 = esl_concat<13,9>(tmp_73_fu_187_p4.read(), ap_const_lv9_0);
}

void polyveck_decompose::thread_tmp_s_fu_141_p3() {
    tmp_s_fu_141_p3 = esl_concat<3,8>(i_reg_107.read(), ap_const_lv8_0);
}

void polyveck_decompose::thread_u_fu_261_p2() {
    u_fu_261_p2 = (!ap_const_lv32_FFFFFFFF.is_01() || !a_assign_s_fu_255_p2.read().is_01())? sc_lv<32>(): (sc_bigint<32>(ap_const_lv32_FFFFFFFF) + sc_biguint<32>(a_assign_s_fu_255_p2.read()));
}

void polyveck_decompose::thread_v0_vec_coeffs_address0() {
    v0_vec_coeffs_address0 =  (sc_lv<11>) (tmp_77_cast_reg_379.read());
}

void polyveck_decompose::thread_v0_vec_coeffs_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        v0_vec_coeffs_ce0 = ap_const_logic_1;
    } else {
        v0_vec_coeffs_ce0 = ap_const_logic_0;
    }
}

void polyveck_decompose::thread_v0_vec_coeffs_d0() {
    v0_vec_coeffs_d0 = esl_zext<32,24>(a0_write_assign_fu_343_p2.read());
}

void polyveck_decompose::thread_v0_vec_coeffs_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        v0_vec_coeffs_we0 = ap_const_logic_1;
    } else {
        v0_vec_coeffs_we0 = ap_const_logic_0;
    }
}

void polyveck_decompose::thread_v1_vec_coeffs_address0() {
    v1_vec_coeffs_address0 =  (sc_lv<11>) (tmp_77_cast_reg_379.read());
}

void polyveck_decompose::thread_v1_vec_coeffs_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        v1_vec_coeffs_ce0 = ap_const_logic_1;
    } else {
        v1_vec_coeffs_ce0 = ap_const_logic_0;
    }
}

void polyveck_decompose::thread_v1_vec_coeffs_d0() {
    v1_vec_coeffs_d0 = esl_zext<32,4>(a_assign_4_reg_401.read());
}

void polyveck_decompose::thread_v1_vec_coeffs_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        v1_vec_coeffs_we0 = ap_const_logic_1;
    } else {
        v1_vec_coeffs_we0 = ap_const_logic_0;
    }
}

void polyveck_decompose::thread_v_vec_coeffs_address0() {
    v_vec_coeffs_address0 =  (sc_lv<11>) (tmp_77_cast_fu_174_p1.read());
}

void polyveck_decompose::thread_v_vec_coeffs_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        v_vec_coeffs_ce0 = ap_const_logic_1;
    } else {
        v_vec_coeffs_ce0 = ap_const_logic_0;
    }
}

void polyveck_decompose::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(tmp_fu_129_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(tmp_29_fu_153_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        default : 
            ap_NS_fsm = "XXXXXX";
            break;
    }
}

}

