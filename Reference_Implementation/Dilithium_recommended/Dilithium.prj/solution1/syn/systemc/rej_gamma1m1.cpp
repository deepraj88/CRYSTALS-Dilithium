// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "rej_gamma1m1.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic rej_gamma1m1::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic rej_gamma1m1::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<6> rej_gamma1m1::ap_ST_fsm_state1 = "1";
const sc_lv<6> rej_gamma1m1::ap_ST_fsm_state2 = "10";
const sc_lv<6> rej_gamma1m1::ap_ST_fsm_state3 = "100";
const sc_lv<6> rej_gamma1m1::ap_ST_fsm_state4 = "1000";
const sc_lv<6> rej_gamma1m1::ap_ST_fsm_state5 = "10000";
const sc_lv<6> rej_gamma1m1::ap_ST_fsm_state6 = "100000";
const sc_lv<32> rej_gamma1m1::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> rej_gamma1m1::ap_const_lv32_1 = "1";
const sc_lv<1> rej_gamma1m1::ap_const_lv1_1 = "1";
const sc_lv<32> rej_gamma1m1::ap_const_lv32_2 = "10";
const sc_lv<32> rej_gamma1m1::ap_const_lv32_3 = "11";
const sc_lv<32> rej_gamma1m1::ap_const_lv32_4 = "100";
const sc_lv<9> rej_gamma1m1::ap_const_lv9_0 = "000000000";
const sc_lv<32> rej_gamma1m1::ap_const_lv32_5 = "101";
const sc_lv<1> rej_gamma1m1::ap_const_lv1_0 = "0";
const sc_lv<24> rej_gamma1m1::ap_const_lv24_87DE00 = "100001111101111000000000";
const sc_lv<8> rej_gamma1m1::ap_const_lv8_0 = "00000000";
const sc_lv<10> rej_gamma1m1::ap_const_lv10_3FB = "1111111011";
const sc_lv<32> rej_gamma1m1::ap_const_lv32_7 = "111";
const sc_lv<4> rej_gamma1m1::ap_const_lv4_0 = "0000";
const sc_lv<20> rej_gamma1m1::ap_const_lv20_FFBFF = "11111111101111111111";
const sc_lv<9> rej_gamma1m1::ap_const_lv9_1 = "1";
const bool rej_gamma1m1::ap_const_boolean_1 = true;

rej_gamma1m1::rej_gamma1m1(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_a_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_42_cast_fu_348_p1 );
    sensitive << ( tmp_43_cast_fu_384_p1 );

    SC_METHOD(thread_a_ce0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_a_d0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( grp_fu_194_p1 );

    SC_METHOD(thread_a_we0);
    sensitive << ( tmp_s_reg_415 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_19_fu_322_p2 );
    sensitive << ( or_cond_reg_460 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( tmp_s_reg_415 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_25_fu_388_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_phi_mux_ctr_2_phi_fu_175_p4);
    sensitive << ( tmp_s_reg_415 );
    sensitive << ( or_cond_reg_460 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ctr_5_fu_377_p2 );
    sensitive << ( ctr_2_reg_171 );

    SC_METHOD(thread_ap_phi_mux_ctr_3_phi_fu_186_p4);
    sensitive << ( tmp_s_reg_415 );
    sensitive << ( ap_phi_mux_ctr_2_phi_fu_175_p4 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_25_fu_388_p2 );
    sensitive << ( ctr_3_reg_183 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( tmp_s_reg_415 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_25_fu_388_p2 );

    SC_METHOD(thread_ap_return);
    sensitive << ( tmp_s_reg_415 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_25_fu_388_p2 );
    sensitive << ( ap_phi_mux_ctr_3_phi_fu_186_p4 );
    sensitive << ( ap_return_preg );

    SC_METHOD(thread_buf_r_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_13_fu_241_p1 );
    sensitive << ( tmp_15_fu_262_p1 );

    SC_METHOD(thread_buf_r_address1);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_18_fu_273_p1 );

    SC_METHOD(thread_buf_r_ce0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_buf_r_ce1);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_ctr_4_fu_328_p2);
    sensitive << ( ctr_reg_136 );

    SC_METHOD(thread_ctr_5_fu_377_p2);
    sensitive << ( ctr_1_reg_160 );

    SC_METHOD(thread_grp_fu_194_p1);
    sensitive << ( t_2_cast_fu_311_p1 );
    sensitive << ( t_2_cast_reg_439 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_or_cond_fu_358_p2);
    sensitive << ( tmp_19_reg_450 );
    sensitive << ( tmp_23_fu_353_p2 );

    SC_METHOD(thread_pos_1_fu_316_p2);
    sensitive << ( pos_reg_148 );

    SC_METHOD(thread_sum3_cast_cast_fu_368_p1);
    sensitive << ( sum3_fu_363_p2 );

    SC_METHOD(thread_sum3_fu_363_p2);
    sensitive << ( a_offset1 );
    sensitive << ( ctr_1_reg_160 );

    SC_METHOD(thread_sum_cast_cast_fu_339_p1);
    sensitive << ( sum_fu_334_p2 );

    SC_METHOD(thread_sum_fu_334_p2);
    sensitive << ( a_offset1 );
    sensitive << ( ctr_reg_136 );

    SC_METHOD(thread_t_1_fu_303_p3);
    sensitive << ( buf_r_q1 );
    sensitive << ( tmp_21_fu_297_p2 );

    SC_METHOD(thread_t_2_cast_fu_311_p1);
    sensitive << ( t_1_fu_303_p3 );

    SC_METHOD(thread_t_2_fu_278_p1);
    sensitive << ( t_reg_424 );

    SC_METHOD(thread_tmp_12_fu_235_p2);
    sensitive << ( pos_reg_148 );

    SC_METHOD(thread_tmp_13_fu_241_p1);
    sensitive << ( tmp_12_fu_235_p2 );

    SC_METHOD(thread_tmp_14_fu_256_p2);
    sensitive << ( pos_reg_148 );

    SC_METHOD(thread_tmp_15_fu_262_p1);
    sensitive << ( tmp_14_fu_256_p2 );

    SC_METHOD(thread_tmp_16_fu_281_p3);
    sensitive << ( buf_r_q0 );

    SC_METHOD(thread_tmp_17_fu_267_p2);
    sensitive << ( pos_reg_148 );

    SC_METHOD(thread_tmp_18_fu_273_p1);
    sensitive << ( tmp_17_fu_267_p2 );

    SC_METHOD(thread_tmp_19_fu_322_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( t_1_fu_303_p3 );

    SC_METHOD(thread_tmp_20_fu_289_p3);
    sensitive << ( t_2_fu_278_p1 );

    SC_METHOD(thread_tmp_21_fu_297_p2);
    sensitive << ( tmp_20_fu_289_p3 );
    sensitive << ( tmp_16_fu_281_p3 );

    SC_METHOD(thread_tmp_23_fu_353_p2);
    sensitive << ( tmp_45_reg_409 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ctr_1_reg_160 );

    SC_METHOD(thread_tmp_25_fu_388_p2);
    sensitive << ( tmp_cast_reg_404 );
    sensitive << ( tmp_s_reg_415 );
    sensitive << ( pos_1_reg_444 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_tmp_39_fu_200_p3);
    sensitive << ( a_offset );

    SC_METHOD(thread_tmp_40_cast_fu_208_p1);
    sensitive << ( tmp_39_fu_200_p3 );

    SC_METHOD(thread_tmp_40_fu_343_p2);
    sensitive << ( tmp_40_cast_reg_398 );
    sensitive << ( sum_cast_cast_fu_339_p1 );

    SC_METHOD(thread_tmp_41_fu_372_p2);
    sensitive << ( tmp_40_cast_reg_398 );
    sensitive << ( sum3_cast_cast_fu_368_p1 );

    SC_METHOD(thread_tmp_42_cast_fu_348_p1);
    sensitive << ( tmp_40_fu_343_p2 );

    SC_METHOD(thread_tmp_43_cast_fu_384_p1);
    sensitive << ( tmp_41_reg_464 );

    SC_METHOD(thread_tmp_44_fu_212_p1);
    sensitive << ( buflen );

    SC_METHOD(thread_tmp_45_fu_226_p1);
    sensitive << ( len );

    SC_METHOD(thread_tmp_cast_fu_222_p1);
    sensitive << ( tmp_fu_216_p2 );

    SC_METHOD(thread_tmp_fu_216_p2);
    sensitive << ( tmp_44_fu_212_p1 );

    SC_METHOD(thread_tmp_s_fu_230_p2);
    sensitive << ( tmp_45_reg_409 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ctr_reg_136 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( tmp_s_fu_230_p2 );
    sensitive << ( tmp_s_reg_415 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_25_fu_388_p2 );

    ap_CS_fsm = "000001";
    ap_return_preg = "000000000";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "rej_gamma1m1_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, a_address0, "(port)a_address0");
    sc_trace(mVcdFile, a_ce0, "(port)a_ce0");
    sc_trace(mVcdFile, a_we0, "(port)a_we0");
    sc_trace(mVcdFile, a_d0, "(port)a_d0");
    sc_trace(mVcdFile, a_offset, "(port)a_offset");
    sc_trace(mVcdFile, a_offset1, "(port)a_offset1");
    sc_trace(mVcdFile, len, "(port)len");
    sc_trace(mVcdFile, buf_r_address0, "(port)buf_r_address0");
    sc_trace(mVcdFile, buf_r_ce0, "(port)buf_r_ce0");
    sc_trace(mVcdFile, buf_r_q0, "(port)buf_r_q0");
    sc_trace(mVcdFile, buf_r_address1, "(port)buf_r_address1");
    sc_trace(mVcdFile, buf_r_ce1, "(port)buf_r_ce1");
    sc_trace(mVcdFile, buf_r_q1, "(port)buf_r_q1");
    sc_trace(mVcdFile, buflen, "(port)buflen");
    sc_trace(mVcdFile, ap_return, "(port)ap_return");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, tmp_40_cast_fu_208_p1, "tmp_40_cast_fu_208_p1");
    sc_trace(mVcdFile, tmp_40_cast_reg_398, "tmp_40_cast_reg_398");
    sc_trace(mVcdFile, tmp_cast_fu_222_p1, "tmp_cast_fu_222_p1");
    sc_trace(mVcdFile, tmp_cast_reg_404, "tmp_cast_reg_404");
    sc_trace(mVcdFile, tmp_45_fu_226_p1, "tmp_45_fu_226_p1");
    sc_trace(mVcdFile, tmp_45_reg_409, "tmp_45_reg_409");
    sc_trace(mVcdFile, tmp_s_fu_230_p2, "tmp_s_fu_230_p2");
    sc_trace(mVcdFile, tmp_s_reg_415, "tmp_s_reg_415");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, t_reg_424, "t_reg_424");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, t_2_cast_fu_311_p1, "t_2_cast_fu_311_p1");
    sc_trace(mVcdFile, t_2_cast_reg_439, "t_2_cast_reg_439");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, pos_1_fu_316_p2, "pos_1_fu_316_p2");
    sc_trace(mVcdFile, pos_1_reg_444, "pos_1_reg_444");
    sc_trace(mVcdFile, tmp_19_fu_322_p2, "tmp_19_fu_322_p2");
    sc_trace(mVcdFile, tmp_19_reg_450, "tmp_19_reg_450");
    sc_trace(mVcdFile, ctr_4_fu_328_p2, "ctr_4_fu_328_p2");
    sc_trace(mVcdFile, or_cond_fu_358_p2, "or_cond_fu_358_p2");
    sc_trace(mVcdFile, or_cond_reg_460, "or_cond_reg_460");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, tmp_41_fu_372_p2, "tmp_41_fu_372_p2");
    sc_trace(mVcdFile, tmp_41_reg_464, "tmp_41_reg_464");
    sc_trace(mVcdFile, ctr_reg_136, "ctr_reg_136");
    sc_trace(mVcdFile, ap_phi_mux_ctr_2_phi_fu_175_p4, "ap_phi_mux_ctr_2_phi_fu_175_p4");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, tmp_25_fu_388_p2, "tmp_25_fu_388_p2");
    sc_trace(mVcdFile, pos_reg_148, "pos_reg_148");
    sc_trace(mVcdFile, ctr_1_reg_160, "ctr_1_reg_160");
    sc_trace(mVcdFile, ctr_5_fu_377_p2, "ctr_5_fu_377_p2");
    sc_trace(mVcdFile, ctr_2_reg_171, "ctr_2_reg_171");
    sc_trace(mVcdFile, ap_phi_mux_ctr_3_phi_fu_186_p4, "ap_phi_mux_ctr_3_phi_fu_186_p4");
    sc_trace(mVcdFile, ctr_3_reg_183, "ctr_3_reg_183");
    sc_trace(mVcdFile, tmp_13_fu_241_p1, "tmp_13_fu_241_p1");
    sc_trace(mVcdFile, tmp_15_fu_262_p1, "tmp_15_fu_262_p1");
    sc_trace(mVcdFile, tmp_18_fu_273_p1, "tmp_18_fu_273_p1");
    sc_trace(mVcdFile, tmp_42_cast_fu_348_p1, "tmp_42_cast_fu_348_p1");
    sc_trace(mVcdFile, tmp_43_cast_fu_384_p1, "tmp_43_cast_fu_384_p1");
    sc_trace(mVcdFile, grp_fu_194_p1, "grp_fu_194_p1");
    sc_trace(mVcdFile, tmp_39_fu_200_p3, "tmp_39_fu_200_p3");
    sc_trace(mVcdFile, tmp_44_fu_212_p1, "tmp_44_fu_212_p1");
    sc_trace(mVcdFile, tmp_fu_216_p2, "tmp_fu_216_p2");
    sc_trace(mVcdFile, tmp_12_fu_235_p2, "tmp_12_fu_235_p2");
    sc_trace(mVcdFile, tmp_14_fu_256_p2, "tmp_14_fu_256_p2");
    sc_trace(mVcdFile, tmp_17_fu_267_p2, "tmp_17_fu_267_p2");
    sc_trace(mVcdFile, t_2_fu_278_p1, "t_2_fu_278_p1");
    sc_trace(mVcdFile, tmp_20_fu_289_p3, "tmp_20_fu_289_p3");
    sc_trace(mVcdFile, tmp_16_fu_281_p3, "tmp_16_fu_281_p3");
    sc_trace(mVcdFile, tmp_21_fu_297_p2, "tmp_21_fu_297_p2");
    sc_trace(mVcdFile, t_1_fu_303_p3, "t_1_fu_303_p3");
    sc_trace(mVcdFile, sum_fu_334_p2, "sum_fu_334_p2");
    sc_trace(mVcdFile, sum_cast_cast_fu_339_p1, "sum_cast_cast_fu_339_p1");
    sc_trace(mVcdFile, tmp_40_fu_343_p2, "tmp_40_fu_343_p2");
    sc_trace(mVcdFile, tmp_23_fu_353_p2, "tmp_23_fu_353_p2");
    sc_trace(mVcdFile, sum3_fu_363_p2, "sum3_fu_363_p2");
    sc_trace(mVcdFile, sum3_cast_cast_fu_368_p1, "sum3_cast_cast_fu_368_p1");
    sc_trace(mVcdFile, ap_return_preg, "ap_return_preg");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

rej_gamma1m1::~rej_gamma1m1() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void rej_gamma1m1::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_preg = ap_const_lv9_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
             (esl_seteq<1,1,1>(tmp_25_fu_388_p2.read(), ap_const_lv1_1) || 
              esl_seteq<1,1,1>(tmp_s_reg_415.read(), ap_const_lv1_0)))) {
            ap_return_preg = ap_phi_mux_ctr_3_phi_fu_186_p4.read();
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        if (esl_seteq<1,1,1>(tmp_19_fu_322_p2.read(), ap_const_lv1_0)) {
            ctr_1_reg_160 = ctr_reg_136.read();
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, tmp_19_fu_322_p2.read())) {
            ctr_1_reg_160 = ctr_4_fu_328_p2.read();
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(or_cond_fu_358_p2.read(), ap_const_lv1_0))) {
        ctr_2_reg_171 = ctr_1_reg_160.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
                esl_seteq<1,1,1>(tmp_s_reg_415.read(), ap_const_lv1_1) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, or_cond_reg_460.read()))) {
        ctr_2_reg_171 = ctr_5_fu_377_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         esl_seteq<1,1,1>(tmp_s_reg_415.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(tmp_25_fu_388_p2.read(), ap_const_lv1_1))) {
        ctr_3_reg_183 = ap_phi_mux_ctr_2_phi_fu_175_p4.read();
    } else if ((esl_seteq<1,1,1>(tmp_s_fu_230_p2.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        ctr_3_reg_183 = ctr_reg_136.read();
    }
    if ((esl_seteq<1,1,1>(tmp_s_reg_415.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         esl_seteq<1,1,1>(tmp_25_fu_388_p2.read(), ap_const_lv1_0))) {
        ctr_reg_136 = ap_phi_mux_ctr_2_phi_fu_175_p4.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        ctr_reg_136 = ap_const_lv9_0;
    }
    if ((esl_seteq<1,1,1>(tmp_s_reg_415.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         esl_seteq<1,1,1>(tmp_25_fu_388_p2.read(), ap_const_lv1_0))) {
        pos_reg_148 = pos_1_reg_444.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        pos_reg_148 = ap_const_lv32_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        or_cond_reg_460 = or_cond_fu_358_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        pos_1_reg_444 = pos_1_fu_316_p2.read();
        t_2_cast_reg_439 = t_2_cast_fu_311_p1.read();
        tmp_19_reg_450 = tmp_19_fu_322_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        t_reg_424 = buf_r_q0.read().range(7, 4);
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        tmp_40_cast_reg_398 = tmp_40_cast_fu_208_p1.read();
        tmp_45_reg_409 = tmp_45_fu_226_p1.read();
        tmp_cast_reg_404 = tmp_cast_fu_222_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, or_cond_fu_358_p2.read()))) {
        tmp_41_reg_464 = tmp_41_fu_372_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        tmp_s_reg_415 = tmp_s_fu_230_p2.read();
    }
}

void rej_gamma1m1::thread_a_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        a_address0 =  (sc_lv<10>) (tmp_43_cast_fu_384_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        a_address0 =  (sc_lv<10>) (tmp_42_cast_fu_348_p1.read());
    } else {
        a_address0 = "XXXXXXXXXX";
    }
}

void rej_gamma1m1::thread_a_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
        a_ce0 = ap_const_logic_1;
    } else {
        a_ce0 = ap_const_logic_0;
    }
}

void rej_gamma1m1::thread_a_d0() {
    a_d0 = (!ap_const_lv24_87DE00.is_01() || !grp_fu_194_p1.read().is_01())? sc_lv<24>(): (sc_bigint<24>(ap_const_lv24_87DE00) - sc_biguint<24>(grp_fu_194_p1.read()));
}

void rej_gamma1m1::thread_a_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_19_fu_322_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
          esl_seteq<1,1,1>(tmp_s_reg_415.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, or_cond_reg_460.read())))) {
        a_we0 = ap_const_logic_1;
    } else {
        a_we0 = ap_const_logic_0;
    }
}

void rej_gamma1m1::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void rej_gamma1m1::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void rej_gamma1m1::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void rej_gamma1m1::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void rej_gamma1m1::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void rej_gamma1m1::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void rej_gamma1m1::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
          (esl_seteq<1,1,1>(tmp_25_fu_388_p2.read(), ap_const_lv1_1) || 
           esl_seteq<1,1,1>(tmp_s_reg_415.read(), ap_const_lv1_0))))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void rej_gamma1m1::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void rej_gamma1m1::thread_ap_phi_mux_ctr_2_phi_fu_175_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         esl_seteq<1,1,1>(tmp_s_reg_415.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, or_cond_reg_460.read()))) {
        ap_phi_mux_ctr_2_phi_fu_175_p4 = ctr_5_fu_377_p2.read();
    } else {
        ap_phi_mux_ctr_2_phi_fu_175_p4 = ctr_2_reg_171.read();
    }
}

void rej_gamma1m1::thread_ap_phi_mux_ctr_3_phi_fu_186_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         esl_seteq<1,1,1>(tmp_s_reg_415.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(tmp_25_fu_388_p2.read(), ap_const_lv1_1))) {
        ap_phi_mux_ctr_3_phi_fu_186_p4 = ap_phi_mux_ctr_2_phi_fu_175_p4.read();
    } else {
        ap_phi_mux_ctr_3_phi_fu_186_p4 = ctr_3_reg_183.read();
    }
}

void rej_gamma1m1::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         (esl_seteq<1,1,1>(tmp_25_fu_388_p2.read(), ap_const_lv1_1) || 
          esl_seteq<1,1,1>(tmp_s_reg_415.read(), ap_const_lv1_0)))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void rej_gamma1m1::thread_ap_return() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         (esl_seteq<1,1,1>(tmp_25_fu_388_p2.read(), ap_const_lv1_1) || 
          esl_seteq<1,1,1>(tmp_s_reg_415.read(), ap_const_lv1_0)))) {
        ap_return = ap_phi_mux_ctr_3_phi_fu_186_p4.read();
    } else {
        ap_return = ap_return_preg.read();
    }
}

void rej_gamma1m1::thread_buf_r_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        buf_r_address0 =  (sc_lv<10>) (tmp_15_fu_262_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        buf_r_address0 =  (sc_lv<10>) (tmp_13_fu_241_p1.read());
    } else {
        buf_r_address0 = "XXXXXXXXXX";
    }
}

void rej_gamma1m1::thread_buf_r_address1() {
    buf_r_address1 =  (sc_lv<10>) (tmp_18_fu_273_p1.read());
}

void rej_gamma1m1::thread_buf_r_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        buf_r_ce0 = ap_const_logic_1;
    } else {
        buf_r_ce0 = ap_const_logic_0;
    }
}

void rej_gamma1m1::thread_buf_r_ce1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        buf_r_ce1 = ap_const_logic_1;
    } else {
        buf_r_ce1 = ap_const_logic_0;
    }
}

void rej_gamma1m1::thread_ctr_4_fu_328_p2() {
    ctr_4_fu_328_p2 = (!ctr_reg_136.read().is_01() || !ap_const_lv9_1.is_01())? sc_lv<9>(): (sc_biguint<9>(ctr_reg_136.read()) + sc_biguint<9>(ap_const_lv9_1));
}

void rej_gamma1m1::thread_ctr_5_fu_377_p2() {
    ctr_5_fu_377_p2 = (!ctr_1_reg_160.read().is_01() || !ap_const_lv9_1.is_01())? sc_lv<9>(): (sc_biguint<9>(ctr_1_reg_160.read()) + sc_biguint<9>(ap_const_lv9_1));
}

void rej_gamma1m1::thread_grp_fu_194_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        grp_fu_194_p1 = t_2_cast_reg_439.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        grp_fu_194_p1 = t_2_cast_fu_311_p1.read();
    } else {
        grp_fu_194_p1 =  (sc_lv<24>) ("XXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void rej_gamma1m1::thread_or_cond_fu_358_p2() {
    or_cond_fu_358_p2 = (tmp_19_reg_450.read() & tmp_23_fu_353_p2.read());
}

void rej_gamma1m1::thread_pos_1_fu_316_p2() {
    pos_1_fu_316_p2 = (!pos_reg_148.read().is_01() || !ap_const_lv32_5.is_01())? sc_lv<32>(): (sc_biguint<32>(pos_reg_148.read()) + sc_biguint<32>(ap_const_lv32_5));
}

void rej_gamma1m1::thread_sum3_cast_cast_fu_368_p1() {
    sum3_cast_cast_fu_368_p1 = esl_zext<12,9>(sum3_fu_363_p2.read());
}

void rej_gamma1m1::thread_sum3_fu_363_p2() {
    sum3_fu_363_p2 = (!a_offset1.read().is_01() || !ctr_1_reg_160.read().is_01())? sc_lv<9>(): (sc_biguint<9>(a_offset1.read()) + sc_biguint<9>(ctr_1_reg_160.read()));
}

void rej_gamma1m1::thread_sum_cast_cast_fu_339_p1() {
    sum_cast_cast_fu_339_p1 = esl_zext<12,9>(sum_fu_334_p2.read());
}

void rej_gamma1m1::thread_sum_fu_334_p2() {
    sum_fu_334_p2 = (!a_offset1.read().is_01() || !ctr_reg_136.read().is_01())? sc_lv<9>(): (sc_biguint<9>(a_offset1.read()) + sc_biguint<9>(ctr_reg_136.read()));
}

void rej_gamma1m1::thread_t_1_fu_303_p3() {
    t_1_fu_303_p3 = esl_concat<8,12>(buf_r_q1.read(), tmp_21_fu_297_p2.read());
}

void rej_gamma1m1::thread_t_2_cast_fu_311_p1() {
    t_2_cast_fu_311_p1 = esl_zext<24,20>(t_1_fu_303_p3.read());
}

void rej_gamma1m1::thread_t_2_fu_278_p1() {
    t_2_fu_278_p1 = esl_zext<8,4>(t_reg_424.read());
}

void rej_gamma1m1::thread_tmp_12_fu_235_p2() {
    tmp_12_fu_235_p2 = (!pos_reg_148.read().is_01() || !ap_const_lv32_2.is_01())? sc_lv<32>(): (sc_biguint<32>(pos_reg_148.read()) + sc_biguint<32>(ap_const_lv32_2));
}

void rej_gamma1m1::thread_tmp_13_fu_241_p1() {
    tmp_13_fu_241_p1 = esl_zext<64,32>(tmp_12_fu_235_p2.read());
}

void rej_gamma1m1::thread_tmp_14_fu_256_p2() {
    tmp_14_fu_256_p2 = (!pos_reg_148.read().is_01() || !ap_const_lv32_3.is_01())? sc_lv<32>(): (sc_biguint<32>(pos_reg_148.read()) + sc_biguint<32>(ap_const_lv32_3));
}

void rej_gamma1m1::thread_tmp_15_fu_262_p1() {
    tmp_15_fu_262_p1 = esl_zext<64,32>(tmp_14_fu_256_p2.read());
}

void rej_gamma1m1::thread_tmp_16_fu_281_p3() {
    tmp_16_fu_281_p3 = esl_concat<8,4>(buf_r_q0.read(), ap_const_lv4_0);
}

void rej_gamma1m1::thread_tmp_17_fu_267_p2() {
    tmp_17_fu_267_p2 = (!pos_reg_148.read().is_01() || !ap_const_lv32_4.is_01())? sc_lv<32>(): (sc_biguint<32>(pos_reg_148.read()) + sc_biguint<32>(ap_const_lv32_4));
}

void rej_gamma1m1::thread_tmp_18_fu_273_p1() {
    tmp_18_fu_273_p1 = esl_zext<64,32>(tmp_17_fu_267_p2.read());
}

void rej_gamma1m1::thread_tmp_19_fu_322_p2() {
    tmp_19_fu_322_p2 = (!t_1_fu_303_p3.read().is_01() || !ap_const_lv20_FFBFF.is_01())? sc_lv<1>(): (sc_biguint<20>(t_1_fu_303_p3.read()) < sc_biguint<20>(ap_const_lv20_FFBFF));
}

void rej_gamma1m1::thread_tmp_20_fu_289_p3() {
    tmp_20_fu_289_p3 = esl_concat<4,8>(ap_const_lv4_0, t_2_fu_278_p1.read());
}

void rej_gamma1m1::thread_tmp_21_fu_297_p2() {
    tmp_21_fu_297_p2 = (tmp_20_fu_289_p3.read() | tmp_16_fu_281_p3.read());
}

void rej_gamma1m1::thread_tmp_23_fu_353_p2() {
    tmp_23_fu_353_p2 = (!ctr_1_reg_160.read().is_01() || !tmp_45_reg_409.read().is_01())? sc_lv<1>(): (sc_biguint<9>(ctr_1_reg_160.read()) < sc_biguint<9>(tmp_45_reg_409.read()));
}

void rej_gamma1m1::thread_tmp_25_fu_388_p2() {
    tmp_25_fu_388_p2 = (!pos_1_reg_444.read().is_01() || !tmp_cast_reg_404.read().is_01())? sc_lv<1>(): (sc_biguint<32>(pos_1_reg_444.read()) > sc_biguint<32>(tmp_cast_reg_404.read()));
}

void rej_gamma1m1::thread_tmp_39_fu_200_p3() {
    tmp_39_fu_200_p3 = esl_concat<3,8>(a_offset.read(), ap_const_lv8_0);
}

void rej_gamma1m1::thread_tmp_40_cast_fu_208_p1() {
    tmp_40_cast_fu_208_p1 = esl_zext<12,11>(tmp_39_fu_200_p3.read());
}

void rej_gamma1m1::thread_tmp_40_fu_343_p2() {
    tmp_40_fu_343_p2 = (!tmp_40_cast_reg_398.read().is_01() || !sum_cast_cast_fu_339_p1.read().is_01())? sc_lv<12>(): (sc_biguint<12>(tmp_40_cast_reg_398.read()) + sc_biguint<12>(sum_cast_cast_fu_339_p1.read()));
}

void rej_gamma1m1::thread_tmp_41_fu_372_p2() {
    tmp_41_fu_372_p2 = (!tmp_40_cast_reg_398.read().is_01() || !sum3_cast_cast_fu_368_p1.read().is_01())? sc_lv<12>(): (sc_biguint<12>(tmp_40_cast_reg_398.read()) + sc_biguint<12>(sum3_cast_cast_fu_368_p1.read()));
}

void rej_gamma1m1::thread_tmp_42_cast_fu_348_p1() {
    tmp_42_cast_fu_348_p1 = esl_zext<64,12>(tmp_40_fu_343_p2.read());
}

void rej_gamma1m1::thread_tmp_43_cast_fu_384_p1() {
    tmp_43_cast_fu_384_p1 = esl_zext<64,12>(tmp_41_reg_464.read());
}

void rej_gamma1m1::thread_tmp_44_fu_212_p1() {
    tmp_44_fu_212_p1 = buflen.read().range(10-1, 0);
}

void rej_gamma1m1::thread_tmp_45_fu_226_p1() {
    tmp_45_fu_226_p1 = len.read().range(9-1, 0);
}

void rej_gamma1m1::thread_tmp_cast_fu_222_p1() {
    tmp_cast_fu_222_p1 = esl_zext<32,10>(tmp_fu_216_p2.read());
}

void rej_gamma1m1::thread_tmp_fu_216_p2() {
    tmp_fu_216_p2 = (!ap_const_lv10_3FB.is_01() || !tmp_44_fu_212_p1.read().is_01())? sc_lv<10>(): (sc_bigint<10>(ap_const_lv10_3FB) + sc_biguint<10>(tmp_44_fu_212_p1.read()));
}

void rej_gamma1m1::thread_tmp_s_fu_230_p2() {
    tmp_s_fu_230_p2 = (!ctr_reg_136.read().is_01() || !tmp_45_reg_409.read().is_01())? sc_lv<1>(): (sc_biguint<9>(ctr_reg_136.read()) < sc_biguint<9>(tmp_45_reg_409.read()));
}

void rej_gamma1m1::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(tmp_s_fu_230_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && (esl_seteq<1,1,1>(tmp_25_fu_388_p2.read(), ap_const_lv1_1) || 
  esl_seteq<1,1,1>(tmp_s_reg_415.read(), ap_const_lv1_0)))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        default : 
            ap_NS_fsm =  (sc_lv<6>) ("XXXXXX");
            break;
    }
}

}

