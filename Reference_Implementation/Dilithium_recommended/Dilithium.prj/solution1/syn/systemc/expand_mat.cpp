// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "expand_mat.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic expand_mat::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic expand_mat::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<12> expand_mat::ap_ST_fsm_state1 = "1";
const sc_lv<12> expand_mat::ap_ST_fsm_state2 = "10";
const sc_lv<12> expand_mat::ap_ST_fsm_state3 = "100";
const sc_lv<12> expand_mat::ap_ST_fsm_state4 = "1000";
const sc_lv<12> expand_mat::ap_ST_fsm_state5 = "10000";
const sc_lv<12> expand_mat::ap_ST_fsm_state6 = "100000";
const sc_lv<12> expand_mat::ap_ST_fsm_state7 = "1000000";
const sc_lv<12> expand_mat::ap_ST_fsm_state8 = "10000000";
const sc_lv<12> expand_mat::ap_ST_fsm_state9 = "100000000";
const sc_lv<12> expand_mat::ap_ST_fsm_state10 = "1000000000";
const sc_lv<12> expand_mat::ap_ST_fsm_state11 = "10000000000";
const sc_lv<12> expand_mat::ap_ST_fsm_state12 = "100000000000";
const sc_lv<32> expand_mat::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> expand_mat::ap_const_lv32_1 = "1";
const sc_lv<1> expand_mat::ap_const_lv1_0 = "0";
const sc_lv<1> expand_mat::ap_const_lv1_1 = "1";
const sc_lv<32> expand_mat::ap_const_lv32_3 = "11";
const sc_lv<32> expand_mat::ap_const_lv32_4 = "100";
const sc_lv<32> expand_mat::ap_const_lv32_8 = "1000";
const sc_lv<32> expand_mat::ap_const_lv32_9 = "1001";
const sc_lv<32> expand_mat::ap_const_lv32_A = "1010";
const sc_lv<6> expand_mat::ap_const_lv6_0 = "000000";
const sc_lv<32> expand_mat::ap_const_lv32_2 = "10";
const sc_lv<3> expand_mat::ap_const_lv3_0 = "000";
const sc_lv<32> expand_mat::ap_const_lv32_B = "1011";
const sc_lv<9> expand_mat::ap_const_lv9_0 = "000000000";
const sc_lv<32> expand_mat::ap_const_lv32_7 = "111";
const sc_lv<32> expand_mat::ap_const_lv32_5 = "101";
const sc_lv<32> expand_mat::ap_const_lv32_6 = "110";
const sc_lv<64> expand_mat::ap_const_lv64_20 = "100000";
const sc_lv<6> expand_mat::ap_const_lv6_20 = "100000";
const sc_lv<6> expand_mat::ap_const_lv6_1 = "1";
const sc_lv<3> expand_mat::ap_const_lv3_5 = "101";
const sc_lv<3> expand_mat::ap_const_lv3_1 = "1";
const sc_lv<2> expand_mat::ap_const_lv2_0 = "00";
const sc_lv<3> expand_mat::ap_const_lv3_4 = "100";
const sc_lv<8> expand_mat::ap_const_lv8_0 = "00000000";
const sc_lv<23> expand_mat::ap_const_lv23_7FE001 = "11111111110000000000001";
const sc_lv<9> expand_mat::ap_const_lv9_1 = "1";
const bool expand_mat::ap_const_boolean_1 = true;

expand_mat::expand_mat(sc_module_name name) : sc_module(name), mVcdFile(0) {
    s_U = new expand_mat_s("s_U");
    s_U->clk(ap_clk);
    s_U->reset(ap_rst);
    s_U->address0(s_address0);
    s_U->ce0(s_ce0);
    s_U->we0(s_we0);
    s_U->d0(s_d0);
    s_U->q0(s_q0);
    s_U->address1(grp_keccak_squeezeblocks_3_fu_226_s_address1);
    s_U->ce1(s_ce1);
    s_U->we1(s_we1);
    s_U->d1(grp_keccak_squeezeblocks_3_fu_226_s_d1);
    s_U->q1(s_q1);
    inbuf_U = new expand_mat_inbuf("inbuf_U");
    inbuf_U->clk(ap_clk);
    inbuf_U->reset(ap_rst);
    inbuf_U->address0(inbuf_address0);
    inbuf_U->ce0(inbuf_ce0);
    inbuf_U->we0(inbuf_we0);
    inbuf_U->d0(inbuf_d0);
    inbuf_U->q0(inbuf_q0);
    output_assign_U = new expand_mat_outputcud("output_assign_U");
    output_assign_U->clk(ap_clk);
    output_assign_U->reset(ap_rst);
    output_assign_U->address0(output_assign_address0);
    output_assign_U->ce0(output_assign_ce0);
    output_assign_U->we0(output_assign_we0);
    output_assign_U->d0(grp_keccak_squeezeblocks_3_fu_226_h_d0);
    output_assign_U->q0(output_assign_q0);
    output_assign_U->address1(output_assign_address1);
    output_assign_U->ce1(output_assign_ce1);
    output_assign_U->q1(output_assign_q1);
    grp_keccak_squeezeblocks_3_fu_226 = new keccak_squeezeblocks_3("grp_keccak_squeezeblocks_3_fu_226");
    grp_keccak_squeezeblocks_3_fu_226->ap_clk(ap_clk);
    grp_keccak_squeezeblocks_3_fu_226->ap_rst(ap_rst);
    grp_keccak_squeezeblocks_3_fu_226->ap_start(grp_keccak_squeezeblocks_3_fu_226_ap_start);
    grp_keccak_squeezeblocks_3_fu_226->ap_done(grp_keccak_squeezeblocks_3_fu_226_ap_done);
    grp_keccak_squeezeblocks_3_fu_226->ap_idle(grp_keccak_squeezeblocks_3_fu_226_ap_idle);
    grp_keccak_squeezeblocks_3_fu_226->ap_ready(grp_keccak_squeezeblocks_3_fu_226_ap_ready);
    grp_keccak_squeezeblocks_3_fu_226->h_address0(grp_keccak_squeezeblocks_3_fu_226_h_address0);
    grp_keccak_squeezeblocks_3_fu_226->h_ce0(grp_keccak_squeezeblocks_3_fu_226_h_ce0);
    grp_keccak_squeezeblocks_3_fu_226->h_we0(grp_keccak_squeezeblocks_3_fu_226_h_we0);
    grp_keccak_squeezeblocks_3_fu_226->h_d0(grp_keccak_squeezeblocks_3_fu_226_h_d0);
    grp_keccak_squeezeblocks_3_fu_226->s_address0(grp_keccak_squeezeblocks_3_fu_226_s_address0);
    grp_keccak_squeezeblocks_3_fu_226->s_ce0(grp_keccak_squeezeblocks_3_fu_226_s_ce0);
    grp_keccak_squeezeblocks_3_fu_226->s_we0(grp_keccak_squeezeblocks_3_fu_226_s_we0);
    grp_keccak_squeezeblocks_3_fu_226->s_d0(grp_keccak_squeezeblocks_3_fu_226_s_d0);
    grp_keccak_squeezeblocks_3_fu_226->s_q0(s_q0);
    grp_keccak_squeezeblocks_3_fu_226->s_address1(grp_keccak_squeezeblocks_3_fu_226_s_address1);
    grp_keccak_squeezeblocks_3_fu_226->s_ce1(grp_keccak_squeezeblocks_3_fu_226_s_ce1);
    grp_keccak_squeezeblocks_3_fu_226->s_we1(grp_keccak_squeezeblocks_3_fu_226_s_we1);
    grp_keccak_squeezeblocks_3_fu_226->s_d1(grp_keccak_squeezeblocks_3_fu_226_s_d1);
    grp_keccak_squeezeblocks_3_fu_226->s_q1(s_q1);
    grp_keccak_absorb_3_fu_234 = new keccak_absorb_3("grp_keccak_absorb_3_fu_234");
    grp_keccak_absorb_3_fu_234->ap_clk(ap_clk);
    grp_keccak_absorb_3_fu_234->ap_rst(ap_rst);
    grp_keccak_absorb_3_fu_234->ap_start(grp_keccak_absorb_3_fu_234_ap_start);
    grp_keccak_absorb_3_fu_234->ap_done(grp_keccak_absorb_3_fu_234_ap_done);
    grp_keccak_absorb_3_fu_234->ap_idle(grp_keccak_absorb_3_fu_234_ap_idle);
    grp_keccak_absorb_3_fu_234->ap_ready(grp_keccak_absorb_3_fu_234_ap_ready);
    grp_keccak_absorb_3_fu_234->s_address0(grp_keccak_absorb_3_fu_234_s_address0);
    grp_keccak_absorb_3_fu_234->s_ce0(grp_keccak_absorb_3_fu_234_s_ce0);
    grp_keccak_absorb_3_fu_234->s_we0(grp_keccak_absorb_3_fu_234_s_we0);
    grp_keccak_absorb_3_fu_234->s_d0(grp_keccak_absorb_3_fu_234_s_d0);
    grp_keccak_absorb_3_fu_234->s_q0(s_q0);
    grp_keccak_absorb_3_fu_234->m_address0(grp_keccak_absorb_3_fu_234_m_address0);
    grp_keccak_absorb_3_fu_234->m_ce0(grp_keccak_absorb_3_fu_234_m_ce0);
    grp_keccak_absorb_3_fu_234->m_q0(inbuf_q0);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( exitcond1_fu_257_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_phi_mux_ctr_be_phi_fu_218_p4);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ctr_reg_202 );
    sensitive << ( ctr_6_fu_389_p2 );
    sensitive << ( tmp_171_fu_383_p2 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( exitcond1_fu_257_p2 );

    SC_METHOD(thread_ctr_6_fu_389_p2);
    sensitive << ( ctr_reg_202 );

    SC_METHOD(thread_exitcond1_fu_257_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( i_1_reg_167 );

    SC_METHOD(thread_exitcond_fu_281_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( j_reg_179 );

    SC_METHOD(thread_grp_keccak_absorb_3_fu_234_ap_start);
    sensitive << ( grp_keccak_absorb_3_fu_234_ap_start_reg );

    SC_METHOD(thread_grp_keccak_squeezeblocks_3_fu_226_ap_start);
    sensitive << ( grp_keccak_squeezeblocks_3_fu_226_ap_start_reg );

    SC_METHOD(thread_i_63_fu_246_p2);
    sensitive << ( i_reg_156 );

    SC_METHOD(thread_i_64_fu_263_p2);
    sensitive << ( i_1_reg_167 );

    SC_METHOD(thread_inbuf_address0);
    sensitive << ( tmp_s_reg_418 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( grp_keccak_absorb_3_fu_234_m_address0 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_inbuf_ce0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( grp_keccak_absorb_3_fu_234_m_ce0 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_inbuf_d0);
    sensitive << ( rho_q0 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_256_cast_fu_307_p1 );

    SC_METHOD(thread_inbuf_we0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( exitcond_fu_281_p2 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_j_8_fu_287_p2);
    sensitive << ( j_reg_179 );

    SC_METHOD(thread_mat_vec_coeffs_address0);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( tmp_179_cast_fu_405_p1 );

    SC_METHOD(thread_mat_vec_coeffs_ce0);
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_mat_vec_coeffs_d0);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( tmp_34_fu_373_p4 );

    SC_METHOD(thread_mat_vec_coeffs_we0);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( tmp_171_fu_383_p2 );

    SC_METHOD(thread_output_assign_address0);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( grp_keccak_squeezeblocks_3_fu_226_h_address0 );
    sensitive << ( tmp_168_fu_336_p1 );
    sensitive << ( tmp_169_fu_353_p1 );

    SC_METHOD(thread_output_assign_address1);
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( tmp_170_fu_364_p1 );

    SC_METHOD(thread_output_assign_ce0);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( grp_keccak_squeezeblocks_3_fu_226_h_ce0 );

    SC_METHOD(thread_output_assign_ce1);
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_output_assign_we0);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( grp_keccak_squeezeblocks_3_fu_226_h_we0 );

    SC_METHOD(thread_pos_2_fu_341_p2);
    sensitive << ( pos_reg_190 );

    SC_METHOD(thread_pos_3_fu_347_p2);
    sensitive << ( pos_reg_190 );

    SC_METHOD(thread_pos_4_fu_358_p2);
    sensitive << ( pos_reg_190 );

    SC_METHOD(thread_rho_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_s_fu_252_p1 );

    SC_METHOD(thread_rho_ce0);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_s_address0);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( grp_keccak_squeezeblocks_3_fu_226_s_address0 );
    sensitive << ( grp_keccak_absorb_3_fu_234_s_address0 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_s_ce0);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( grp_keccak_squeezeblocks_3_fu_226_s_ce0 );
    sensitive << ( grp_keccak_absorb_3_fu_234_s_ce0 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_s_ce1);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( grp_keccak_squeezeblocks_3_fu_226_s_ce1 );

    SC_METHOD(thread_s_d0);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( grp_keccak_squeezeblocks_3_fu_226_s_d0 );
    sensitive << ( grp_keccak_absorb_3_fu_234_s_d0 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_s_we0);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( grp_keccak_squeezeblocks_3_fu_226_s_we0 );
    sensitive << ( grp_keccak_absorb_3_fu_234_s_we0 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_s_we1);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( grp_keccak_squeezeblocks_3_fu_226_s_we1 );

    SC_METHOD(thread_tmp_165_fu_297_p4);
    sensitive << ( i_1_reg_167 );
    sensitive << ( tmp_174_fu_293_p1 );

    SC_METHOD(thread_tmp_166_cast_fu_312_p1);
    sensitive << ( j_reg_179 );

    SC_METHOD(thread_tmp_168_fu_336_p1);
    sensitive << ( pos_reg_190 );

    SC_METHOD(thread_tmp_169_fu_353_p1);
    sensitive << ( pos_2_fu_341_p2 );

    SC_METHOD(thread_tmp_170_fu_364_p1);
    sensitive << ( pos_3_fu_347_p2 );

    SC_METHOD(thread_tmp_171_fu_383_p2);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( tmp_34_fu_373_p4 );

    SC_METHOD(thread_tmp_172_cast_fu_396_p1);
    sensitive << ( ctr_reg_202 );

    SC_METHOD(thread_tmp_173_fu_269_p3);
    sensitive << ( i_1_reg_167 );

    SC_METHOD(thread_tmp_174_fu_293_p1);
    sensitive << ( j_reg_179 );

    SC_METHOD(thread_tmp_175_cast_fu_277_p1);
    sensitive << ( tmp_173_fu_269_p3 );

    SC_METHOD(thread_tmp_175_fu_316_p2);
    sensitive << ( tmp_175_cast_reg_441 );
    sensitive << ( tmp_166_cast_fu_312_p1 );

    SC_METHOD(thread_tmp_176_fu_328_p3);
    sensitive << ( ctr_reg_202 );

    SC_METHOD(thread_tmp_177_fu_369_p1);
    sensitive << ( output_assign_q1 );

    SC_METHOD(thread_tmp_178_cast_fu_321_p3);
    sensitive << ( tmp_175_reg_454 );

    SC_METHOD(thread_tmp_178_fu_400_p2);
    sensitive << ( tmp_178_cast_reg_459 );
    sensitive << ( tmp_172_cast_fu_396_p1 );

    SC_METHOD(thread_tmp_179_cast_fu_405_p1);
    sensitive << ( tmp_178_fu_400_p2 );

    SC_METHOD(thread_tmp_256_cast_fu_307_p1);
    sensitive << ( tmp_165_fu_297_p4 );

    SC_METHOD(thread_tmp_34_fu_373_p4);
    sensitive << ( output_assign_q0 );
    sensitive << ( output_assign_load_reg_472 );
    sensitive << ( tmp_177_fu_369_p1 );

    SC_METHOD(thread_tmp_fu_240_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_reg_156 );

    SC_METHOD(thread_tmp_s_fu_252_p1);
    sensitive << ( i_reg_156 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_fu_240_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( exitcond1_fu_257_p2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( exitcond_fu_281_p2 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( grp_keccak_squeezeblocks_3_fu_226_ap_done );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( tmp_176_fu_328_p3 );
    sensitive << ( grp_keccak_absorb_3_fu_234_ap_done );
    sensitive << ( ap_CS_fsm_state7 );

    ap_CS_fsm = "000000000001";
    grp_keccak_squeezeblocks_3_fu_226_ap_start_reg = SC_LOGIC_0;
    grp_keccak_absorb_3_fu_234_ap_start_reg = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "expand_mat_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, mat_vec_coeffs_address0, "(port)mat_vec_coeffs_address0");
    sc_trace(mVcdFile, mat_vec_coeffs_ce0, "(port)mat_vec_coeffs_ce0");
    sc_trace(mVcdFile, mat_vec_coeffs_we0, "(port)mat_vec_coeffs_we0");
    sc_trace(mVcdFile, mat_vec_coeffs_d0, "(port)mat_vec_coeffs_d0");
    sc_trace(mVcdFile, rho_address0, "(port)rho_address0");
    sc_trace(mVcdFile, rho_ce0, "(port)rho_ce0");
    sc_trace(mVcdFile, rho_q0, "(port)rho_q0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, i_63_fu_246_p2, "i_63_fu_246_p2");
    sc_trace(mVcdFile, i_63_reg_413, "i_63_reg_413");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, tmp_s_fu_252_p1, "tmp_s_fu_252_p1");
    sc_trace(mVcdFile, tmp_s_reg_418, "tmp_s_reg_418");
    sc_trace(mVcdFile, tmp_fu_240_p2, "tmp_fu_240_p2");
    sc_trace(mVcdFile, i_64_fu_263_p2, "i_64_fu_263_p2");
    sc_trace(mVcdFile, i_64_reg_436, "i_64_reg_436");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, tmp_175_cast_fu_277_p1, "tmp_175_cast_fu_277_p1");
    sc_trace(mVcdFile, tmp_175_cast_reg_441, "tmp_175_cast_reg_441");
    sc_trace(mVcdFile, exitcond1_fu_257_p2, "exitcond1_fu_257_p2");
    sc_trace(mVcdFile, j_8_fu_287_p2, "j_8_fu_287_p2");
    sc_trace(mVcdFile, j_8_reg_449, "j_8_reg_449");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, tmp_175_fu_316_p2, "tmp_175_fu_316_p2");
    sc_trace(mVcdFile, tmp_175_reg_454, "tmp_175_reg_454");
    sc_trace(mVcdFile, exitcond_fu_281_p2, "exitcond_fu_281_p2");
    sc_trace(mVcdFile, tmp_178_cast_fu_321_p3, "tmp_178_cast_fu_321_p3");
    sc_trace(mVcdFile, tmp_178_cast_reg_459, "tmp_178_cast_reg_459");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, grp_keccak_squeezeblocks_3_fu_226_ap_idle, "grp_keccak_squeezeblocks_3_fu_226_ap_idle");
    sc_trace(mVcdFile, grp_keccak_squeezeblocks_3_fu_226_ap_ready, "grp_keccak_squeezeblocks_3_fu_226_ap_ready");
    sc_trace(mVcdFile, grp_keccak_squeezeblocks_3_fu_226_ap_done, "grp_keccak_squeezeblocks_3_fu_226_ap_done");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, tmp_176_fu_328_p3, "tmp_176_fu_328_p3");
    sc_trace(mVcdFile, output_assign_q0, "output_assign_q0");
    sc_trace(mVcdFile, output_assign_load_reg_472, "output_assign_load_reg_472");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, pos_4_fu_358_p2, "pos_4_fu_358_p2");
    sc_trace(mVcdFile, pos_4_reg_482, "pos_4_reg_482");
    sc_trace(mVcdFile, s_address0, "s_address0");
    sc_trace(mVcdFile, s_ce0, "s_ce0");
    sc_trace(mVcdFile, s_we0, "s_we0");
    sc_trace(mVcdFile, s_d0, "s_d0");
    sc_trace(mVcdFile, s_q0, "s_q0");
    sc_trace(mVcdFile, s_ce1, "s_ce1");
    sc_trace(mVcdFile, s_we1, "s_we1");
    sc_trace(mVcdFile, s_q1, "s_q1");
    sc_trace(mVcdFile, inbuf_address0, "inbuf_address0");
    sc_trace(mVcdFile, inbuf_ce0, "inbuf_ce0");
    sc_trace(mVcdFile, inbuf_we0, "inbuf_we0");
    sc_trace(mVcdFile, inbuf_d0, "inbuf_d0");
    sc_trace(mVcdFile, inbuf_q0, "inbuf_q0");
    sc_trace(mVcdFile, output_assign_address0, "output_assign_address0");
    sc_trace(mVcdFile, output_assign_ce0, "output_assign_ce0");
    sc_trace(mVcdFile, output_assign_we0, "output_assign_we0");
    sc_trace(mVcdFile, output_assign_address1, "output_assign_address1");
    sc_trace(mVcdFile, output_assign_ce1, "output_assign_ce1");
    sc_trace(mVcdFile, output_assign_q1, "output_assign_q1");
    sc_trace(mVcdFile, grp_keccak_squeezeblocks_3_fu_226_ap_start, "grp_keccak_squeezeblocks_3_fu_226_ap_start");
    sc_trace(mVcdFile, grp_keccak_squeezeblocks_3_fu_226_h_address0, "grp_keccak_squeezeblocks_3_fu_226_h_address0");
    sc_trace(mVcdFile, grp_keccak_squeezeblocks_3_fu_226_h_ce0, "grp_keccak_squeezeblocks_3_fu_226_h_ce0");
    sc_trace(mVcdFile, grp_keccak_squeezeblocks_3_fu_226_h_we0, "grp_keccak_squeezeblocks_3_fu_226_h_we0");
    sc_trace(mVcdFile, grp_keccak_squeezeblocks_3_fu_226_h_d0, "grp_keccak_squeezeblocks_3_fu_226_h_d0");
    sc_trace(mVcdFile, grp_keccak_squeezeblocks_3_fu_226_s_address0, "grp_keccak_squeezeblocks_3_fu_226_s_address0");
    sc_trace(mVcdFile, grp_keccak_squeezeblocks_3_fu_226_s_ce0, "grp_keccak_squeezeblocks_3_fu_226_s_ce0");
    sc_trace(mVcdFile, grp_keccak_squeezeblocks_3_fu_226_s_we0, "grp_keccak_squeezeblocks_3_fu_226_s_we0");
    sc_trace(mVcdFile, grp_keccak_squeezeblocks_3_fu_226_s_d0, "grp_keccak_squeezeblocks_3_fu_226_s_d0");
    sc_trace(mVcdFile, grp_keccak_squeezeblocks_3_fu_226_s_address1, "grp_keccak_squeezeblocks_3_fu_226_s_address1");
    sc_trace(mVcdFile, grp_keccak_squeezeblocks_3_fu_226_s_ce1, "grp_keccak_squeezeblocks_3_fu_226_s_ce1");
    sc_trace(mVcdFile, grp_keccak_squeezeblocks_3_fu_226_s_we1, "grp_keccak_squeezeblocks_3_fu_226_s_we1");
    sc_trace(mVcdFile, grp_keccak_squeezeblocks_3_fu_226_s_d1, "grp_keccak_squeezeblocks_3_fu_226_s_d1");
    sc_trace(mVcdFile, grp_keccak_absorb_3_fu_234_ap_start, "grp_keccak_absorb_3_fu_234_ap_start");
    sc_trace(mVcdFile, grp_keccak_absorb_3_fu_234_ap_done, "grp_keccak_absorb_3_fu_234_ap_done");
    sc_trace(mVcdFile, grp_keccak_absorb_3_fu_234_ap_idle, "grp_keccak_absorb_3_fu_234_ap_idle");
    sc_trace(mVcdFile, grp_keccak_absorb_3_fu_234_ap_ready, "grp_keccak_absorb_3_fu_234_ap_ready");
    sc_trace(mVcdFile, grp_keccak_absorb_3_fu_234_s_address0, "grp_keccak_absorb_3_fu_234_s_address0");
    sc_trace(mVcdFile, grp_keccak_absorb_3_fu_234_s_ce0, "grp_keccak_absorb_3_fu_234_s_ce0");
    sc_trace(mVcdFile, grp_keccak_absorb_3_fu_234_s_we0, "grp_keccak_absorb_3_fu_234_s_we0");
    sc_trace(mVcdFile, grp_keccak_absorb_3_fu_234_s_d0, "grp_keccak_absorb_3_fu_234_s_d0");
    sc_trace(mVcdFile, grp_keccak_absorb_3_fu_234_m_address0, "grp_keccak_absorb_3_fu_234_m_address0");
    sc_trace(mVcdFile, grp_keccak_absorb_3_fu_234_m_ce0, "grp_keccak_absorb_3_fu_234_m_ce0");
    sc_trace(mVcdFile, i_reg_156, "i_reg_156");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, i_1_reg_167, "i_1_reg_167");
    sc_trace(mVcdFile, j_reg_179, "j_reg_179");
    sc_trace(mVcdFile, pos_reg_190, "pos_reg_190");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, ctr_reg_202, "ctr_reg_202");
    sc_trace(mVcdFile, ap_phi_mux_ctr_be_phi_fu_218_p4, "ap_phi_mux_ctr_be_phi_fu_218_p4");
    sc_trace(mVcdFile, ctr_6_fu_389_p2, "ctr_6_fu_389_p2");
    sc_trace(mVcdFile, tmp_171_fu_383_p2, "tmp_171_fu_383_p2");
    sc_trace(mVcdFile, grp_keccak_squeezeblocks_3_fu_226_ap_start_reg, "grp_keccak_squeezeblocks_3_fu_226_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, grp_keccak_absorb_3_fu_234_ap_start_reg, "grp_keccak_absorb_3_fu_234_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, tmp_168_fu_336_p1, "tmp_168_fu_336_p1");
    sc_trace(mVcdFile, tmp_169_fu_353_p1, "tmp_169_fu_353_p1");
    sc_trace(mVcdFile, tmp_170_fu_364_p1, "tmp_170_fu_364_p1");
    sc_trace(mVcdFile, tmp_179_cast_fu_405_p1, "tmp_179_cast_fu_405_p1");
    sc_trace(mVcdFile, tmp_256_cast_fu_307_p1, "tmp_256_cast_fu_307_p1");
    sc_trace(mVcdFile, tmp_34_fu_373_p4, "tmp_34_fu_373_p4");
    sc_trace(mVcdFile, tmp_173_fu_269_p3, "tmp_173_fu_269_p3");
    sc_trace(mVcdFile, tmp_174_fu_293_p1, "tmp_174_fu_293_p1");
    sc_trace(mVcdFile, tmp_165_fu_297_p4, "tmp_165_fu_297_p4");
    sc_trace(mVcdFile, tmp_166_cast_fu_312_p1, "tmp_166_cast_fu_312_p1");
    sc_trace(mVcdFile, pos_2_fu_341_p2, "pos_2_fu_341_p2");
    sc_trace(mVcdFile, pos_3_fu_347_p2, "pos_3_fu_347_p2");
    sc_trace(mVcdFile, tmp_177_fu_369_p1, "tmp_177_fu_369_p1");
    sc_trace(mVcdFile, tmp_172_cast_fu_396_p1, "tmp_172_cast_fu_396_p1");
    sc_trace(mVcdFile, tmp_178_fu_400_p2, "tmp_178_fu_400_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

expand_mat::~expand_mat() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete s_U;
    delete inbuf_U;
    delete output_assign_U;
    delete grp_keccak_squeezeblocks_3_fu_226;
    delete grp_keccak_absorb_3_fu_234;
}

void expand_mat::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        ctr_reg_202 = ap_phi_mux_ctr_be_phi_fu_218_p4.read();
    } else if ((esl_seteq<1,1,1>(grp_keccak_squeezeblocks_3_fu_226_ap_done.read(), ap_const_logic_1) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
        ctr_reg_202 = ap_const_lv9_0;
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_keccak_absorb_3_fu_234_ap_start_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
            grp_keccak_absorb_3_fu_234_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_keccak_absorb_3_fu_234_ap_ready.read())) {
            grp_keccak_absorb_3_fu_234_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_keccak_squeezeblocks_3_fu_226_ap_start_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
            grp_keccak_squeezeblocks_3_fu_226_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_keccak_squeezeblocks_3_fu_226_ap_ready.read())) {
            grp_keccak_squeezeblocks_3_fu_226_ap_start_reg = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(exitcond_fu_281_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()))) {
        i_1_reg_167 = i_64_reg_436.read();
    } else if ((esl_seteq<1,1,1>(tmp_fu_240_p2.read(), ap_const_lv1_1) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        i_1_reg_167 = ap_const_lv3_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        i_reg_156 = i_63_reg_413.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_reg_156 = ap_const_lv6_0;
    }
    if ((esl_seteq<1,1,1>(tmp_176_fu_328_p3.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()))) {
        j_reg_179 = j_8_reg_449.read();
    } else if ((esl_seteq<1,1,1>(exitcond1_fu_257_p2.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        j_reg_179 = ap_const_lv3_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        pos_reg_190 = pos_4_reg_482.read();
    } else if ((esl_seteq<1,1,1>(grp_keccak_squeezeblocks_3_fu_226_ap_done.read(), ap_const_logic_1) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
        pos_reg_190 = ap_const_lv32_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        i_63_reg_413 = i_63_fu_246_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        i_64_reg_436 = i_64_fu_263_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        j_8_reg_449 = j_8_fu_287_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        output_assign_load_reg_472 = output_assign_q0.read();
        pos_4_reg_482 = pos_4_fu_358_p2.read();
    }
    if ((esl_seteq<1,1,1>(exitcond1_fu_257_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        tmp_175_cast_reg_441 = tmp_175_cast_fu_277_p1.read();
    }
    if ((esl_seteq<1,1,1>(exitcond_fu_281_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()))) {
        tmp_175_reg_454 = tmp_175_fu_316_p2.read();
    }
    if ((esl_seteq<1,1,1>(grp_keccak_squeezeblocks_3_fu_226_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
        tmp_178_cast_reg_459 = tmp_178_cast_fu_321_p3.read();
    }
    if ((esl_seteq<1,1,1>(tmp_fu_240_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        tmp_s_reg_418 = tmp_s_fu_252_p1.read();
    }
}

void expand_mat::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void expand_mat::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void expand_mat::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void expand_mat::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void expand_mat::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void expand_mat::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void expand_mat::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void expand_mat::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void expand_mat::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void expand_mat::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void expand_mat::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void expand_mat::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void expand_mat::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(exitcond1_fu_257_p2.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void expand_mat::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void expand_mat::thread_ap_phi_mux_ctr_be_phi_fu_218_p4() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        if (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_171_fu_383_p2.read())) {
            ap_phi_mux_ctr_be_phi_fu_218_p4 = ctr_reg_202.read();
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, tmp_171_fu_383_p2.read())) {
            ap_phi_mux_ctr_be_phi_fu_218_p4 = ctr_6_fu_389_p2.read();
        } else {
            ap_phi_mux_ctr_be_phi_fu_218_p4 = "XXXXXXXXX";
        }
    } else {
        ap_phi_mux_ctr_be_phi_fu_218_p4 = "XXXXXXXXX";
    }
}

void expand_mat::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(exitcond1_fu_257_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void expand_mat::thread_ctr_6_fu_389_p2() {
    ctr_6_fu_389_p2 = (!ctr_reg_202.read().is_01() || !ap_const_lv9_1.is_01())? sc_lv<9>(): (sc_biguint<9>(ctr_reg_202.read()) + sc_biguint<9>(ap_const_lv9_1));
}

void expand_mat::thread_exitcond1_fu_257_p2() {
    exitcond1_fu_257_p2 = (!i_1_reg_167.read().is_01() || !ap_const_lv3_5.is_01())? sc_lv<1>(): sc_lv<1>(i_1_reg_167.read() == ap_const_lv3_5);
}

void expand_mat::thread_exitcond_fu_281_p2() {
    exitcond_fu_281_p2 = (!j_reg_179.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(j_reg_179.read() == ap_const_lv3_4);
}

void expand_mat::thread_grp_keccak_absorb_3_fu_234_ap_start() {
    grp_keccak_absorb_3_fu_234_ap_start = grp_keccak_absorb_3_fu_234_ap_start_reg.read();
}

void expand_mat::thread_grp_keccak_squeezeblocks_3_fu_226_ap_start() {
    grp_keccak_squeezeblocks_3_fu_226_ap_start = grp_keccak_squeezeblocks_3_fu_226_ap_start_reg.read();
}

void expand_mat::thread_i_63_fu_246_p2() {
    i_63_fu_246_p2 = (!i_reg_156.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(i_reg_156.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void expand_mat::thread_i_64_fu_263_p2() {
    i_64_fu_263_p2 = (!i_1_reg_167.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(i_1_reg_167.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void expand_mat::thread_inbuf_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        inbuf_address0 =  (sc_lv<6>) (ap_const_lv64_20);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        inbuf_address0 =  (sc_lv<6>) (tmp_s_reg_418.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        inbuf_address0 = grp_keccak_absorb_3_fu_234_m_address0.read();
    } else {
        inbuf_address0 =  (sc_lv<6>) ("XXXXXX");
    }
}

void expand_mat::thread_inbuf_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        inbuf_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        inbuf_ce0 = grp_keccak_absorb_3_fu_234_m_ce0.read();
    } else {
        inbuf_ce0 = ap_const_logic_0;
    }
}

void expand_mat::thread_inbuf_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        inbuf_d0 = tmp_256_cast_fu_307_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        inbuf_d0 = rho_q0.read();
    } else {
        inbuf_d0 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void expand_mat::thread_inbuf_we0() {
    if (((esl_seteq<1,1,1>(exitcond_fu_281_p2.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        inbuf_we0 = ap_const_logic_1;
    } else {
        inbuf_we0 = ap_const_logic_0;
    }
}

void expand_mat::thread_j_8_fu_287_p2() {
    j_8_fu_287_p2 = (!j_reg_179.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(j_reg_179.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void expand_mat::thread_mat_vec_coeffs_address0() {
    mat_vec_coeffs_address0 =  (sc_lv<13>) (tmp_179_cast_fu_405_p1.read());
}

void expand_mat::thread_mat_vec_coeffs_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        mat_vec_coeffs_ce0 = ap_const_logic_1;
    } else {
        mat_vec_coeffs_ce0 = ap_const_logic_0;
    }
}

void expand_mat::thread_mat_vec_coeffs_d0() {
    mat_vec_coeffs_d0 = tmp_34_fu_373_p4.read();
}

void expand_mat::thread_mat_vec_coeffs_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_171_fu_383_p2.read()))) {
        mat_vec_coeffs_we0 = ap_const_logic_1;
    } else {
        mat_vec_coeffs_we0 = ap_const_logic_0;
    }
}

void expand_mat::thread_output_assign_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        output_assign_address0 =  (sc_lv<10>) (tmp_169_fu_353_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        output_assign_address0 =  (sc_lv<10>) (tmp_168_fu_336_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        output_assign_address0 = grp_keccak_squeezeblocks_3_fu_226_h_address0.read();
    } else {
        output_assign_address0 =  (sc_lv<10>) ("XXXXXXXXXX");
    }
}

void expand_mat::thread_output_assign_address1() {
    output_assign_address1 =  (sc_lv<10>) (tmp_170_fu_364_p1.read());
}

void expand_mat::thread_output_assign_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()))) {
        output_assign_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        output_assign_ce0 = grp_keccak_squeezeblocks_3_fu_226_h_ce0.read();
    } else {
        output_assign_ce0 = ap_const_logic_0;
    }
}

void expand_mat::thread_output_assign_ce1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        output_assign_ce1 = ap_const_logic_1;
    } else {
        output_assign_ce1 = ap_const_logic_0;
    }
}

void expand_mat::thread_output_assign_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        output_assign_we0 = grp_keccak_squeezeblocks_3_fu_226_h_we0.read();
    } else {
        output_assign_we0 = ap_const_logic_0;
    }
}

void expand_mat::thread_pos_2_fu_341_p2() {
    pos_2_fu_341_p2 = (!ap_const_lv32_1.is_01() || !pos_reg_190.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_1) + sc_biguint<32>(pos_reg_190.read()));
}

void expand_mat::thread_pos_3_fu_347_p2() {
    pos_3_fu_347_p2 = (!ap_const_lv32_2.is_01() || !pos_reg_190.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_2) + sc_biguint<32>(pos_reg_190.read()));
}

void expand_mat::thread_pos_4_fu_358_p2() {
    pos_4_fu_358_p2 = (!ap_const_lv32_3.is_01() || !pos_reg_190.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_3) + sc_biguint<32>(pos_reg_190.read()));
}

void expand_mat::thread_rho_address0() {
    rho_address0 =  (sc_lv<7>) (tmp_s_fu_252_p1.read());
}

void expand_mat::thread_rho_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        rho_ce0 = ap_const_logic_1;
    } else {
        rho_ce0 = ap_const_logic_0;
    }
}

void expand_mat::thread_s_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        s_address0 = grp_keccak_absorb_3_fu_234_s_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        s_address0 = grp_keccak_squeezeblocks_3_fu_226_s_address0.read();
    } else {
        s_address0 =  (sc_lv<5>) ("XXXXX");
    }
}

void expand_mat::thread_s_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        s_ce0 = grp_keccak_absorb_3_fu_234_s_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        s_ce0 = grp_keccak_squeezeblocks_3_fu_226_s_ce0.read();
    } else {
        s_ce0 = ap_const_logic_0;
    }
}

void expand_mat::thread_s_ce1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        s_ce1 = grp_keccak_squeezeblocks_3_fu_226_s_ce1.read();
    } else {
        s_ce1 = ap_const_logic_0;
    }
}

void expand_mat::thread_s_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        s_d0 = grp_keccak_absorb_3_fu_234_s_d0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        s_d0 = grp_keccak_squeezeblocks_3_fu_226_s_d0.read();
    } else {
        s_d0 =  (sc_lv<64>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void expand_mat::thread_s_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        s_we0 = grp_keccak_absorb_3_fu_234_s_we0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        s_we0 = grp_keccak_squeezeblocks_3_fu_226_s_we0.read();
    } else {
        s_we0 = ap_const_logic_0;
    }
}

void expand_mat::thread_s_we1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        s_we1 = grp_keccak_squeezeblocks_3_fu_226_s_we1.read();
    } else {
        s_we1 = ap_const_logic_0;
    }
}

void expand_mat::thread_tmp_165_fu_297_p4() {
    tmp_165_fu_297_p4 = esl_concat<3,3>(esl_concat<2,1>(tmp_174_fu_293_p1.read(), ap_const_lv1_0), i_1_reg_167.read());
}

void expand_mat::thread_tmp_166_cast_fu_312_p1() {
    tmp_166_cast_fu_312_p1 = esl_zext<6,3>(j_reg_179.read());
}

void expand_mat::thread_tmp_168_fu_336_p1() {
    tmp_168_fu_336_p1 = esl_zext<64,32>(pos_reg_190.read());
}

void expand_mat::thread_tmp_169_fu_353_p1() {
    tmp_169_fu_353_p1 = esl_zext<64,32>(pos_2_fu_341_p2.read());
}

void expand_mat::thread_tmp_170_fu_364_p1() {
    tmp_170_fu_364_p1 = esl_zext<64,32>(pos_3_fu_347_p2.read());
}

void expand_mat::thread_tmp_171_fu_383_p2() {
    tmp_171_fu_383_p2 = (!tmp_34_fu_373_p4.read().is_01() || !ap_const_lv23_7FE001.is_01())? sc_lv<1>(): (sc_biguint<23>(tmp_34_fu_373_p4.read()) < sc_biguint<23>(ap_const_lv23_7FE001));
}

void expand_mat::thread_tmp_172_cast_fu_396_p1() {
    tmp_172_cast_fu_396_p1 = esl_zext<14,9>(ctr_reg_202.read());
}

void expand_mat::thread_tmp_173_fu_269_p3() {
    tmp_173_fu_269_p3 = esl_concat<3,2>(i_1_reg_167.read(), ap_const_lv2_0);
}

void expand_mat::thread_tmp_174_fu_293_p1() {
    tmp_174_fu_293_p1 = j_reg_179.read().range(2-1, 0);
}

void expand_mat::thread_tmp_175_cast_fu_277_p1() {
    tmp_175_cast_fu_277_p1 = esl_zext<6,5>(tmp_173_fu_269_p3.read());
}

void expand_mat::thread_tmp_175_fu_316_p2() {
    tmp_175_fu_316_p2 = (!tmp_175_cast_reg_441.read().is_01() || !tmp_166_cast_fu_312_p1.read().is_01())? sc_lv<6>(): (sc_biguint<6>(tmp_175_cast_reg_441.read()) + sc_biguint<6>(tmp_166_cast_fu_312_p1.read()));
}

void expand_mat::thread_tmp_176_fu_328_p3() {
    tmp_176_fu_328_p3 = ctr_reg_202.read().range(8, 8);
}

void expand_mat::thread_tmp_177_fu_369_p1() {
    tmp_177_fu_369_p1 = output_assign_q1.read().range(7-1, 0);
}

void expand_mat::thread_tmp_178_cast_fu_321_p3() {
    tmp_178_cast_fu_321_p3 = esl_concat<6,8>(tmp_175_reg_454.read(), ap_const_lv8_0);
}

void expand_mat::thread_tmp_178_fu_400_p2() {
    tmp_178_fu_400_p2 = (!tmp_178_cast_reg_459.read().is_01() || !tmp_172_cast_fu_396_p1.read().is_01())? sc_lv<14>(): (sc_biguint<14>(tmp_178_cast_reg_459.read()) + sc_biguint<14>(tmp_172_cast_fu_396_p1.read()));
}

void expand_mat::thread_tmp_179_cast_fu_405_p1() {
    tmp_179_cast_fu_405_p1 = esl_zext<64,14>(tmp_178_fu_400_p2.read());
}

void expand_mat::thread_tmp_256_cast_fu_307_p1() {
    tmp_256_cast_fu_307_p1 = esl_zext<8,6>(tmp_165_fu_297_p4.read());
}

void expand_mat::thread_tmp_34_fu_373_p4() {
    tmp_34_fu_373_p4 = esl_concat<15,8>(esl_concat<7,8>(tmp_177_fu_369_p1.read(), output_assign_q0.read()), output_assign_load_reg_472.read());
}

void expand_mat::thread_tmp_fu_240_p2() {
    tmp_fu_240_p2 = (!i_reg_156.read().is_01() || !ap_const_lv6_20.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_156.read() == ap_const_lv6_20);
}

void expand_mat::thread_tmp_s_fu_252_p1() {
    tmp_s_fu_252_p1 = esl_zext<64,6>(i_reg_156.read());
}

void expand_mat::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(tmp_fu_240_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state2;
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(exitcond1_fu_257_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(exitcond_fu_281_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,1,1>(grp_keccak_absorb_3_fu_234_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state8;
            } else {
                ap_NS_fsm = ap_ST_fsm_state7;
            }
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            if ((esl_seteq<1,1,1>(grp_keccak_squeezeblocks_3_fu_226_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
                ap_NS_fsm = ap_ST_fsm_state10;
            } else {
                ap_NS_fsm = ap_ST_fsm_state9;
            }
            break;
        case 512 : 
            if ((esl_seteq<1,1,1>(tmp_176_fu_328_p3.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state11;
            }
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<12>) ("XXXXXXXXXXXX");
            break;
    }
}

}

