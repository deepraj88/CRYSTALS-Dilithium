// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "challenge.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic challenge::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic challenge::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<19> challenge::ap_ST_fsm_state1 = "1";
const sc_lv<19> challenge::ap_ST_fsm_state2 = "10";
const sc_lv<19> challenge::ap_ST_fsm_state3 = "100";
const sc_lv<19> challenge::ap_ST_fsm_state4 = "1000";
const sc_lv<19> challenge::ap_ST_fsm_state5 = "10000";
const sc_lv<19> challenge::ap_ST_fsm_state6 = "100000";
const sc_lv<19> challenge::ap_ST_fsm_state7 = "1000000";
const sc_lv<19> challenge::ap_ST_fsm_state8 = "10000000";
const sc_lv<19> challenge::ap_ST_fsm_state9 = "100000000";
const sc_lv<19> challenge::ap_ST_fsm_state10 = "1000000000";
const sc_lv<19> challenge::ap_ST_fsm_state11 = "10000000000";
const sc_lv<19> challenge::ap_ST_fsm_state12 = "100000000000";
const sc_lv<19> challenge::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<19> challenge::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<19> challenge::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<19> challenge::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<19> challenge::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<19> challenge::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<19> challenge::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<32> challenge::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> challenge::ap_const_lv32_1 = "1";
const sc_lv<1> challenge::ap_const_lv1_0 = "0";
const sc_lv<32> challenge::ap_const_lv32_3 = "11";
const sc_lv<32> challenge::ap_const_lv32_4 = "100";
const sc_lv<32> challenge::ap_const_lv32_9 = "1001";
const sc_lv<32> challenge::ap_const_lv32_A = "1010";
const sc_lv<32> challenge::ap_const_lv32_B = "1011";
const sc_lv<32> challenge::ap_const_lv32_D = "1101";
const sc_lv<32> challenge::ap_const_lv32_F = "1111";
const sc_lv<32> challenge::ap_const_lv32_10 = "10000";
const sc_lv<32> challenge::ap_const_lv32_11 = "10001";
const sc_lv<6> challenge::ap_const_lv6_0 = "000000";
const sc_lv<32> challenge::ap_const_lv32_2 = "10";
const sc_lv<1> challenge::ap_const_lv1_1 = "1";
const sc_lv<3> challenge::ap_const_lv3_0 = "000";
const sc_lv<8> challenge::ap_const_lv8_0 = "00000000";
const sc_lv<32> challenge::ap_const_lv32_5 = "101";
const sc_lv<4> challenge::ap_const_lv4_0 = "0000";
const sc_lv<32> challenge::ap_const_lv32_8 = "1000";
const sc_lv<64> challenge::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<9> challenge::ap_const_lv9_0 = "000000000";
const sc_lv<32> challenge::ap_const_lv32_12 = "10010";
const sc_lv<9> challenge::ap_const_lv9_C4 = "11000100";
const sc_lv<64> challenge::ap_const_lv64_1 = "1";
const sc_lv<32> challenge::ap_const_lv32_C = "1100";
const sc_lv<32> challenge::ap_const_lv32_E = "1110";
const bool challenge::ap_const_boolean_0 = false;
const sc_lv<32> challenge::ap_const_lv32_6 = "110";
const sc_lv<32> challenge::ap_const_lv32_7 = "111";
const sc_lv<23> challenge::ap_const_lv23_0 = "00000000000000000000000";
const sc_lv<6> challenge::ap_const_lv6_30 = "110000";
const sc_lv<6> challenge::ap_const_lv6_1 = "1";
const sc_lv<3> challenge::ap_const_lv3_5 = "101";
const sc_lv<3> challenge::ap_const_lv3_1 = "1";
const sc_lv<7> challenge::ap_const_lv7_0 = "0000000";
const sc_lv<10> challenge::ap_const_lv10_30 = "110000";
const sc_lv<8> challenge::ap_const_lv8_80 = "10000000";
const sc_lv<8> challenge::ap_const_lv8_1 = "1";
const sc_lv<4> challenge::ap_const_lv4_8 = "1000";
const sc_lv<4> challenge::ap_const_lv4_1 = "1";
const sc_lv<9> challenge::ap_const_lv9_100 = "100000000";
const sc_lv<9> challenge::ap_const_lv9_1 = "1";
const sc_lv<32> challenge::ap_const_lv32_87 = "10000111";
const sc_lv<23> challenge::ap_const_lv23_7FE000 = "11111111110000000000000";
const sc_lv<23> challenge::ap_const_lv23_1 = "1";
const bool challenge::ap_const_boolean_1 = true;

challenge::challenge(sc_module_name name) : sc_module(name), mVcdFile(0) {
    inbuf_U = new challenge_inbuf("inbuf_U");
    inbuf_U->clk(ap_clk);
    inbuf_U->reset(ap_rst);
    inbuf_U->address0(inbuf_address0);
    inbuf_U->ce0(inbuf_ce0);
    inbuf_U->we0(inbuf_we0);
    inbuf_U->d0(inbuf_d0);
    inbuf_U->q0(inbuf_q0);
    outbuf_U = new challenge_outbuf("outbuf_U");
    outbuf_U->clk(ap_clk);
    outbuf_U->reset(ap_rst);
    outbuf_U->address0(outbuf_address0);
    outbuf_U->ce0(outbuf_ce0);
    outbuf_U->we0(outbuf_we0);
    outbuf_U->d0(grp_keccak_squeezeblocks_2_fu_353_h_d0);
    outbuf_U->q0(outbuf_q0);
    state_U = new challenge_state("state_U");
    state_U->clk(ap_clk);
    state_U->reset(ap_rst);
    state_U->address0(state_address0);
    state_U->ce0(state_ce0);
    state_U->we0(state_we0);
    state_U->d0(state_d0);
    state_U->q0(state_q0);
    state_U->address1(state_address1);
    state_U->ce1(state_ce1);
    state_U->we1(state_we1);
    state_U->d1(state_d1);
    state_U->q1(state_q1);
    grp_keccak_absorb_2_fu_345 = new keccak_absorb_2("grp_keccak_absorb_2_fu_345");
    grp_keccak_absorb_2_fu_345->ap_clk(ap_clk);
    grp_keccak_absorb_2_fu_345->ap_rst(ap_rst);
    grp_keccak_absorb_2_fu_345->ap_start(grp_keccak_absorb_2_fu_345_ap_start);
    grp_keccak_absorb_2_fu_345->ap_done(grp_keccak_absorb_2_fu_345_ap_done);
    grp_keccak_absorb_2_fu_345->ap_idle(grp_keccak_absorb_2_fu_345_ap_idle);
    grp_keccak_absorb_2_fu_345->ap_ready(grp_keccak_absorb_2_fu_345_ap_ready);
    grp_keccak_absorb_2_fu_345->s_address0(grp_keccak_absorb_2_fu_345_s_address0);
    grp_keccak_absorb_2_fu_345->s_ce0(grp_keccak_absorb_2_fu_345_s_ce0);
    grp_keccak_absorb_2_fu_345->s_we0(grp_keccak_absorb_2_fu_345_s_we0);
    grp_keccak_absorb_2_fu_345->s_d0(grp_keccak_absorb_2_fu_345_s_d0);
    grp_keccak_absorb_2_fu_345->s_q0(state_q0);
    grp_keccak_absorb_2_fu_345->s_address1(grp_keccak_absorb_2_fu_345_s_address1);
    grp_keccak_absorb_2_fu_345->s_ce1(grp_keccak_absorb_2_fu_345_s_ce1);
    grp_keccak_absorb_2_fu_345->s_we1(grp_keccak_absorb_2_fu_345_s_we1);
    grp_keccak_absorb_2_fu_345->s_d1(grp_keccak_absorb_2_fu_345_s_d1);
    grp_keccak_absorb_2_fu_345->s_q1(state_q1);
    grp_keccak_absorb_2_fu_345->m_address0(grp_keccak_absorb_2_fu_345_m_address0);
    grp_keccak_absorb_2_fu_345->m_ce0(grp_keccak_absorb_2_fu_345_m_ce0);
    grp_keccak_absorb_2_fu_345->m_q0(inbuf_q0);
    grp_keccak_squeezeblocks_2_fu_353 = new keccak_squeezeblocks_2("grp_keccak_squeezeblocks_2_fu_353");
    grp_keccak_squeezeblocks_2_fu_353->ap_clk(ap_clk);
    grp_keccak_squeezeblocks_2_fu_353->ap_rst(ap_rst);
    grp_keccak_squeezeblocks_2_fu_353->ap_start(grp_keccak_squeezeblocks_2_fu_353_ap_start);
    grp_keccak_squeezeblocks_2_fu_353->ap_done(grp_keccak_squeezeblocks_2_fu_353_ap_done);
    grp_keccak_squeezeblocks_2_fu_353->ap_idle(grp_keccak_squeezeblocks_2_fu_353_ap_idle);
    grp_keccak_squeezeblocks_2_fu_353->ap_ready(grp_keccak_squeezeblocks_2_fu_353_ap_ready);
    grp_keccak_squeezeblocks_2_fu_353->h_address0(grp_keccak_squeezeblocks_2_fu_353_h_address0);
    grp_keccak_squeezeblocks_2_fu_353->h_ce0(grp_keccak_squeezeblocks_2_fu_353_h_ce0);
    grp_keccak_squeezeblocks_2_fu_353->h_we0(grp_keccak_squeezeblocks_2_fu_353_h_we0);
    grp_keccak_squeezeblocks_2_fu_353->h_d0(grp_keccak_squeezeblocks_2_fu_353_h_d0);
    grp_keccak_squeezeblocks_2_fu_353->s_address0(grp_keccak_squeezeblocks_2_fu_353_s_address0);
    grp_keccak_squeezeblocks_2_fu_353->s_ce0(grp_keccak_squeezeblocks_2_fu_353_s_ce0);
    grp_keccak_squeezeblocks_2_fu_353->s_we0(grp_keccak_squeezeblocks_2_fu_353_s_we0);
    grp_keccak_squeezeblocks_2_fu_353->s_d0(grp_keccak_squeezeblocks_2_fu_353_s_d0);
    grp_keccak_squeezeblocks_2_fu_353->s_q0(state_q0);
    grp_keccak_squeezeblocks_2_fu_353->s_address1(grp_keccak_squeezeblocks_2_fu_353_s_address1);
    grp_keccak_squeezeblocks_2_fu_353->s_ce1(grp_keccak_squeezeblocks_2_fu_353_s_ce1);
    grp_keccak_squeezeblocks_2_fu_353->s_we1(grp_keccak_squeezeblocks_2_fu_353_s_we1);
    grp_keccak_squeezeblocks_2_fu_353->s_d1(grp_keccak_squeezeblocks_2_fu_353_s_d1);
    grp_keccak_squeezeblocks_2_fu_353->s_q1(state_q1);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state17);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state18);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state19);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_state15_on_subcall_done);
    sensitive << ( tmp_220_reg_732 );
    sensitive << ( grp_keccak_squeezeblocks_2_fu_353_ap_done );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( exitcond_fu_579_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( exitcond_fu_579_p2 );

    SC_METHOD(thread_b_cast_fu_602_p1);
    sensitive << ( outbuf_q0 );

    SC_METHOD(thread_c_coeffs_address0);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( c_coeffs_addr_1_reg_750 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( tmp_219_fu_574_p1 );
    sensitive << ( tmp_223_fu_612_p1 );
    sensitive << ( tmp_224_fu_635_p1 );

    SC_METHOD(thread_c_coeffs_ce0);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state19 );

    SC_METHOD(thread_c_coeffs_d0);
    sensitive << ( c_coeffs_q0 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( tmp_318_cast_cast_ca_fu_646_p3 );

    SC_METHOD(thread_c_coeffs_we0);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( tmp_218_fu_562_p2 );
    sensitive << ( ap_CS_fsm_state19 );

    SC_METHOD(thread_exitcond_fu_579_p2);
    sensitive << ( i_4_reg_286 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_grp_keccak_absorb_2_fu_345_ap_start);
    sensitive << ( grp_keccak_absorb_2_fu_345_ap_start_reg );

    SC_METHOD(thread_grp_keccak_squeezeblocks_2_fu_353_ap_start);
    sensitive << ( grp_keccak_squeezeblocks_2_fu_353_ap_start_reg );

    SC_METHOD(thread_i_107_fu_367_p2);
    sensitive << ( i_reg_216 );

    SC_METHOD(thread_i_108_fu_397_p2);
    sensitive << ( i_1_reg_228 );

    SC_METHOD(thread_i_109_fu_519_p2);
    sensitive << ( i_2_reg_251 );

    SC_METHOD(thread_i_110_fu_568_p2);
    sensitive << ( i_3_reg_275 );

    SC_METHOD(thread_i_111_fu_640_p2);
    sensitive << ( i_4_reg_286 );

    SC_METHOD(thread_i_21_fu_427_p2);
    sensitive << ( i_i_reg_240 );

    SC_METHOD(thread_inbuf_address0);
    sensitive << ( grp_keccak_absorb_2_fu_345_m_address0 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( tmp_s_fu_386_p1 );
    sensitive << ( sum_i_cast_fu_509_p1 );

    SC_METHOD(thread_inbuf_ce0);
    sensitive << ( grp_keccak_absorb_2_fu_345_m_ce0 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_inbuf_d0);
    sensitive << ( mu_q0 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_78_i_fu_502_p2 );

    SC_METHOD(thread_inbuf_we0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_mask_2_fu_629_p2);
    sensitive << ( mask_reg_310 );

    SC_METHOD(thread_mu_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( sum_cast_fu_381_p1 );

    SC_METHOD(thread_mu_ce0);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_outbuf_address0);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( tmp_220_reg_732 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( grp_keccak_squeezeblocks_2_fu_353_h_address0 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( tmp_213_fu_525_p1 );
    sensitive << ( tmp_221_fu_597_p1 );

    SC_METHOD(thread_outbuf_ce0);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( tmp_220_reg_732 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( grp_keccak_squeezeblocks_2_fu_353_h_ce0 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state15 );

    SC_METHOD(thread_outbuf_we0);
    sensitive << ( tmp_220_reg_732 );
    sensitive << ( grp_keccak_squeezeblocks_2_fu_353_h_we0 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state15 );

    SC_METHOD(thread_p_sum1_cast_fu_417_p1);
    sensitive << ( p_sum1_fu_411_p2 );

    SC_METHOD(thread_p_sum1_fu_411_p2);
    sensitive << ( tmp_210_fu_403_p3 );

    SC_METHOD(thread_pos_5_fu_591_p2);
    sensitive << ( pos_2_reg_333 );

    SC_METHOD(thread_signs_1_fu_556_p2);
    sensitive << ( signs_reg_263 );
    sensitive << ( tmp_217_fu_550_p2 );

    SC_METHOD(thread_state_address0);
    sensitive << ( tmp_220_reg_732 );
    sensitive << ( grp_keccak_absorb_2_fu_345_s_address0 );
    sensitive << ( grp_keccak_squeezeblocks_2_fu_353_s_address0 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_state_address1);
    sensitive << ( tmp_220_reg_732 );
    sensitive << ( grp_keccak_absorb_2_fu_345_s_address1 );
    sensitive << ( grp_keccak_squeezeblocks_2_fu_353_s_address1 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_state_ce0);
    sensitive << ( tmp_220_reg_732 );
    sensitive << ( grp_keccak_absorb_2_fu_345_s_ce0 );
    sensitive << ( grp_keccak_squeezeblocks_2_fu_353_s_ce0 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_state_ce1);
    sensitive << ( tmp_220_reg_732 );
    sensitive << ( grp_keccak_absorb_2_fu_345_s_ce1 );
    sensitive << ( grp_keccak_squeezeblocks_2_fu_353_s_ce1 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_state_d0);
    sensitive << ( tmp_220_reg_732 );
    sensitive << ( grp_keccak_absorb_2_fu_345_s_d0 );
    sensitive << ( grp_keccak_squeezeblocks_2_fu_353_s_d0 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_state_d1);
    sensitive << ( tmp_220_reg_732 );
    sensitive << ( grp_keccak_absorb_2_fu_345_s_d1 );
    sensitive << ( grp_keccak_squeezeblocks_2_fu_353_s_d1 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_state_we0);
    sensitive << ( tmp_220_reg_732 );
    sensitive << ( grp_keccak_absorb_2_fu_345_s_we0 );
    sensitive << ( grp_keccak_squeezeblocks_2_fu_353_s_we0 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_state_we1);
    sensitive << ( tmp_220_reg_732 );
    sensitive << ( grp_keccak_absorb_2_fu_345_s_we1 );
    sensitive << ( grp_keccak_squeezeblocks_2_fu_353_s_we1 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_sum1_fu_373_p3);
    sensitive << ( i_reg_216 );

    SC_METHOD(thread_sum_cast_fu_381_p1);
    sensitive << ( sum1_fu_373_p3 );

    SC_METHOD(thread_sum_i_cast_fu_509_p1);
    sensitive << ( sum_i_reg_698 );

    SC_METHOD(thread_sum_i_fu_481_p2);
    sensitive << ( p_sum1_cast_reg_675 );
    sensitive << ( tmp_79_i_cast_fu_477_p1 );

    SC_METHOD(thread_tmp_11_i_fu_494_p3);
    sensitive << ( tmp_242_fu_490_p1 );

    SC_METHOD(thread_tmp_209_fu_391_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( i_1_reg_228 );

    SC_METHOD(thread_tmp_210_fu_403_p3);
    sensitive << ( i_1_reg_228 );

    SC_METHOD(thread_tmp_212_fu_513_p2);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( i_2_reg_251 );

    SC_METHOD(thread_tmp_213_fu_525_p1);
    sensitive << ( i_2_reg_251 );

    SC_METHOD(thread_tmp_214_fu_530_p1);
    sensitive << ( outbuf_q0 );

    SC_METHOD(thread_tmp_215_fu_538_p3);
    sensitive << ( tmp_234_fu_534_p1 );

    SC_METHOD(thread_tmp_216_fu_546_p1);
    sensitive << ( tmp_215_fu_538_p3 );

    SC_METHOD(thread_tmp_217_fu_550_p2);
    sensitive << ( tmp_214_fu_530_p1 );
    sensitive << ( tmp_216_fu_546_p1 );

    SC_METHOD(thread_tmp_218_fu_562_p2);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( i_3_reg_275 );

    SC_METHOD(thread_tmp_219_fu_574_p1);
    sensitive << ( i_3_reg_275 );

    SC_METHOD(thread_tmp_220_fu_585_p2);
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( pos_1_reg_322 );

    SC_METHOD(thread_tmp_221_fu_597_p1);
    sensitive << ( pos_2_reg_333 );

    SC_METHOD(thread_tmp_222_fu_606_p2);
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( i_4_reg_286 );
    sensitive << ( b_cast_fu_602_p1 );

    SC_METHOD(thread_tmp_223_fu_612_p1);
    sensitive << ( outbuf_q0 );

    SC_METHOD(thread_tmp_224_fu_635_p1);
    sensitive << ( i_4_reg_286 );

    SC_METHOD(thread_tmp_225_fu_617_p2);
    sensitive << ( signs_reg_263 );
    sensitive << ( mask_reg_310 );

    SC_METHOD(thread_tmp_226_fu_623_p2);
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( tmp_222_fu_606_p2 );
    sensitive << ( tmp_225_fu_617_p2 );

    SC_METHOD(thread_tmp_234_fu_534_p1);
    sensitive << ( i_2_reg_251 );

    SC_METHOD(thread_tmp_235_fu_433_p1);
    sensitive << ( i_i_reg_240 );

    SC_METHOD(thread_tmp_236_fu_437_p2);
    sensitive << ( i_i_reg_240 );

    SC_METHOD(thread_tmp_237_fu_486_p1);
    sensitive << ( w1_vec_coeffs_q0 );

    SC_METHOD(thread_tmp_238_fu_443_p4);
    sensitive << ( i_1_reg_228 );
    sensitive << ( tmp_235_fu_433_p1 );

    SC_METHOD(thread_tmp_239_fu_453_p1);
    sensitive << ( tmp_238_fu_443_p4 );

    SC_METHOD(thread_tmp_240_fu_464_p3);
    sensitive << ( i_1_reg_228 );
    sensitive << ( tmp_76_i_fu_458_p2 );

    SC_METHOD(thread_tmp_241_fu_472_p1);
    sensitive << ( tmp_240_fu_464_p3 );

    SC_METHOD(thread_tmp_242_fu_490_p1);
    sensitive << ( w1_vec_coeffs_q1 );

    SC_METHOD(thread_tmp_318_cast_cast_ca_fu_646_p3);
    sensitive << ( tmp_226_reg_755 );

    SC_METHOD(thread_tmp_76_i_fu_458_p2);
    sensitive << ( tmp_236_fu_437_p2 );

    SC_METHOD(thread_tmp_78_i_fu_502_p2);
    sensitive << ( tmp_11_i_fu_494_p3 );
    sensitive << ( tmp_237_fu_486_p1 );

    SC_METHOD(thread_tmp_79_i_cast_fu_477_p1);
    sensitive << ( i_i_reg_240 );

    SC_METHOD(thread_tmp_fu_361_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_reg_216 );

    SC_METHOD(thread_tmp_i_fu_421_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( i_i_reg_240 );

    SC_METHOD(thread_tmp_s_fu_386_p1);
    sensitive << ( i_reg_216 );

    SC_METHOD(thread_w1_vec_coeffs_address0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_239_fu_453_p1 );

    SC_METHOD(thread_w1_vec_coeffs_address1);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_241_fu_472_p1 );

    SC_METHOD(thread_w1_vec_coeffs_ce0);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_w1_vec_coeffs_ce1);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_fu_361_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_209_fu_391_p2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_i_fu_421_p2 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( tmp_212_fu_513_p2 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( tmp_222_fu_606_p2 );
    sensitive << ( grp_keccak_absorb_2_fu_345_ap_done );
    sensitive << ( grp_keccak_squeezeblocks_2_fu_353_ap_done );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( tmp_218_fu_562_p2 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( exitcond_fu_579_p2 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_block_state15_on_subcall_done );
    sensitive << ( ap_CS_fsm_state7 );

    ap_CS_fsm = "0000000000000000001";
    grp_keccak_absorb_2_fu_345_ap_start_reg = SC_LOGIC_0;
    grp_keccak_squeezeblocks_2_fu_353_ap_start_reg = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "challenge_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, c_coeffs_address0, "(port)c_coeffs_address0");
    sc_trace(mVcdFile, c_coeffs_ce0, "(port)c_coeffs_ce0");
    sc_trace(mVcdFile, c_coeffs_we0, "(port)c_coeffs_we0");
    sc_trace(mVcdFile, c_coeffs_d0, "(port)c_coeffs_d0");
    sc_trace(mVcdFile, c_coeffs_q0, "(port)c_coeffs_q0");
    sc_trace(mVcdFile, mu_address0, "(port)mu_address0");
    sc_trace(mVcdFile, mu_ce0, "(port)mu_ce0");
    sc_trace(mVcdFile, mu_q0, "(port)mu_q0");
    sc_trace(mVcdFile, w1_vec_coeffs_address0, "(port)w1_vec_coeffs_address0");
    sc_trace(mVcdFile, w1_vec_coeffs_ce0, "(port)w1_vec_coeffs_ce0");
    sc_trace(mVcdFile, w1_vec_coeffs_q0, "(port)w1_vec_coeffs_q0");
    sc_trace(mVcdFile, w1_vec_coeffs_address1, "(port)w1_vec_coeffs_address1");
    sc_trace(mVcdFile, w1_vec_coeffs_ce1, "(port)w1_vec_coeffs_ce1");
    sc_trace(mVcdFile, w1_vec_coeffs_q1, "(port)w1_vec_coeffs_q1");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, i_107_fu_367_p2, "i_107_fu_367_p2");
    sc_trace(mVcdFile, i_107_reg_657, "i_107_reg_657");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, tmp_fu_361_p2, "tmp_fu_361_p2");
    sc_trace(mVcdFile, i_108_fu_397_p2, "i_108_fu_397_p2");
    sc_trace(mVcdFile, i_108_reg_670, "i_108_reg_670");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, p_sum1_cast_fu_417_p1, "p_sum1_cast_fu_417_p1");
    sc_trace(mVcdFile, p_sum1_cast_reg_675, "p_sum1_cast_reg_675");
    sc_trace(mVcdFile, tmp_209_fu_391_p2, "tmp_209_fu_391_p2");
    sc_trace(mVcdFile, i_21_fu_427_p2, "i_21_fu_427_p2");
    sc_trace(mVcdFile, i_21_reg_683, "i_21_reg_683");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, tmp_i_fu_421_p2, "tmp_i_fu_421_p2");
    sc_trace(mVcdFile, sum_i_fu_481_p2, "sum_i_fu_481_p2");
    sc_trace(mVcdFile, sum_i_reg_698, "sum_i_reg_698");
    sc_trace(mVcdFile, i_109_fu_519_p2, "i_109_fu_519_p2");
    sc_trace(mVcdFile, i_109_reg_706, "i_109_reg_706");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, tmp_212_fu_513_p2, "tmp_212_fu_513_p2");
    sc_trace(mVcdFile, signs_1_fu_556_p2, "signs_1_fu_556_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, i_110_fu_568_p2, "i_110_fu_568_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, tmp_220_fu_585_p2, "tmp_220_fu_585_p2");
    sc_trace(mVcdFile, tmp_220_reg_732, "tmp_220_reg_732");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, pos_5_fu_591_p2, "pos_5_fu_591_p2");
    sc_trace(mVcdFile, pos_5_reg_736, "pos_5_reg_736");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, c_coeffs_addr_1_reg_750, "c_coeffs_addr_1_reg_750");
    sc_trace(mVcdFile, ap_CS_fsm_state17, "ap_CS_fsm_state17");
    sc_trace(mVcdFile, tmp_222_fu_606_p2, "tmp_222_fu_606_p2");
    sc_trace(mVcdFile, tmp_226_fu_623_p2, "tmp_226_fu_623_p2");
    sc_trace(mVcdFile, tmp_226_reg_755, "tmp_226_reg_755");
    sc_trace(mVcdFile, mask_2_fu_629_p2, "mask_2_fu_629_p2");
    sc_trace(mVcdFile, mask_2_reg_760, "mask_2_reg_760");
    sc_trace(mVcdFile, i_111_fu_640_p2, "i_111_fu_640_p2");
    sc_trace(mVcdFile, i_111_reg_765, "i_111_reg_765");
    sc_trace(mVcdFile, ap_CS_fsm_state18, "ap_CS_fsm_state18");
    sc_trace(mVcdFile, inbuf_address0, "inbuf_address0");
    sc_trace(mVcdFile, inbuf_ce0, "inbuf_ce0");
    sc_trace(mVcdFile, inbuf_we0, "inbuf_we0");
    sc_trace(mVcdFile, inbuf_d0, "inbuf_d0");
    sc_trace(mVcdFile, inbuf_q0, "inbuf_q0");
    sc_trace(mVcdFile, outbuf_address0, "outbuf_address0");
    sc_trace(mVcdFile, outbuf_ce0, "outbuf_ce0");
    sc_trace(mVcdFile, outbuf_we0, "outbuf_we0");
    sc_trace(mVcdFile, outbuf_q0, "outbuf_q0");
    sc_trace(mVcdFile, state_address0, "state_address0");
    sc_trace(mVcdFile, state_ce0, "state_ce0");
    sc_trace(mVcdFile, state_we0, "state_we0");
    sc_trace(mVcdFile, state_d0, "state_d0");
    sc_trace(mVcdFile, state_q0, "state_q0");
    sc_trace(mVcdFile, state_address1, "state_address1");
    sc_trace(mVcdFile, state_ce1, "state_ce1");
    sc_trace(mVcdFile, state_we1, "state_we1");
    sc_trace(mVcdFile, state_d1, "state_d1");
    sc_trace(mVcdFile, state_q1, "state_q1");
    sc_trace(mVcdFile, grp_keccak_absorb_2_fu_345_ap_start, "grp_keccak_absorb_2_fu_345_ap_start");
    sc_trace(mVcdFile, grp_keccak_absorb_2_fu_345_ap_done, "grp_keccak_absorb_2_fu_345_ap_done");
    sc_trace(mVcdFile, grp_keccak_absorb_2_fu_345_ap_idle, "grp_keccak_absorb_2_fu_345_ap_idle");
    sc_trace(mVcdFile, grp_keccak_absorb_2_fu_345_ap_ready, "grp_keccak_absorb_2_fu_345_ap_ready");
    sc_trace(mVcdFile, grp_keccak_absorb_2_fu_345_s_address0, "grp_keccak_absorb_2_fu_345_s_address0");
    sc_trace(mVcdFile, grp_keccak_absorb_2_fu_345_s_ce0, "grp_keccak_absorb_2_fu_345_s_ce0");
    sc_trace(mVcdFile, grp_keccak_absorb_2_fu_345_s_we0, "grp_keccak_absorb_2_fu_345_s_we0");
    sc_trace(mVcdFile, grp_keccak_absorb_2_fu_345_s_d0, "grp_keccak_absorb_2_fu_345_s_d0");
    sc_trace(mVcdFile, grp_keccak_absorb_2_fu_345_s_address1, "grp_keccak_absorb_2_fu_345_s_address1");
    sc_trace(mVcdFile, grp_keccak_absorb_2_fu_345_s_ce1, "grp_keccak_absorb_2_fu_345_s_ce1");
    sc_trace(mVcdFile, grp_keccak_absorb_2_fu_345_s_we1, "grp_keccak_absorb_2_fu_345_s_we1");
    sc_trace(mVcdFile, grp_keccak_absorb_2_fu_345_s_d1, "grp_keccak_absorb_2_fu_345_s_d1");
    sc_trace(mVcdFile, grp_keccak_absorb_2_fu_345_m_address0, "grp_keccak_absorb_2_fu_345_m_address0");
    sc_trace(mVcdFile, grp_keccak_absorb_2_fu_345_m_ce0, "grp_keccak_absorb_2_fu_345_m_ce0");
    sc_trace(mVcdFile, grp_keccak_squeezeblocks_2_fu_353_ap_start, "grp_keccak_squeezeblocks_2_fu_353_ap_start");
    sc_trace(mVcdFile, grp_keccak_squeezeblocks_2_fu_353_ap_done, "grp_keccak_squeezeblocks_2_fu_353_ap_done");
    sc_trace(mVcdFile, grp_keccak_squeezeblocks_2_fu_353_ap_idle, "grp_keccak_squeezeblocks_2_fu_353_ap_idle");
    sc_trace(mVcdFile, grp_keccak_squeezeblocks_2_fu_353_ap_ready, "grp_keccak_squeezeblocks_2_fu_353_ap_ready");
    sc_trace(mVcdFile, grp_keccak_squeezeblocks_2_fu_353_h_address0, "grp_keccak_squeezeblocks_2_fu_353_h_address0");
    sc_trace(mVcdFile, grp_keccak_squeezeblocks_2_fu_353_h_ce0, "grp_keccak_squeezeblocks_2_fu_353_h_ce0");
    sc_trace(mVcdFile, grp_keccak_squeezeblocks_2_fu_353_h_we0, "grp_keccak_squeezeblocks_2_fu_353_h_we0");
    sc_trace(mVcdFile, grp_keccak_squeezeblocks_2_fu_353_h_d0, "grp_keccak_squeezeblocks_2_fu_353_h_d0");
    sc_trace(mVcdFile, grp_keccak_squeezeblocks_2_fu_353_s_address0, "grp_keccak_squeezeblocks_2_fu_353_s_address0");
    sc_trace(mVcdFile, grp_keccak_squeezeblocks_2_fu_353_s_ce0, "grp_keccak_squeezeblocks_2_fu_353_s_ce0");
    sc_trace(mVcdFile, grp_keccak_squeezeblocks_2_fu_353_s_we0, "grp_keccak_squeezeblocks_2_fu_353_s_we0");
    sc_trace(mVcdFile, grp_keccak_squeezeblocks_2_fu_353_s_d0, "grp_keccak_squeezeblocks_2_fu_353_s_d0");
    sc_trace(mVcdFile, grp_keccak_squeezeblocks_2_fu_353_s_address1, "grp_keccak_squeezeblocks_2_fu_353_s_address1");
    sc_trace(mVcdFile, grp_keccak_squeezeblocks_2_fu_353_s_ce1, "grp_keccak_squeezeblocks_2_fu_353_s_ce1");
    sc_trace(mVcdFile, grp_keccak_squeezeblocks_2_fu_353_s_we1, "grp_keccak_squeezeblocks_2_fu_353_s_we1");
    sc_trace(mVcdFile, grp_keccak_squeezeblocks_2_fu_353_s_d1, "grp_keccak_squeezeblocks_2_fu_353_s_d1");
    sc_trace(mVcdFile, i_reg_216, "i_reg_216");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, i_1_reg_228, "i_1_reg_228");
    sc_trace(mVcdFile, i_i_reg_240, "i_i_reg_240");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, i_2_reg_251, "i_2_reg_251");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, signs_reg_263, "signs_reg_263");
    sc_trace(mVcdFile, i_3_reg_275, "i_3_reg_275");
    sc_trace(mVcdFile, tmp_218_fu_562_p2, "tmp_218_fu_562_p2");
    sc_trace(mVcdFile, i_4_reg_286, "i_4_reg_286");
    sc_trace(mVcdFile, ap_CS_fsm_state19, "ap_CS_fsm_state19");
    sc_trace(mVcdFile, pos_reg_298, "pos_reg_298");
    sc_trace(mVcdFile, mask_reg_310, "mask_reg_310");
    sc_trace(mVcdFile, pos_1_reg_322, "pos_1_reg_322");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, exitcond_fu_579_p2, "exitcond_fu_579_p2");
    sc_trace(mVcdFile, pos_2_reg_333, "pos_2_reg_333");
    sc_trace(mVcdFile, ap_CS_fsm_state15, "ap_CS_fsm_state15");
    sc_trace(mVcdFile, ap_block_state15_on_subcall_done, "ap_block_state15_on_subcall_done");
    sc_trace(mVcdFile, grp_keccak_absorb_2_fu_345_ap_start_reg, "grp_keccak_absorb_2_fu_345_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, grp_keccak_squeezeblocks_2_fu_353_ap_start_reg, "grp_keccak_squeezeblocks_2_fu_353_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, sum_cast_fu_381_p1, "sum_cast_fu_381_p1");
    sc_trace(mVcdFile, tmp_s_fu_386_p1, "tmp_s_fu_386_p1");
    sc_trace(mVcdFile, tmp_239_fu_453_p1, "tmp_239_fu_453_p1");
    sc_trace(mVcdFile, tmp_241_fu_472_p1, "tmp_241_fu_472_p1");
    sc_trace(mVcdFile, sum_i_cast_fu_509_p1, "sum_i_cast_fu_509_p1");
    sc_trace(mVcdFile, tmp_213_fu_525_p1, "tmp_213_fu_525_p1");
    sc_trace(mVcdFile, tmp_219_fu_574_p1, "tmp_219_fu_574_p1");
    sc_trace(mVcdFile, tmp_221_fu_597_p1, "tmp_221_fu_597_p1");
    sc_trace(mVcdFile, tmp_223_fu_612_p1, "tmp_223_fu_612_p1");
    sc_trace(mVcdFile, tmp_224_fu_635_p1, "tmp_224_fu_635_p1");
    sc_trace(mVcdFile, tmp_78_i_fu_502_p2, "tmp_78_i_fu_502_p2");
    sc_trace(mVcdFile, tmp_318_cast_cast_ca_fu_646_p3, "tmp_318_cast_cast_ca_fu_646_p3");
    sc_trace(mVcdFile, sum1_fu_373_p3, "sum1_fu_373_p3");
    sc_trace(mVcdFile, tmp_210_fu_403_p3, "tmp_210_fu_403_p3");
    sc_trace(mVcdFile, p_sum1_fu_411_p2, "p_sum1_fu_411_p2");
    sc_trace(mVcdFile, tmp_235_fu_433_p1, "tmp_235_fu_433_p1");
    sc_trace(mVcdFile, tmp_238_fu_443_p4, "tmp_238_fu_443_p4");
    sc_trace(mVcdFile, tmp_236_fu_437_p2, "tmp_236_fu_437_p2");
    sc_trace(mVcdFile, tmp_76_i_fu_458_p2, "tmp_76_i_fu_458_p2");
    sc_trace(mVcdFile, tmp_240_fu_464_p3, "tmp_240_fu_464_p3");
    sc_trace(mVcdFile, tmp_79_i_cast_fu_477_p1, "tmp_79_i_cast_fu_477_p1");
    sc_trace(mVcdFile, tmp_242_fu_490_p1, "tmp_242_fu_490_p1");
    sc_trace(mVcdFile, tmp_11_i_fu_494_p3, "tmp_11_i_fu_494_p3");
    sc_trace(mVcdFile, tmp_237_fu_486_p1, "tmp_237_fu_486_p1");
    sc_trace(mVcdFile, tmp_234_fu_534_p1, "tmp_234_fu_534_p1");
    sc_trace(mVcdFile, tmp_215_fu_538_p3, "tmp_215_fu_538_p3");
    sc_trace(mVcdFile, tmp_214_fu_530_p1, "tmp_214_fu_530_p1");
    sc_trace(mVcdFile, tmp_216_fu_546_p1, "tmp_216_fu_546_p1");
    sc_trace(mVcdFile, tmp_217_fu_550_p2, "tmp_217_fu_550_p2");
    sc_trace(mVcdFile, b_cast_fu_602_p1, "b_cast_fu_602_p1");
    sc_trace(mVcdFile, tmp_225_fu_617_p2, "tmp_225_fu_617_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

challenge::~challenge() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete inbuf_U;
    delete outbuf_U;
    delete state_U;
    delete grp_keccak_absorb_2_fu_345;
    delete grp_keccak_squeezeblocks_2_fu_353;
}

void challenge::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_keccak_absorb_2_fu_345_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(tmp_209_fu_391_p2.read(), ap_const_lv1_1) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
            grp_keccak_absorb_2_fu_345_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_keccak_absorb_2_fu_345_ap_ready.read())) {
            grp_keccak_absorb_2_fu_345_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_keccak_squeezeblocks_2_fu_353_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && 
              esl_seteq<1,1,1>(tmp_220_fu_585_p2.read(), ap_const_lv1_1)))) {
            grp_keccak_squeezeblocks_2_fu_353_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_keccak_squeezeblocks_2_fu_353_ap_ready.read())) {
            grp_keccak_squeezeblocks_2_fu_353_ap_start_reg = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(tmp_fu_361_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        i_1_reg_228 = ap_const_lv3_0;
    } else if ((esl_seteq<1,1,1>(tmp_i_fu_421_p2.read(), ap_const_lv1_1) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()))) {
        i_1_reg_228 = i_108_reg_670.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        i_2_reg_251 = i_109_reg_706.read();
    } else if ((esl_seteq<1,1,1>(grp_keccak_squeezeblocks_2_fu_353_ap_done.read(), ap_const_logic_1) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
        i_2_reg_251 = ap_const_lv4_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
         esl_seteq<1,1,1>(tmp_212_fu_513_p2.read(), ap_const_lv1_1))) {
        i_3_reg_275 = ap_const_lv9_0;
    } else if ((esl_seteq<1,1,1>(tmp_218_fu_562_p2.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()))) {
        i_3_reg_275 = i_110_fu_568_p2.read();
    }
    if ((esl_seteq<1,1,1>(tmp_218_fu_562_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()))) {
        i_4_reg_286 = ap_const_lv9_C4;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        i_4_reg_286 = i_111_reg_765.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        i_i_reg_240 = i_21_reg_683.read();
    } else if ((esl_seteq<1,1,1>(tmp_209_fu_391_p2.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        i_i_reg_240 = ap_const_lv8_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        i_reg_216 = i_107_reg_657.read();
    } else if ((esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        i_reg_216 = ap_const_lv6_0;
    }
    if ((esl_seteq<1,1,1>(tmp_218_fu_562_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()))) {
        mask_reg_310 = ap_const_lv64_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        mask_reg_310 = mask_2_reg_760.read();
    }
    if ((esl_seteq<1,1,1>(exitcond_fu_579_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()))) {
        pos_1_reg_322 = pos_reg_298.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) && 
                esl_seteq<1,1,1>(tmp_222_fu_606_p2.read(), ap_const_lv1_1))) {
        pos_1_reg_322 = pos_5_reg_736.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_220_fu_585_p2.read()))) {
        pos_2_reg_333 = pos_1_reg_322.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && 
                esl_seteq<1,1,1>(tmp_220_reg_732.read(), ap_const_lv1_1) && 
                esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_state15_on_subcall_done.read()))) {
        pos_2_reg_333 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(tmp_218_fu_562_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()))) {
        pos_reg_298 = ap_const_lv32_8;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        pos_reg_298 = pos_5_reg_736.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        signs_reg_263 = signs_1_fu_556_p2.read();
    } else if ((esl_seteq<1,1,1>(grp_keccak_squeezeblocks_2_fu_353_ap_done.read(), ap_const_logic_1) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
        signs_reg_263 = ap_const_lv64_0;
    }
    if ((esl_seteq<1,1,1>(tmp_222_fu_606_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()))) {
        c_coeffs_addr_1_reg_750 =  (sc_lv<8>) (tmp_223_fu_612_p1.read());
        mask_2_reg_760 = mask_2_fu_629_p2.read();
        tmp_226_reg_755 = tmp_226_fu_623_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        i_107_reg_657 = i_107_fu_367_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        i_108_reg_670 = i_108_fu_397_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        i_109_reg_706 = i_109_fu_519_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        i_111_reg_765 = i_111_fu_640_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        i_21_reg_683 = i_21_fu_427_p2.read();
    }
    if ((esl_seteq<1,1,1>(tmp_209_fu_391_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        p_sum1_cast_reg_675 = p_sum1_cast_fu_417_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        pos_5_reg_736 = pos_5_fu_591_p2.read();
    }
    if ((esl_seteq<1,1,1>(tmp_i_fu_421_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()))) {
        sum_i_reg_698 = sum_i_fu_481_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        tmp_220_reg_732 = tmp_220_fu_585_p2.read();
    }
}

void challenge::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void challenge::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void challenge::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void challenge::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void challenge::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void challenge::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[13];
}

void challenge::thread_ap_CS_fsm_state15() {
    ap_CS_fsm_state15 = ap_CS_fsm.read()[14];
}

void challenge::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read()[15];
}

void challenge::thread_ap_CS_fsm_state17() {
    ap_CS_fsm_state17 = ap_CS_fsm.read()[16];
}

void challenge::thread_ap_CS_fsm_state18() {
    ap_CS_fsm_state18 = ap_CS_fsm.read()[17];
}

void challenge::thread_ap_CS_fsm_state19() {
    ap_CS_fsm_state19 = ap_CS_fsm.read()[18];
}

void challenge::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void challenge::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void challenge::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void challenge::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void challenge::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void challenge::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void challenge::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void challenge::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void challenge::thread_ap_block_state15_on_subcall_done() {
    ap_block_state15_on_subcall_done = (esl_seteq<1,1,1>(ap_const_logic_0, grp_keccak_squeezeblocks_2_fu_353_ap_done.read()) && esl_seteq<1,1,1>(tmp_220_reg_732.read(), ap_const_lv1_1));
}

void challenge::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(exitcond_fu_579_p2.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void challenge::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void challenge::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(exitcond_fu_579_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void challenge::thread_b_cast_fu_602_p1() {
    b_cast_fu_602_p1 = esl_zext<9,8>(outbuf_q0.read());
}

void challenge::thread_c_coeffs_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        c_coeffs_address0 = c_coeffs_addr_1_reg_750.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        c_coeffs_address0 =  (sc_lv<8>) (tmp_224_fu_635_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        c_coeffs_address0 =  (sc_lv<8>) (tmp_223_fu_612_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        c_coeffs_address0 =  (sc_lv<8>) (tmp_219_fu_574_p1.read());
    } else {
        c_coeffs_address0 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void challenge::thread_c_coeffs_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()))) {
        c_coeffs_ce0 = ap_const_logic_1;
    } else {
        c_coeffs_ce0 = ap_const_logic_0;
    }
}

void challenge::thread_c_coeffs_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        c_coeffs_d0 = tmp_318_cast_cast_ca_fu_646_p3.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        c_coeffs_d0 = c_coeffs_q0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        c_coeffs_d0 = ap_const_lv23_0;
    } else {
        c_coeffs_d0 =  (sc_lv<23>) ("XXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void challenge::thread_c_coeffs_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
         (esl_seteq<1,1,1>(tmp_218_fu_562_p2.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()))) {
        c_coeffs_we0 = ap_const_logic_1;
    } else {
        c_coeffs_we0 = ap_const_logic_0;
    }
}

void challenge::thread_exitcond_fu_579_p2() {
    exitcond_fu_579_p2 = (!i_4_reg_286.read().is_01() || !ap_const_lv9_100.is_01())? sc_lv<1>(): sc_lv<1>(i_4_reg_286.read() == ap_const_lv9_100);
}

void challenge::thread_grp_keccak_absorb_2_fu_345_ap_start() {
    grp_keccak_absorb_2_fu_345_ap_start = grp_keccak_absorb_2_fu_345_ap_start_reg.read();
}

void challenge::thread_grp_keccak_squeezeblocks_2_fu_353_ap_start() {
    grp_keccak_squeezeblocks_2_fu_353_ap_start = grp_keccak_squeezeblocks_2_fu_353_ap_start_reg.read();
}

void challenge::thread_i_107_fu_367_p2() {
    i_107_fu_367_p2 = (!i_reg_216.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(i_reg_216.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void challenge::thread_i_108_fu_397_p2() {
    i_108_fu_397_p2 = (!i_1_reg_228.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(i_1_reg_228.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void challenge::thread_i_109_fu_519_p2() {
    i_109_fu_519_p2 = (!i_2_reg_251.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(i_2_reg_251.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void challenge::thread_i_110_fu_568_p2() {
    i_110_fu_568_p2 = (!i_3_reg_275.read().is_01() || !ap_const_lv9_1.is_01())? sc_lv<9>(): (sc_biguint<9>(i_3_reg_275.read()) + sc_biguint<9>(ap_const_lv9_1));
}

void challenge::thread_i_111_fu_640_p2() {
    i_111_fu_640_p2 = (!ap_const_lv9_1.is_01() || !i_4_reg_286.read().is_01())? sc_lv<9>(): (sc_biguint<9>(ap_const_lv9_1) + sc_biguint<9>(i_4_reg_286.read()));
}

void challenge::thread_i_21_fu_427_p2() {
    i_21_fu_427_p2 = (!i_i_reg_240.read().is_01() || !ap_const_lv8_1.is_01())? sc_lv<8>(): (sc_biguint<8>(i_i_reg_240.read()) + sc_biguint<8>(ap_const_lv8_1));
}

void challenge::thread_inbuf_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        inbuf_address0 =  (sc_lv<10>) (sum_i_cast_fu_509_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        inbuf_address0 =  (sc_lv<10>) (tmp_s_fu_386_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        inbuf_address0 = grp_keccak_absorb_2_fu_345_m_address0.read();
    } else {
        inbuf_address0 =  (sc_lv<10>) ("XXXXXXXXXX");
    }
}

void challenge::thread_inbuf_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
        inbuf_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        inbuf_ce0 = grp_keccak_absorb_2_fu_345_m_ce0.read();
    } else {
        inbuf_ce0 = ap_const_logic_0;
    }
}

void challenge::thread_inbuf_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        inbuf_d0 = tmp_78_i_fu_502_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        inbuf_d0 = mu_q0.read();
    } else {
        inbuf_d0 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void challenge::thread_inbuf_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
        inbuf_we0 = ap_const_logic_1;
    } else {
        inbuf_we0 = ap_const_logic_0;
    }
}

void challenge::thread_mask_2_fu_629_p2() {
    mask_2_fu_629_p2 = (!ap_const_lv64_1.is_01())? sc_lv<64>(): mask_reg_310.read() << (unsigned short)ap_const_lv64_1.to_uint();
}

void challenge::thread_mu_address0() {
    mu_address0 =  (sc_lv<7>) (sum_cast_fu_381_p1.read());
}

void challenge::thread_mu_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        mu_ce0 = ap_const_logic_1;
    } else {
        mu_ce0 = ap_const_logic_0;
    }
}

void challenge::thread_outbuf_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        outbuf_address0 =  (sc_lv<8>) (tmp_221_fu_597_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        outbuf_address0 =  (sc_lv<8>) (tmp_213_fu_525_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && 
                 esl_seteq<1,1,1>(tmp_220_reg_732.read(), ap_const_lv1_1)))) {
        outbuf_address0 = grp_keccak_squeezeblocks_2_fu_353_h_address0.read();
    } else {
        outbuf_address0 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void challenge::thread_outbuf_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()))) {
        outbuf_ce0 = ap_const_logic_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && 
                 esl_seteq<1,1,1>(tmp_220_reg_732.read(), ap_const_lv1_1)))) {
        outbuf_ce0 = grp_keccak_squeezeblocks_2_fu_353_h_ce0.read();
    } else {
        outbuf_ce0 = ap_const_logic_0;
    }
}

void challenge::thread_outbuf_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && 
          esl_seteq<1,1,1>(tmp_220_reg_732.read(), ap_const_lv1_1)))) {
        outbuf_we0 = grp_keccak_squeezeblocks_2_fu_353_h_we0.read();
    } else {
        outbuf_we0 = ap_const_logic_0;
    }
}

void challenge::thread_p_sum1_cast_fu_417_p1() {
    p_sum1_cast_fu_417_p1 = esl_zext<11,10>(p_sum1_fu_411_p2.read());
}

void challenge::thread_p_sum1_fu_411_p2() {
    p_sum1_fu_411_p2 = (tmp_210_fu_403_p3.read() | ap_const_lv10_30);
}

void challenge::thread_pos_5_fu_591_p2() {
    pos_5_fu_591_p2 = (!pos_2_reg_333.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(pos_2_reg_333.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void challenge::thread_signs_1_fu_556_p2() {
    signs_1_fu_556_p2 = (tmp_217_fu_550_p2.read() | signs_reg_263.read());
}

void challenge::thread_state_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && 
          esl_seteq<1,1,1>(tmp_220_reg_732.read(), ap_const_lv1_1)))) {
        state_address0 = grp_keccak_squeezeblocks_2_fu_353_s_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        state_address0 = grp_keccak_absorb_2_fu_345_s_address0.read();
    } else {
        state_address0 = "XXXXX";
    }
}

void challenge::thread_state_address1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && 
          esl_seteq<1,1,1>(tmp_220_reg_732.read(), ap_const_lv1_1)))) {
        state_address1 = grp_keccak_squeezeblocks_2_fu_353_s_address1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        state_address1 = grp_keccak_absorb_2_fu_345_s_address1.read();
    } else {
        state_address1 = "XXXXX";
    }
}

void challenge::thread_state_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && 
          esl_seteq<1,1,1>(tmp_220_reg_732.read(), ap_const_lv1_1)))) {
        state_ce0 = grp_keccak_squeezeblocks_2_fu_353_s_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        state_ce0 = grp_keccak_absorb_2_fu_345_s_ce0.read();
    } else {
        state_ce0 = ap_const_logic_0;
    }
}

void challenge::thread_state_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && 
          esl_seteq<1,1,1>(tmp_220_reg_732.read(), ap_const_lv1_1)))) {
        state_ce1 = grp_keccak_squeezeblocks_2_fu_353_s_ce1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        state_ce1 = grp_keccak_absorb_2_fu_345_s_ce1.read();
    } else {
        state_ce1 = ap_const_logic_0;
    }
}

void challenge::thread_state_d0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && 
          esl_seteq<1,1,1>(tmp_220_reg_732.read(), ap_const_lv1_1)))) {
        state_d0 = grp_keccak_squeezeblocks_2_fu_353_s_d0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        state_d0 = grp_keccak_absorb_2_fu_345_s_d0.read();
    } else {
        state_d0 =  (sc_lv<64>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void challenge::thread_state_d1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && 
          esl_seteq<1,1,1>(tmp_220_reg_732.read(), ap_const_lv1_1)))) {
        state_d1 = grp_keccak_squeezeblocks_2_fu_353_s_d1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        state_d1 = grp_keccak_absorb_2_fu_345_s_d1.read();
    } else {
        state_d1 =  (sc_lv<64>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void challenge::thread_state_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && 
          esl_seteq<1,1,1>(tmp_220_reg_732.read(), ap_const_lv1_1)))) {
        state_we0 = grp_keccak_squeezeblocks_2_fu_353_s_we0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        state_we0 = grp_keccak_absorb_2_fu_345_s_we0.read();
    } else {
        state_we0 = ap_const_logic_0;
    }
}

void challenge::thread_state_we1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && 
          esl_seteq<1,1,1>(tmp_220_reg_732.read(), ap_const_lv1_1)))) {
        state_we1 = grp_keccak_squeezeblocks_2_fu_353_s_we1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        state_we1 = grp_keccak_absorb_2_fu_345_s_we1.read();
    } else {
        state_we1 = ap_const_logic_0;
    }
}

void challenge::thread_sum1_fu_373_p3() {
    sum1_fu_373_p3 = esl_concat<1,6>(ap_const_lv1_1, i_reg_216.read());
}

void challenge::thread_sum_cast_fu_381_p1() {
    sum_cast_fu_381_p1 = esl_zext<64,7>(sum1_fu_373_p3.read());
}

void challenge::thread_sum_i_cast_fu_509_p1() {
    sum_i_cast_fu_509_p1 = esl_zext<64,11>(sum_i_reg_698.read());
}

void challenge::thread_sum_i_fu_481_p2() {
    sum_i_fu_481_p2 = (!tmp_79_i_cast_fu_477_p1.read().is_01() || !p_sum1_cast_reg_675.read().is_01())? sc_lv<11>(): (sc_biguint<11>(tmp_79_i_cast_fu_477_p1.read()) + sc_biguint<11>(p_sum1_cast_reg_675.read()));
}

void challenge::thread_tmp_11_i_fu_494_p3() {
    tmp_11_i_fu_494_p3 = esl_concat<4,4>(tmp_242_fu_490_p1.read(), ap_const_lv4_0);
}

void challenge::thread_tmp_209_fu_391_p2() {
    tmp_209_fu_391_p2 = (!i_1_reg_228.read().is_01() || !ap_const_lv3_5.is_01())? sc_lv<1>(): sc_lv<1>(i_1_reg_228.read() == ap_const_lv3_5);
}

void challenge::thread_tmp_210_fu_403_p3() {
    tmp_210_fu_403_p3 = esl_concat<3,7>(i_1_reg_228.read(), ap_const_lv7_0);
}

void challenge::thread_tmp_212_fu_513_p2() {
    tmp_212_fu_513_p2 = (!i_2_reg_251.read().is_01() || !ap_const_lv4_8.is_01())? sc_lv<1>(): sc_lv<1>(i_2_reg_251.read() == ap_const_lv4_8);
}

void challenge::thread_tmp_213_fu_525_p1() {
    tmp_213_fu_525_p1 = esl_zext<64,4>(i_2_reg_251.read());
}

void challenge::thread_tmp_214_fu_530_p1() {
    tmp_214_fu_530_p1 = esl_zext<64,8>(outbuf_q0.read());
}

void challenge::thread_tmp_215_fu_538_p3() {
    tmp_215_fu_538_p3 = esl_concat<3,3>(tmp_234_fu_534_p1.read(), ap_const_lv3_0);
}

void challenge::thread_tmp_216_fu_546_p1() {
    tmp_216_fu_546_p1 = esl_zext<64,6>(tmp_215_fu_538_p3.read());
}

void challenge::thread_tmp_217_fu_550_p2() {
    tmp_217_fu_550_p2 = (!tmp_216_fu_546_p1.read().is_01())? sc_lv<64>(): tmp_214_fu_530_p1.read() << (unsigned short)tmp_216_fu_546_p1.read().to_uint();
}

void challenge::thread_tmp_218_fu_562_p2() {
    tmp_218_fu_562_p2 = (!i_3_reg_275.read().is_01() || !ap_const_lv9_100.is_01())? sc_lv<1>(): sc_lv<1>(i_3_reg_275.read() == ap_const_lv9_100);
}

void challenge::thread_tmp_219_fu_574_p1() {
    tmp_219_fu_574_p1 = esl_zext<64,9>(i_3_reg_275.read());
}

void challenge::thread_tmp_220_fu_585_p2() {
    tmp_220_fu_585_p2 = (!pos_1_reg_322.read().is_01() || !ap_const_lv32_87.is_01())? sc_lv<1>(): (sc_biguint<32>(pos_1_reg_322.read()) > sc_biguint<32>(ap_const_lv32_87));
}

void challenge::thread_tmp_221_fu_597_p1() {
    tmp_221_fu_597_p1 = esl_zext<64,32>(pos_2_reg_333.read());
}

void challenge::thread_tmp_222_fu_606_p2() {
    tmp_222_fu_606_p2 = (!b_cast_fu_602_p1.read().is_01() || !i_4_reg_286.read().is_01())? sc_lv<1>(): (sc_biguint<9>(b_cast_fu_602_p1.read()) > sc_biguint<9>(i_4_reg_286.read()));
}

void challenge::thread_tmp_223_fu_612_p1() {
    tmp_223_fu_612_p1 = esl_zext<64,8>(outbuf_q0.read());
}

void challenge::thread_tmp_224_fu_635_p1() {
    tmp_224_fu_635_p1 = esl_zext<64,9>(i_4_reg_286.read());
}

void challenge::thread_tmp_225_fu_617_p2() {
    tmp_225_fu_617_p2 = (mask_reg_310.read() & signs_reg_263.read());
}

void challenge::thread_tmp_226_fu_623_p2() {
    tmp_226_fu_623_p2 = (!tmp_225_fu_617_p2.read().is_01() || !ap_const_lv64_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_225_fu_617_p2.read() != ap_const_lv64_0);
}

void challenge::thread_tmp_234_fu_534_p1() {
    tmp_234_fu_534_p1 = i_2_reg_251.read().range(3-1, 0);
}

void challenge::thread_tmp_235_fu_433_p1() {
    tmp_235_fu_433_p1 = i_i_reg_240.read().range(7-1, 0);
}

void challenge::thread_tmp_236_fu_437_p2() {
    tmp_236_fu_437_p2 = (!ap_const_lv8_1.is_01())? sc_lv<8>(): i_i_reg_240.read() << (unsigned short)ap_const_lv8_1.to_uint();
}

void challenge::thread_tmp_237_fu_486_p1() {
    tmp_237_fu_486_p1 = w1_vec_coeffs_q0.read().range(8-1, 0);
}

void challenge::thread_tmp_238_fu_443_p4() {
    tmp_238_fu_443_p4 = esl_concat<10,1>(esl_concat<3,7>(i_1_reg_228.read(), tmp_235_fu_433_p1.read()), ap_const_lv1_0);
}

void challenge::thread_tmp_239_fu_453_p1() {
    tmp_239_fu_453_p1 = esl_zext<64,11>(tmp_238_fu_443_p4.read());
}

void challenge::thread_tmp_240_fu_464_p3() {
    tmp_240_fu_464_p3 = esl_concat<3,8>(i_1_reg_228.read(), tmp_76_i_fu_458_p2.read());
}

void challenge::thread_tmp_241_fu_472_p1() {
    tmp_241_fu_472_p1 = esl_zext<64,11>(tmp_240_fu_464_p3.read());
}

void challenge::thread_tmp_242_fu_490_p1() {
    tmp_242_fu_490_p1 = w1_vec_coeffs_q1.read().range(4-1, 0);
}

void challenge::thread_tmp_318_cast_cast_ca_fu_646_p3() {
    tmp_318_cast_cast_ca_fu_646_p3 = (!tmp_226_reg_755.read()[0].is_01())? sc_lv<23>(): ((tmp_226_reg_755.read()[0].to_bool())? ap_const_lv23_7FE000: ap_const_lv23_1);
}

void challenge::thread_tmp_76_i_fu_458_p2() {
    tmp_76_i_fu_458_p2 = (tmp_236_fu_437_p2.read() | ap_const_lv8_1);
}

void challenge::thread_tmp_78_i_fu_502_p2() {
    tmp_78_i_fu_502_p2 = (tmp_11_i_fu_494_p3.read() | tmp_237_fu_486_p1.read());
}

void challenge::thread_tmp_79_i_cast_fu_477_p1() {
    tmp_79_i_cast_fu_477_p1 = esl_zext<11,8>(i_i_reg_240.read());
}

void challenge::thread_tmp_fu_361_p2() {
    tmp_fu_361_p2 = (!i_reg_216.read().is_01() || !ap_const_lv6_30.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_216.read() == ap_const_lv6_30);
}

void challenge::thread_tmp_i_fu_421_p2() {
    tmp_i_fu_421_p2 = (!i_i_reg_240.read().is_01() || !ap_const_lv8_80.is_01())? sc_lv<1>(): sc_lv<1>(i_i_reg_240.read() == ap_const_lv8_80);
}

void challenge::thread_tmp_s_fu_386_p1() {
    tmp_s_fu_386_p1 = esl_zext<64,6>(i_reg_216.read());
}

void challenge::thread_w1_vec_coeffs_address0() {
    w1_vec_coeffs_address0 =  (sc_lv<11>) (tmp_239_fu_453_p1.read());
}

void challenge::thread_w1_vec_coeffs_address1() {
    w1_vec_coeffs_address1 =  (sc_lv<11>) (tmp_241_fu_472_p1.read());
}

void challenge::thread_w1_vec_coeffs_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        w1_vec_coeffs_ce0 = ap_const_logic_1;
    } else {
        w1_vec_coeffs_ce0 = ap_const_logic_0;
    }
}

void challenge::thread_w1_vec_coeffs_ce1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        w1_vec_coeffs_ce1 = ap_const_logic_1;
    } else {
        w1_vec_coeffs_ce1 = ap_const_logic_0;
    }
}

void challenge::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(tmp_fu_361_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state2;
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(tmp_209_fu_391_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state7;
            }
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(tmp_i_fu_421_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 64 : 
            if ((esl_seteq<1,1,1>(grp_keccak_absorb_2_fu_345_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()))) {
                ap_NS_fsm = ap_ST_fsm_state8;
            } else {
                ap_NS_fsm = ap_ST_fsm_state7;
            }
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            if ((esl_seteq<1,1,1>(grp_keccak_squeezeblocks_2_fu_353_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
                ap_NS_fsm = ap_ST_fsm_state10;
            } else {
                ap_NS_fsm = ap_ST_fsm_state9;
            }
            break;
        case 512 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && esl_seteq<1,1,1>(tmp_212_fu_513_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state12;
            } else {
                ap_NS_fsm = ap_ST_fsm_state11;
            }
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 2048 : 
            if ((esl_seteq<1,1,1>(tmp_218_fu_562_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()))) {
                ap_NS_fsm = ap_ST_fsm_state13;
            } else {
                ap_NS_fsm = ap_ST_fsm_state12;
            }
            break;
        case 4096 : 
            if ((esl_seteq<1,1,1>(exitcond_fu_579_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state14;
            }
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 16384 : 
            if ((esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_state15_on_subcall_done.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()))) {
                ap_NS_fsm = ap_ST_fsm_state16;
            } else {
                ap_NS_fsm = ap_ST_fsm_state15;
            }
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state17;
            break;
        case 65536 : 
            if ((esl_seteq<1,1,1>(tmp_222_fu_606_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()))) {
                ap_NS_fsm = ap_ST_fsm_state18;
            } else {
                ap_NS_fsm = ap_ST_fsm_state14;
            }
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_state19;
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<19>) ("XXXXXXXXXXXXXXXXXXX");
            break;
    }
}

}

