#pragma line 1 "/home/dss545/vivado_hls/CRYSTALS-Dilithium/Reference_Implementation/Dilithium_recommended/poly.c"
#pragma line 1 "<built-in>"
#pragma line 1 "<command-line>"
#pragma line 1 "/home/dss545/vivado_hls/CRYSTALS-Dilithium/Reference_Implementation/Dilithium_recommended/poly.c"
#pragma line 1 "/opt/Xilinx2018/Vivado/2018.2/tps/lnx64/gcc-6.2.0/lib/gcc/x86_64-pc-linux-gnu/6.2.0/include/stdint.h" 1 3 4
#pragma line 9 "/opt/Xilinx2018/Vivado/2018.2/tps/lnx64/gcc-6.2.0/lib/gcc/x86_64-pc-linux-gnu/6.2.0/include/stdint.h" 3 4
#pragma line 1 "/usr/include/stdint.h" 1 3 4
#pragma line 26 "/usr/include/stdint.h" 3 4
#pragma line 1 "/usr/include/features.h" 1 3 4
#pragma line 361 "/usr/include/features.h" 3 4
#pragma line 1 "/usr/include/sys/cdefs.h" 1 3 4
#pragma line 373 "/usr/include/sys/cdefs.h" 3 4
#pragma line 1 "/usr/include/bits/wordsize.h" 1 3 4
#pragma line 374 "/usr/include/sys/cdefs.h" 2 3 4
#pragma line 362 "/usr/include/features.h" 2 3 4
#pragma line 385 "/usr/include/features.h" 3 4
#pragma line 1 "/usr/include/gnu/stubs.h" 1 3 4
#pragma empty_line
#pragma empty_line
#pragma empty_line
#pragma line 1 "/usr/include/bits/wordsize.h" 1 3 4
#pragma line 5 "/usr/include/gnu/stubs.h" 2 3 4
#pragma empty_line
#pragma empty_line
#pragma empty_line
#pragma empty_line
#pragma line 1 "/usr/include/gnu/stubs-64.h" 1 3 4
#pragma line 10 "/usr/include/gnu/stubs.h" 2 3 4
#pragma line 386 "/usr/include/features.h" 2 3 4
#pragma line 27 "/usr/include/stdint.h" 2 3 4
#pragma line 1 "/usr/include/bits/wchar.h" 1 3 4
#pragma line 28 "/usr/include/stdint.h" 2 3 4
#pragma line 1 "/usr/include/bits/wordsize.h" 1 3 4
#pragma line 29 "/usr/include/stdint.h" 2 3 4
#pragma line 37 "/usr/include/stdint.h" 3 4
#pragma empty_line
#pragma line 37 "/usr/include/stdint.h" 3 4
typedef signed char int8_t;
typedef short int int16_t;
typedef int int32_t;
#pragma empty_line
typedef long int int64_t;
#pragma empty_line
#pragma empty_line
#pragma empty_line
#pragma empty_line
#pragma empty_line
#pragma empty_line
#pragma empty_line
typedef unsigned char uint8_t;
typedef unsigned short int uint16_t;
#pragma empty_line
typedef unsigned int uint32_t;
#pragma empty_line
#pragma empty_line
#pragma empty_line
typedef unsigned long int uint64_t;
#pragma line 66 "/usr/include/stdint.h" 3 4
typedef signed char int_least8_t;
typedef short int int_least16_t;
typedef int int_least32_t;
#pragma empty_line
typedef long int int_least64_t;
#pragma empty_line
#pragma empty_line
#pragma empty_line
#pragma empty_line
#pragma empty_line
#pragma empty_line
typedef unsigned char uint_least8_t;
typedef unsigned short int uint_least16_t;
typedef unsigned int uint_least32_t;
#pragma empty_line
typedef unsigned long int uint_least64_t;
#pragma line 91 "/usr/include/stdint.h" 3 4
typedef signed char int_fast8_t;
#pragma empty_line
typedef long int int_fast16_t;
typedef long int int_fast32_t;
typedef long int int_fast64_t;
#pragma line 104 "/usr/include/stdint.h" 3 4
typedef unsigned char uint_fast8_t;
#pragma empty_line
typedef unsigned long int uint_fast16_t;
typedef unsigned long int uint_fast32_t;
typedef unsigned long int uint_fast64_t;
#pragma line 120 "/usr/include/stdint.h" 3 4
typedef long int intptr_t;
#pragma empty_line
#pragma empty_line
typedef unsigned long int uintptr_t;
#pragma line 135 "/usr/include/stdint.h" 3 4
typedef long int intmax_t;
typedef unsigned long int uintmax_t;
#pragma line 10 "/opt/Xilinx2018/Vivado/2018.2/tps/lnx64/gcc-6.2.0/lib/gcc/x86_64-pc-linux-gnu/6.2.0/include/stdint.h" 2 3 4
#pragma line 2 "/home/dss545/vivado_hls/CRYSTALS-Dilithium/Reference_Implementation/Dilithium_recommended/poly.c" 2
#pragma line 1 "/home/dss545/vivado_hls/CRYSTALS-Dilithium/Reference_Implementation/Dilithium_recommended/fips202.h" 1
#pragma line 9 "/home/dss545/vivado_hls/CRYSTALS-Dilithium/Reference_Implementation/Dilithium_recommended/fips202.h"
#pragma empty_line
#pragma line 9 "/home/dss545/vivado_hls/CRYSTALS-Dilithium/Reference_Implementation/Dilithium_recommended/fips202.h"
void shake128_absorb(uint64_t *s,
                     const unsigned char *input,
                     unsigned long long inlen);
#pragma empty_line
void shake128_squeezeblocks(unsigned char *output,
                            unsigned long nblocks,
                            uint64_t *s);
#pragma empty_line
void shake256_absorb(uint64_t *s,
                     const unsigned char *input,
                     unsigned long long inlen);
#pragma empty_line
void shake256_squeezeblocks(unsigned char *output,
                            unsigned long nblocks,
                            uint64_t *s);
#pragma empty_line
void shake128(unsigned char *output,
              unsigned long long outlen,
              const unsigned char *input,
              unsigned long long inlen);
#pragma empty_line
void shake256(unsigned char *output,
              unsigned long long outlen,
              const unsigned char *input,
              unsigned long long inlen);
#pragma line 3 "/home/dss545/vivado_hls/CRYSTALS-Dilithium/Reference_Implementation/Dilithium_recommended/poly.c" 2
#pragma line 1 "/home/dss545/vivado_hls/CRYSTALS-Dilithium/Reference_Implementation/Dilithium_recommended/params.h" 1
#pragma line 4 "/home/dss545/vivado_hls/CRYSTALS-Dilithium/Reference_Implementation/Dilithium_recommended/poly.c" 2
#pragma line 1 "/home/dss545/vivado_hls/CRYSTALS-Dilithium/Reference_Implementation/Dilithium_recommended/reduce.h" 1
#pragma line 10 "/home/dss545/vivado_hls/CRYSTALS-Dilithium/Reference_Implementation/Dilithium_recommended/reduce.h"
uint32_t montgomery_reduce(uint64_t a);
#pragma empty_line
#pragma empty_line
uint32_t reduce32(uint32_t a);
#pragma empty_line
#pragma empty_line
uint32_t freeze(uint32_t a);
#pragma line 5 "/home/dss545/vivado_hls/CRYSTALS-Dilithium/Reference_Implementation/Dilithium_recommended/poly.c" 2
#pragma line 1 "/home/dss545/vivado_hls/CRYSTALS-Dilithium/Reference_Implementation/Dilithium_recommended/ntt.h" 1
#pragma empty_line
#pragma empty_line
#pragma empty_line
#pragma empty_line
#pragma empty_line
void ntt(uint32_t *p);
void invntt_frominvmont(uint32_t *p);
#pragma line 6 "/home/dss545/vivado_hls/CRYSTALS-Dilithium/Reference_Implementation/Dilithium_recommended/poly.c" 2
#pragma line 1 "/home/dss545/vivado_hls/CRYSTALS-Dilithium/Reference_Implementation/Dilithium_recommended/poly.h" 1
#pragma empty_line
#pragma empty_line
#pragma empty_line
#pragma empty_line
#pragma empty_line
#pragma empty_line
#pragma empty_line
typedef struct {
  uint32_t coeffs[256U];
} poly __attribute__((aligned(32)));
#pragma empty_line
void poly_copy(poly *b, const poly *a);
void poly_freeze(poly *a);
#pragma empty_line
void poly_add(poly *c, const poly *a, const poly *b);
void poly_sub(poly *c, const poly *a, const poly *b);
void poly_neg(poly *a);
void poly_shiftl(poly *a, unsigned int k);
#pragma empty_line
void poly_ntt(poly *a);
void poly_invntt_montgomery(poly *a);
void poly_pointwise_invmontgomery(poly *c, const poly *a, const poly *b);
#pragma empty_line
int poly_chknorm(const poly *a, uint32_t B);
void poly_uniform(poly *a, unsigned char *buf);
void poly_uniform_eta(poly *a,
                      const unsigned char seed[32U],
                      unsigned char nonce);
void poly_uniform_gamma1m1(poly *a,
                           const unsigned char seed[32U + 48U],
                           uint16_t nonce);
#pragma empty_line
void polyeta_pack(unsigned char *r, const poly *a);
void polyeta_unpack(poly *r, const unsigned char *a);
#pragma empty_line
void polyt1_pack(unsigned char *r, const poly *a);
void polyt1_unpack(poly *r, const unsigned char *a);
#pragma empty_line
void polyt0_pack(unsigned char *r, const poly *a);
void polyt0_unpack(poly *r, const unsigned char *a);
#pragma empty_line
void polyz_pack(unsigned char *r, const poly *a);
void polyz_unpack(poly *r, const unsigned char *a);
#pragma empty_line
void polyw1_pack(unsigned char *r, const poly *a);
#pragma line 7 "/home/dss545/vivado_hls/CRYSTALS-Dilithium/Reference_Implementation/Dilithium_recommended/poly.c" 2
#pragma line 16 "/home/dss545/vivado_hls/CRYSTALS-Dilithium/Reference_Implementation/Dilithium_recommended/poly.c"
void poly_freeze(poly *a) {
  unsigned int i;
#pragma empty_line
  for(i = 0; i < 256U; ++i)
    a->coeffs[i] = freeze(a->coeffs[i]);
}
#pragma line 32 "/home/dss545/vivado_hls/CRYSTALS-Dilithium/Reference_Implementation/Dilithium_recommended/poly.c"
void poly_add(poly *c, const poly *a, const poly *b) {
  unsigned int i;
#pragma empty_line
  for(i = 0; i < 256U; ++i)
    c->coeffs[i] = a->coeffs[i] + b->coeffs[i];
}
#pragma line 50 "/home/dss545/vivado_hls/CRYSTALS-Dilithium/Reference_Implementation/Dilithium_recommended/poly.c"
void poly_sub(poly *c, const poly *a, const poly *b) {
  unsigned int i;
#pragma empty_line
  for(i = 0; i < 256U; ++i)
    c->coeffs[i] = a->coeffs[i] + 2*8380417U - b->coeffs[i];
}
#pragma line 65 "/home/dss545/vivado_hls/CRYSTALS-Dilithium/Reference_Implementation/Dilithium_recommended/poly.c"
void poly_neg(poly *a) {
  unsigned int i;
#pragma empty_line
  for(i = 0; i < 256U; ++i)
    a->coeffs[i] = 2*8380417U - a->coeffs[i];
}
#pragma line 80 "/home/dss545/vivado_hls/CRYSTALS-Dilithium/Reference_Implementation/Dilithium_recommended/poly.c"
void poly_shiftl(poly *a, unsigned int k) {
  unsigned int i;
#pragma empty_line
  for(i = 0; i < 256U; ++i)
    a->coeffs[i] <<= k;
}
#pragma line 94 "/home/dss545/vivado_hls/CRYSTALS-Dilithium/Reference_Implementation/Dilithium_recommended/poly.c"
void poly_ntt(poly *a) {
  ntt(a->coeffs);
}
#pragma line 105 "/home/dss545/vivado_hls/CRYSTALS-Dilithium/Reference_Implementation/Dilithium_recommended/poly.c"
void poly_invntt_montgomery(poly *a) {
  invntt_frominvmont(a->coeffs);
}
#pragma line 120 "/home/dss545/vivado_hls/CRYSTALS-Dilithium/Reference_Implementation/Dilithium_recommended/poly.c"
void poly_pointwise_invmontgomery(poly *c, const poly *a, const poly *b) {
  unsigned int i;
#pragma empty_line
  poly_pointwise_invmontgomery_label2:for(i = 0; i < 256U; ++i)
    c->coeffs[i] = montgomery_reduce((uint64_t)a->coeffs[i] * b->coeffs[i]);
}
#pragma line 138 "/home/dss545/vivado_hls/CRYSTALS-Dilithium/Reference_Implementation/Dilithium_recommended/poly.c"
int poly_chknorm(const poly *a, uint32_t B) {
  unsigned int i;
  int32_t t;
#pragma empty_line
#pragma empty_line
#pragma empty_line
#pragma empty_line
  for(i = 0; i < 256U; ++i) {
#pragma empty_line
    t = (8380417U -1)/2 - a->coeffs[i];
    t ^= (t >> 31);
    t = (8380417U -1)/2 - t;
#pragma empty_line
    if((uint32_t)t >= B)
      return 1;
  }
#pragma empty_line
  return 0;
}
#pragma line 168 "/home/dss545/vivado_hls/CRYSTALS-Dilithium/Reference_Implementation/Dilithium_recommended/poly.c"
void poly_uniform(poly *a, unsigned char *buf) {
  unsigned int ctr, pos;
  uint32_t t;
#pragma empty_line
  ctr = pos = 0;
  while(ctr < 256U) {
    t = buf[pos++];
    t |= (uint32_t)buf[pos++] << 8;
    t |= (uint32_t)buf[pos++] << 16;
    t &= 0x7FFFFF;
#pragma empty_line
    if(t < 8380417U)
      a->coeffs[ctr++] = t;
  }
}
#pragma line 198 "/home/dss545/vivado_hls/CRYSTALS-Dilithium/Reference_Implementation/Dilithium_recommended/poly.c"
static unsigned int rej_eta(uint32_t *a,
                            unsigned int len,
                            const unsigned char *buf,
                            unsigned int buflen)
{
#pragma empty_line
#pragma empty_line
#pragma empty_line
  unsigned int ctr, pos;
  unsigned char t0, t1;
#pragma empty_line
  ctr = pos = 0;
  while(ctr < len) {
#pragma empty_line
#pragma empty_line
#pragma empty_line
#pragma empty_line
    t0 = buf[pos] & 0x0F;
    t1 = buf[pos++] >> 4;
#pragma empty_line
#pragma empty_line
    if(t0 <= 2*5U)
      a[ctr++] = 8380417U + 5U - t0;
    if(t1 <= 2*5U && ctr < 256U)
      a[ctr++] = 8380417U + 5U - t1;
#pragma empty_line
    if(pos >= buflen)
      break;
  }
#pragma empty_line
  return ctr;
}
#pragma line 243 "/home/dss545/vivado_hls/CRYSTALS-Dilithium/Reference_Implementation/Dilithium_recommended/poly.c"
void poly_uniform_eta(poly *a,
                      const unsigned char seed[32U],
                      unsigned char nonce)
{
  unsigned int i, ctr;
  unsigned char inbuf[32U + 1];
#pragma empty_line
  unsigned char outbuf[2*136];
  uint64_t state[25];
#pragma empty_line
  for(i= 0; i < 32U; ++i)
    inbuf[i] = seed[i];
  inbuf[32U] = nonce;
#pragma empty_line
  shake256_absorb(state, inbuf, 32U + 1);
  shake256_squeezeblocks(outbuf, 2, state);
#pragma empty_line
  ctr = rej_eta(a->coeffs, 256U, outbuf, 2*136);
  if(ctr < 256U) {
    shake256_squeezeblocks(outbuf, 1, state);
    rej_eta(a->coeffs + ctr, 256U - ctr, outbuf, 136);
  }
}
#pragma line 282 "/home/dss545/vivado_hls/CRYSTALS-Dilithium/Reference_Implementation/Dilithium_recommended/poly.c"
static unsigned int rej_gamma1m1(uint32_t *a,
                                 unsigned int len,
                                 const unsigned char *buf,
                                 unsigned int buflen)
{
#pragma empty_line
#pragma empty_line
#pragma empty_line
  unsigned int ctr, pos;
  uint32_t t;
#pragma empty_line
  ctr = pos = 0;
  while(ctr < len) {
    t = buf[pos];
    t |= (uint32_t)buf[pos + 1] << 8;
    t |= (uint32_t)buf[pos + 2] << 16;
    t &= 0xFFFFF;
#pragma empty_line
    t = buf[pos + 2] >> 4;
    t |= (uint32_t)buf[pos + 3] << 4;
    t |= (uint32_t)buf[pos + 4] << 12;
#pragma empty_line
    pos += 5;
#pragma empty_line
    if(t <= 2*((8380417U - 1U)/16U) - 2)
      a[ctr++] = 8380417U + ((8380417U - 1U)/16U) - 1 - t;
    if(t <= 2*((8380417U - 1U)/16U) - 2 && ctr < len)
      a[ctr++] = 8380417U + ((8380417U - 1U)/16U) - 1 - t;
#pragma empty_line
    if(pos > buflen - 5)
      break;
  }
#pragma empty_line
  return ctr;
}
#pragma line 330 "/home/dss545/vivado_hls/CRYSTALS-Dilithium/Reference_Implementation/Dilithium_recommended/poly.c"
void poly_uniform_gamma1m1(poly *a,
                           const unsigned char seed[32U + 48U],
                           uint16_t nonce)
{
  unsigned int i, ctr;
  unsigned char inbuf[32U + 48U + 2];
#pragma empty_line
#pragma empty_line
  unsigned char outbuf[5*136];
  uint64_t state[25];
#pragma empty_line
  for(i = 0; i < 32U + 48U; ++i)
    inbuf[i] = seed[i];
  inbuf[32U + 48U] = nonce & 0xFF;
  inbuf[32U + 48U + 1] = nonce >> 8;
#pragma empty_line
  shake256_absorb(state, inbuf, 32U + 48U + 2);
  shake256_squeezeblocks(outbuf, 5, state);
#pragma empty_line
  ctr = rej_gamma1m1(a->coeffs, 256U, outbuf, 5*136);
  if(ctr < 256U) {
#pragma empty_line
#pragma empty_line
    shake256_squeezeblocks(outbuf, 1, state);
    rej_gamma1m1(a->coeffs + ctr, 256U - ctr, outbuf, 136);
  }
}
#pragma line 368 "/home/dss545/vivado_hls/CRYSTALS-Dilithium/Reference_Implementation/Dilithium_recommended/poly.c"
void polyeta_pack(unsigned char *r, const poly *a) {
#pragma empty_line
#pragma empty_line
#pragma empty_line
  unsigned int i;
  unsigned char t[8];
#pragma line 398 "/home/dss545/vivado_hls/CRYSTALS-Dilithium/Reference_Implementation/Dilithium_recommended/poly.c"
  for(i = 0; i < 256U/2; ++i) {
    t[0] = 8380417U + 5U - a->coeffs[2*i+0];
    t[1] = 8380417U + 5U - a->coeffs[2*i+1];
    r[i] = t[0] | (t[1] << 4);
  }
#pragma empty_line
}
#pragma line 416 "/home/dss545/vivado_hls/CRYSTALS-Dilithium/Reference_Implementation/Dilithium_recommended/poly.c"
void polyeta_unpack(poly *r, const unsigned char *a) {
  unsigned int i;
#pragma line 440 "/home/dss545/vivado_hls/CRYSTALS-Dilithium/Reference_Implementation/Dilithium_recommended/poly.c"
  for(i = 0; i < 256U/2; ++i) {
    r->coeffs[2*i+0] = a[i] & 0x0F;
    r->coeffs[2*i+1] = a[i] >> 4;
    r->coeffs[2*i+0] = 8380417U + 5U - r->coeffs[2*i+0];
    r->coeffs[2*i+1] = 8380417U + 5U - r->coeffs[2*i+1];
  }
#pragma empty_line
}
#pragma line 459 "/home/dss545/vivado_hls/CRYSTALS-Dilithium/Reference_Implementation/Dilithium_recommended/poly.c"
void polyt1_pack(unsigned char *r, const poly *a) {
#pragma empty_line
#pragma empty_line
#pragma empty_line
  unsigned int i;
#pragma empty_line
  for(i = 0; i < 256U/8; ++i) {
    r[9*i+0] = a->coeffs[8*i+0] & 0xFF;
    r[9*i+1] = (a->coeffs[8*i+0] >> 8) | ((a->coeffs[8*i+1] & 0x7F) << 1);
    r[9*i+2] = (a->coeffs[8*i+1] >> 7) | ((a->coeffs[8*i+2] & 0x3F) << 2);
    r[9*i+3] = (a->coeffs[8*i+2] >> 6) | ((a->coeffs[8*i+3] & 0x1F) << 3);
    r[9*i+4] = (a->coeffs[8*i+3] >> 5) | ((a->coeffs[8*i+4] & 0x0F) << 4);
    r[9*i+5] = (a->coeffs[8*i+4] >> 4) | ((a->coeffs[8*i+5] & 0x07) << 5);
    r[9*i+6] = (a->coeffs[8*i+5] >> 3) | ((a->coeffs[8*i+6] & 0x03) << 6);
    r[9*i+7] = (a->coeffs[8*i+6] >> 2) | ((a->coeffs[8*i+7] & 0x01) << 7);
    r[9*i+8] = a->coeffs[8*i+7] >> 1;
  }
}
#pragma line 487 "/home/dss545/vivado_hls/CRYSTALS-Dilithium/Reference_Implementation/Dilithium_recommended/poly.c"
void polyt1_unpack(poly *r, const unsigned char *a) {
  unsigned int i;
#pragma empty_line
  for(i = 0; i < 256U/8; ++i) {
    r->coeffs[8*i+0] = a[9*i+0] | ((uint32_t)(a[9*i+1] & 0x01) << 8);
    r->coeffs[8*i+1] = (a[9*i+1] >> 1) | ((uint32_t)(a[9*i+2] & 0x03) << 7);
    r->coeffs[8*i+2] = (a[9*i+2] >> 2) | ((uint32_t)(a[9*i+3] & 0x07) << 6);
    r->coeffs[8*i+3] = (a[9*i+3] >> 3) | ((uint32_t)(a[9*i+4] & 0x0F) << 5);
    r->coeffs[8*i+4] = (a[9*i+4] >> 4) | ((uint32_t)(a[9*i+5] & 0x1F) << 4);
    r->coeffs[8*i+5] = (a[9*i+5] >> 5) | ((uint32_t)(a[9*i+6] & 0x3F) << 3);
    r->coeffs[8*i+6] = (a[9*i+6] >> 6) | ((uint32_t)(a[9*i+7] & 0x7F) << 2);
    r->coeffs[8*i+7] = (a[9*i+7] >> 7) | ((uint32_t)(a[9*i+8] & 0xFF) << 1);
  }
}
#pragma line 512 "/home/dss545/vivado_hls/CRYSTALS-Dilithium/Reference_Implementation/Dilithium_recommended/poly.c"
void polyt0_pack(unsigned char *r, const poly *a) {
  unsigned int i;
  uint32_t t[4];
#pragma empty_line
  for(i = 0; i < 256U/4; ++i) {
    t[0] = 8380417U + (1 << (14U -1)) - a->coeffs[4*i+0];
    t[1] = 8380417U + (1 << (14U -1)) - a->coeffs[4*i+1];
    t[2] = 8380417U + (1 << (14U -1)) - a->coeffs[4*i+2];
    t[3] = 8380417U + (1 << (14U -1)) - a->coeffs[4*i+3];
#pragma empty_line
    r[7*i+0] = t[0];
    r[7*i+1] = t[0] >> 8;
    r[7*i+1] |= t[1] << 6;
    r[7*i+2] = t[1] >> 2;
    r[7*i+3] = t[1] >> 10;
    r[7*i+3] |= t[2] << 4;
    r[7*i+4] = t[2] >> 4;
    r[7*i+5] = t[2] >> 12;
    r[7*i+5] |= t[3] << 2;
    r[7*i+6] = t[3] >> 6;
  }
}
#pragma line 545 "/home/dss545/vivado_hls/CRYSTALS-Dilithium/Reference_Implementation/Dilithium_recommended/poly.c"
void polyt0_unpack(poly *r, const unsigned char *a) {
  unsigned int i;
#pragma empty_line
  for(i = 0; i < 256U/4; ++i) {
    r->coeffs[4*i+0] = a[7*i+0];
    r->coeffs[4*i+0] |= (uint32_t)(a[7*i+1] & 0x3F) << 8;
#pragma empty_line
    r->coeffs[4*i+1] = a[7*i+1] >> 6;
    r->coeffs[4*i+1] |= (uint32_t)a[7*i+2] << 2;
    r->coeffs[4*i+1] |= (uint32_t)(a[7*i+3] & 0x0F) << 10;
#pragma empty_line
    r->coeffs[4*i+2] = a[7*i+3] >> 4;
    r->coeffs[4*i+2] |= (uint32_t)a[7*i+4] << 4;
    r->coeffs[4*i+2] |= (uint32_t)(a[7*i+5] & 0x03) << 12;
#pragma empty_line
    r->coeffs[4*i+3] = a[7*i+5] >> 2;
    r->coeffs[4*i+3] |= (uint32_t)a[7*i+6] << 6;
#pragma empty_line
    r->coeffs[4*i+0] = 8380417U + (1 << (14U -1)) - r->coeffs[4*i+0];
    r->coeffs[4*i+1] = 8380417U + (1 << (14U -1)) - r->coeffs[4*i+1];
    r->coeffs[4*i+2] = 8380417U + (1 << (14U -1)) - r->coeffs[4*i+2];
    r->coeffs[4*i+3] = 8380417U + (1 << (14U -1)) - r->coeffs[4*i+3];
  }
}
#pragma line 581 "/home/dss545/vivado_hls/CRYSTALS-Dilithium/Reference_Implementation/Dilithium_recommended/poly.c"
void polyz_pack(unsigned char *r, const poly *a) {
#pragma empty_line
#pragma empty_line
#pragma empty_line
  unsigned int i;
  uint32_t t[2];
#pragma empty_line
  for(i = 0; i < 256U/2; ++i) {
#pragma empty_line
    t[0] = ((8380417U - 1U)/16U) - 1 - a->coeffs[2*i+0];
    t[0] += ((int32_t)t[0] >> 31) & 8380417U;
    t[1] = ((8380417U - 1U)/16U) - 1 - a->coeffs[2*i+1];
    t[1] += ((int32_t)t[1] >> 31) & 8380417U;
#pragma empty_line
    r[5*i+0] = t[0];
    r[5*i+1] = t[0] >> 8;
    r[5*i+2] = t[0] >> 16;
    r[5*i+2] |= t[1] << 4;
    r[5*i+3] = t[1] >> 4;
    r[5*i+4] = t[1] >> 12;
  }
}
#pragma line 615 "/home/dss545/vivado_hls/CRYSTALS-Dilithium/Reference_Implementation/Dilithium_recommended/poly.c"
void polyz_unpack(poly *r, const unsigned char *a) {
  unsigned int i;
#pragma empty_line
  for(i = 0; i < 256U/2; ++i) {
    r->coeffs[2*i+0] = a[5*i+0];
    r->coeffs[2*i+0] |= (uint32_t)a[5*i+1] << 8;
    r->coeffs[2*i+0] |= (uint32_t)(a[5*i+2] & 0x0F) << 16;
#pragma empty_line
    r->coeffs[2*i+1] = a[5*i+2] >> 4;
    r->coeffs[2*i+1] |= (uint32_t)a[5*i+3] << 4;
    r->coeffs[2*i+1] |= (uint32_t)a[5*i+4] << 12;
#pragma empty_line
    r->coeffs[2*i+0] = ((8380417U - 1U)/16U) - 1 - r->coeffs[2*i+0];
    r->coeffs[2*i+0] += ((int32_t)r->coeffs[2*i+0] >> 31) & 8380417U;
    r->coeffs[2*i+1] = ((8380417U - 1U)/16U) - 1 - r->coeffs[2*i+1];
    r->coeffs[2*i+1] += ((int32_t)r->coeffs[2*i+1] >> 31) & 8380417U;
  }
}
#pragma line 644 "/home/dss545/vivado_hls/CRYSTALS-Dilithium/Reference_Implementation/Dilithium_recommended/poly.c"
void polyw1_pack(unsigned char *r, const poly *a) {
  unsigned int i;
#pragma empty_line
  for(i = 0; i < 256U/2; ++i)
    r[i] = a->coeffs[2*i+0] | (a->coeffs[2*i+1] << 4);
}