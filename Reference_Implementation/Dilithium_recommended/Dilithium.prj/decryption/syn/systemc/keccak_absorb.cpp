// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "keccak_absorb.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic keccak_absorb::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic keccak_absorb::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<17> keccak_absorb::ap_ST_fsm_state1 = "1";
const sc_lv<17> keccak_absorb::ap_ST_fsm_state2 = "10";
const sc_lv<17> keccak_absorb::ap_ST_fsm_state3 = "100";
const sc_lv<17> keccak_absorb::ap_ST_fsm_state4 = "1000";
const sc_lv<17> keccak_absorb::ap_ST_fsm_state5 = "10000";
const sc_lv<17> keccak_absorb::ap_ST_fsm_state6 = "100000";
const sc_lv<17> keccak_absorb::ap_ST_fsm_state7 = "1000000";
const sc_lv<17> keccak_absorb::ap_ST_fsm_state8 = "10000000";
const sc_lv<17> keccak_absorb::ap_ST_fsm_state9 = "100000000";
const sc_lv<17> keccak_absorb::ap_ST_fsm_state10 = "1000000000";
const sc_lv<17> keccak_absorb::ap_ST_fsm_state11 = "10000000000";
const sc_lv<17> keccak_absorb::ap_ST_fsm_state12 = "100000000000";
const sc_lv<17> keccak_absorb::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<17> keccak_absorb::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<17> keccak_absorb::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<17> keccak_absorb::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<17> keccak_absorb::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<32> keccak_absorb::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> keccak_absorb::ap_const_lv32_1 = "1";
const sc_lv<1> keccak_absorb::ap_const_lv1_1 = "1";
const sc_lv<32> keccak_absorb::ap_const_lv32_2 = "10";
const sc_lv<1> keccak_absorb::ap_const_lv1_0 = "0";
const sc_lv<32> keccak_absorb::ap_const_lv32_3 = "11";
const sc_lv<32> keccak_absorb::ap_const_lv32_4 = "100";
const sc_lv<32> keccak_absorb::ap_const_lv32_5 = "101";
const sc_lv<32> keccak_absorb::ap_const_lv32_7 = "111";
const sc_lv<32> keccak_absorb::ap_const_lv32_8 = "1000";
const sc_lv<32> keccak_absorb::ap_const_lv32_9 = "1001";
const sc_lv<32> keccak_absorb::ap_const_lv32_B = "1011";
const sc_lv<32> keccak_absorb::ap_const_lv32_D = "1101";
const sc_lv<32> keccak_absorb::ap_const_lv32_E = "1110";
const sc_lv<32> keccak_absorb::ap_const_lv32_F = "1111";
const sc_lv<5> keccak_absorb::ap_const_lv5_0 = "00000";
const sc_lv<64> keccak_absorb::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<32> keccak_absorb::ap_const_lv32_6 = "110";
const sc_lv<4> keccak_absorb::ap_const_lv4_0 = "0000";
const sc_lv<8> keccak_absorb::ap_const_lv8_0 = "00000000";
const sc_lv<32> keccak_absorb::ap_const_lv32_A = "1010";
const sc_lv<32> keccak_absorb::ap_const_lv32_C = "1100";
const sc_lv<32> keccak_absorb::ap_const_lv32_10 = "10000";
const sc_lv<64> keccak_absorb::ap_const_lv64_87 = "10000111";
const sc_lv<8> keccak_absorb::ap_const_lv8_1F = "11111";
const sc_lv<5> keccak_absorb::ap_const_lv5_19 = "11001";
const sc_lv<5> keccak_absorb::ap_const_lv5_1 = "1";
const sc_lv<64> keccak_absorb::ap_const_lv64_88 = "10001000";
const sc_lv<5> keccak_absorb::ap_const_lv5_11 = "10001";
const sc_lv<3> keccak_absorb::ap_const_lv3_0 = "000";
const sc_lv<4> keccak_absorb::ap_const_lv4_8 = "1000";
const sc_lv<4> keccak_absorb::ap_const_lv4_1 = "1";
const sc_lv<64> keccak_absorb::ap_const_lv64_FFFFFFFFFFFFFF78 = "1111111111111111111111111111111111111111111111111111111101111000";
const sc_lv<32> keccak_absorb::ap_const_lv32_FFFFFF78 = "11111111111111111111111101111000";
const sc_lv<8> keccak_absorb::ap_const_lv8_88 = "10001000";
const sc_lv<8> keccak_absorb::ap_const_lv8_1 = "1";
const sc_lv<8> keccak_absorb::ap_const_lv8_80 = "10000000";
const bool keccak_absorb::ap_const_boolean_1 = true;

keccak_absorb::keccak_absorb(sc_module_name name) : sc_module(name), mVcdFile(0) {
    t_U = new keccak_absorb_t("t_U");
    t_U->clk(ap_clk);
    t_U->reset(ap_rst);
    t_U->address0(t_address0);
    t_U->ce0(t_ce0);
    t_U->we0(t_we0);
    t_U->d0(t_d0);
    t_U->q0(t_q0);
    grp_KeccakF1600_StatePer_fu_314 = new KeccakF1600_StatePer("grp_KeccakF1600_StatePer_fu_314");
    grp_KeccakF1600_StatePer_fu_314->ap_clk(ap_clk);
    grp_KeccakF1600_StatePer_fu_314->ap_rst(ap_rst);
    grp_KeccakF1600_StatePer_fu_314->ap_start(grp_KeccakF1600_StatePer_fu_314_ap_start);
    grp_KeccakF1600_StatePer_fu_314->ap_done(grp_KeccakF1600_StatePer_fu_314_ap_done);
    grp_KeccakF1600_StatePer_fu_314->ap_idle(grp_KeccakF1600_StatePer_fu_314_ap_idle);
    grp_KeccakF1600_StatePer_fu_314->ap_ready(grp_KeccakF1600_StatePer_fu_314_ap_ready);
    grp_KeccakF1600_StatePer_fu_314->state_address0(grp_KeccakF1600_StatePer_fu_314_state_address0);
    grp_KeccakF1600_StatePer_fu_314->state_ce0(grp_KeccakF1600_StatePer_fu_314_state_ce0);
    grp_KeccakF1600_StatePer_fu_314->state_we0(grp_KeccakF1600_StatePer_fu_314_state_we0);
    grp_KeccakF1600_StatePer_fu_314->state_d0(grp_KeccakF1600_StatePer_fu_314_state_d0);
    grp_KeccakF1600_StatePer_fu_314->state_q0(s_q0);
    grp_KeccakF1600_StatePer_fu_314->state_address1(grp_KeccakF1600_StatePer_fu_314_state_address1);
    grp_KeccakF1600_StatePer_fu_314->state_ce1(grp_KeccakF1600_StatePer_fu_314_state_ce1);
    grp_KeccakF1600_StatePer_fu_314->state_we1(grp_KeccakF1600_StatePer_fu_314_state_we1);
    grp_KeccakF1600_StatePer_fu_314->state_d1(grp_KeccakF1600_StatePer_fu_314_state_d1);
    grp_KeccakF1600_StatePer_fu_314->state_q1(s_q1);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state17);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( exitcond4_fu_538_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( exitcond4_fu_538_p2 );

    SC_METHOD(thread_exitcond3_fu_357_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( i_1_reg_220 );

    SC_METHOD(thread_exitcond4_fu_538_p2);
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( i_4_reg_278 );

    SC_METHOD(thread_exitcond_fu_474_p2);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( i_2_reg_256 );

    SC_METHOD(thread_grp_KeccakF1600_StatePer_fu_314_ap_start);
    sensitive << ( grp_KeccakF1600_StatePer_fu_314_ap_start_reg );

    SC_METHOD(thread_i_25_fu_328_p2);
    sensitive << ( i_reg_177 );

    SC_METHOD(thread_i_27_fu_480_p2);
    sensitive << ( i_2_reg_256 );

    SC_METHOD(thread_i_28_fu_389_p2);
    sensitive << ( i_i_reg_232 );

    SC_METHOD(thread_i_29_fu_544_p2);
    sensitive << ( i_4_reg_278 );

    SC_METHOD(thread_i_6_fu_363_p2);
    sensitive << ( i_1_reg_220 );

    SC_METHOD(thread_i_7_fu_564_p2);
    sensitive << ( i_i1_reg_290 );

    SC_METHOD(thread_indvars_iv_next_fu_468_p2);
    sensitive << ( i_26_reg_188 );

    SC_METHOD(thread_m_address0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( sum_i_cast_fu_413_p1 );
    sensitive << ( sum2_cast_fu_521_p1 );

    SC_METHOD(thread_m_ce0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_mlen_assign_fu_462_p2);
    sensitive << ( p_0_reg_210 );

    SC_METHOD(thread_p_rec_fu_377_p2);
    sensitive << ( p_01_rec_reg_198 );

    SC_METHOD(thread_r_1_fu_615_p2);
    sensitive << ( r_i2_reg_302 );
    sensitive << ( tmp_192_i1_fu_609_p2 );

    SC_METHOD(thread_r_fu_449_p2);
    sensitive << ( r_i_reg_244 );
    sensitive << ( tmp_192_i_fu_443_p2 );

    SC_METHOD(thread_s_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( s_addr_2_reg_697 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( s_addr_3_reg_774 );
    sensitive << ( grp_KeccakF1600_StatePer_fu_314_state_address0 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( tmp_s_fu_334_p1 );
    sensitive << ( tmp_116_fu_418_p1 );
    sensitive << ( tmp_119_fu_584_p1 );

    SC_METHOD(thread_s_address1);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( grp_KeccakF1600_StatePer_fu_314_state_address1 );

    SC_METHOD(thread_s_ce0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( grp_KeccakF1600_StatePer_fu_314_state_ce0 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state17 );

    SC_METHOD(thread_s_ce1);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( grp_KeccakF1600_StatePer_fu_314_state_ce1 );

    SC_METHOD(thread_s_d0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( grp_KeccakF1600_StatePer_fu_314_state_d0 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( tmp_117_fu_455_p2 );
    sensitive << ( tmp_120_fu_621_p2 );

    SC_METHOD(thread_s_d1);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( grp_KeccakF1600_StatePer_fu_314_state_d1 );

    SC_METHOD(thread_s_we0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_fu_322_p2 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( grp_KeccakF1600_StatePer_fu_314_state_we0 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state17 );

    SC_METHOD(thread_s_we1);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( grp_KeccakF1600_StatePer_fu_314_state_we1 );

    SC_METHOD(thread_sum2_cast_fu_521_p1);
    sensitive << ( sum2_fu_516_p2 );

    SC_METHOD(thread_sum2_fu_516_p2);
    sensitive << ( m_offset );
    sensitive << ( tmp3_fu_511_p2 );

    SC_METHOD(thread_sum_i5_cast_fu_579_p1);
    sensitive << ( sum_i5_fu_574_p2 );

    SC_METHOD(thread_sum_i5_fu_574_p2);
    sensitive << ( tmp_118_reg_756 );
    sensitive << ( tmp_i4_cast_fu_570_p1 );

    SC_METHOD(thread_sum_i_cast_fu_413_p1);
    sensitive << ( sum_i_fu_408_p2 );

    SC_METHOD(thread_sum_i_fu_408_p2);
    sensitive << ( tmp1_reg_661 );
    sensitive << ( tmp2_cast_fu_404_p1 );

    SC_METHOD(thread_t_addr_4_reg_743);
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_t_address0);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( tmp_111_reg_725 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( t_addr_4_reg_743 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( tmp_109_fu_486_p1 );
    sensitive << ( tmp_114_fu_526_p1 );
    sensitive << ( sum_i5_cast_fu_579_p1 );

    SC_METHOD(thread_t_ce0);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_t_d0);
    sensitive << ( m_q0 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( tmp_115_fu_531_p2 );

    SC_METHOD(thread_t_we0);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( tmp_112_fu_499_p2 );
    sensitive << ( exitcond_fu_474_p2 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_tmp1_fu_352_p2);
    sensitive << ( m_offset );
    sensitive << ( tmp_123_fu_342_p1 );

    SC_METHOD(thread_tmp2_cast_fu_404_p1);
    sensitive << ( tmp2_fu_399_p2 );

    SC_METHOD(thread_tmp2_fu_399_p2);
    sensitive << ( tmp_110_reg_674 );
    sensitive << ( tmp_i_cast_fu_395_p1 );

    SC_METHOD(thread_tmp3_fu_511_p2);
    sensitive << ( tmp_123_reg_653 );
    sensitive << ( tmp_171_cast_fu_495_p1 );

    SC_METHOD(thread_tmp_108_fu_346_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( p_0_reg_210 );

    SC_METHOD(thread_tmp_109_fu_486_p1);
    sensitive << ( i_2_reg_256 );

    SC_METHOD(thread_tmp_110_fu_369_p3);
    sensitive << ( i_1_reg_220 );

    SC_METHOD(thread_tmp_111_fu_491_p1);
    sensitive << ( i_3_reg_267 );

    SC_METHOD(thread_tmp_112_fu_499_p2);
    sensitive << ( tmp_111_fu_491_p1 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( p_0_reg_210 );

    SC_METHOD(thread_tmp_113_fu_505_p2);
    sensitive << ( i_3_reg_267 );

    SC_METHOD(thread_tmp_114_fu_526_p1);
    sensitive << ( i_26_reg_188 );

    SC_METHOD(thread_tmp_115_fu_531_p2);
    sensitive << ( t_q0 );

    SC_METHOD(thread_tmp_116_fu_418_p1);
    sensitive << ( i_1_reg_220 );

    SC_METHOD(thread_tmp_117_fu_455_p2);
    sensitive << ( s_q0 );
    sensitive << ( r_i_reg_244 );

    SC_METHOD(thread_tmp_118_fu_550_p3);
    sensitive << ( i_4_reg_278 );

    SC_METHOD(thread_tmp_119_fu_584_p1);
    sensitive << ( i_4_reg_278 );

    SC_METHOD(thread_tmp_120_fu_621_p2);
    sensitive << ( s_q0 );
    sensitive << ( r_i2_reg_302 );

    SC_METHOD(thread_tmp_122_fu_339_p1);
    sensitive << ( mlen );

    SC_METHOD(thread_tmp_123_fu_342_p1);
    sensitive << ( p_01_rec_reg_198 );

    SC_METHOD(thread_tmp_124_fu_427_p1);
    sensitive << ( i_i_reg_232 );

    SC_METHOD(thread_tmp_125_fu_593_p1);
    sensitive << ( i_i1_reg_290 );

    SC_METHOD(thread_tmp_171_cast_fu_495_p1);
    sensitive << ( i_3_reg_267 );

    SC_METHOD(thread_tmp_189_i8_fu_589_p1);
    sensitive << ( t_q0 );

    SC_METHOD(thread_tmp_189_i_fu_423_p1);
    sensitive << ( m_q0 );

    SC_METHOD(thread_tmp_190_i9_fu_597_p3);
    sensitive << ( tmp_125_fu_593_p1 );

    SC_METHOD(thread_tmp_190_i_fu_431_p3);
    sensitive << ( tmp_124_fu_427_p1 );

    SC_METHOD(thread_tmp_191_i1_fu_605_p1);
    sensitive << ( tmp_190_i9_fu_597_p3 );

    SC_METHOD(thread_tmp_191_i_fu_439_p1);
    sensitive << ( tmp_190_i_fu_431_p3 );

    SC_METHOD(thread_tmp_192_i1_fu_609_p2);
    sensitive << ( tmp_189_i8_fu_589_p1 );
    sensitive << ( tmp_191_i1_fu_605_p1 );

    SC_METHOD(thread_tmp_192_i_fu_443_p2);
    sensitive << ( tmp_189_i_fu_423_p1 );
    sensitive << ( tmp_191_i_fu_439_p1 );

    SC_METHOD(thread_tmp_fu_322_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_reg_177 );

    SC_METHOD(thread_tmp_i3_fu_558_p2);
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( i_i1_reg_290 );

    SC_METHOD(thread_tmp_i4_cast_fu_570_p1);
    sensitive << ( i_i1_reg_290 );

    SC_METHOD(thread_tmp_i_cast_fu_395_p1);
    sensitive << ( i_i_reg_232 );

    SC_METHOD(thread_tmp_i_fu_383_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( i_i_reg_232 );

    SC_METHOD(thread_tmp_s_fu_334_p1);
    sensitive << ( i_reg_177 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_fu_322_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_108_fu_346_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( exitcond3_fu_357_p2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_i_fu_383_p2 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( grp_KeccakF1600_StatePer_fu_314_ap_done );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( tmp_112_fu_499_p2 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( exitcond4_fu_538_p2 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( tmp_i3_fu_558_p2 );
    sensitive << ( exitcond_fu_474_p2 );

    ap_CS_fsm = "00000000000000001";
    grp_KeccakF1600_StatePer_fu_314_ap_start_reg = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "keccak_absorb_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, s_address0, "(port)s_address0");
    sc_trace(mVcdFile, s_ce0, "(port)s_ce0");
    sc_trace(mVcdFile, s_we0, "(port)s_we0");
    sc_trace(mVcdFile, s_d0, "(port)s_d0");
    sc_trace(mVcdFile, s_q0, "(port)s_q0");
    sc_trace(mVcdFile, s_address1, "(port)s_address1");
    sc_trace(mVcdFile, s_ce1, "(port)s_ce1");
    sc_trace(mVcdFile, s_we1, "(port)s_we1");
    sc_trace(mVcdFile, s_d1, "(port)s_d1");
    sc_trace(mVcdFile, s_q1, "(port)s_q1");
    sc_trace(mVcdFile, m_address0, "(port)m_address0");
    sc_trace(mVcdFile, m_ce0, "(port)m_ce0");
    sc_trace(mVcdFile, m_q0, "(port)m_q0");
    sc_trace(mVcdFile, m_offset, "(port)m_offset");
    sc_trace(mVcdFile, mlen, "(port)mlen");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, i_25_fu_328_p2, "i_25_fu_328_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, tmp_122_fu_339_p1, "tmp_122_fu_339_p1");
    sc_trace(mVcdFile, tmp_fu_322_p2, "tmp_fu_322_p2");
    sc_trace(mVcdFile, tmp_123_fu_342_p1, "tmp_123_fu_342_p1");
    sc_trace(mVcdFile, tmp_123_reg_653, "tmp_123_reg_653");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, tmp1_fu_352_p2, "tmp1_fu_352_p2");
    sc_trace(mVcdFile, tmp1_reg_661, "tmp1_reg_661");
    sc_trace(mVcdFile, tmp_108_fu_346_p2, "tmp_108_fu_346_p2");
    sc_trace(mVcdFile, i_6_fu_363_p2, "i_6_fu_363_p2");
    sc_trace(mVcdFile, i_6_reg_669, "i_6_reg_669");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, tmp_110_fu_369_p3, "tmp_110_fu_369_p3");
    sc_trace(mVcdFile, tmp_110_reg_674, "tmp_110_reg_674");
    sc_trace(mVcdFile, exitcond3_fu_357_p2, "exitcond3_fu_357_p2");
    sc_trace(mVcdFile, p_rec_fu_377_p2, "p_rec_fu_377_p2");
    sc_trace(mVcdFile, p_rec_reg_679, "p_rec_reg_679");
    sc_trace(mVcdFile, i_28_fu_389_p2, "i_28_fu_389_p2");
    sc_trace(mVcdFile, i_28_reg_687, "i_28_reg_687");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, tmp_i_fu_383_p2, "tmp_i_fu_383_p2");
    sc_trace(mVcdFile, s_addr_2_reg_697, "s_addr_2_reg_697");
    sc_trace(mVcdFile, r_fu_449_p2, "r_fu_449_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, mlen_assign_fu_462_p2, "mlen_assign_fu_462_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_fu_314_ap_idle, "grp_KeccakF1600_StatePer_fu_314_ap_idle");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_fu_314_ap_ready, "grp_KeccakF1600_StatePer_fu_314_ap_ready");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_fu_314_ap_done, "grp_KeccakF1600_StatePer_fu_314_ap_done");
    sc_trace(mVcdFile, indvars_iv_next_fu_468_p2, "indvars_iv_next_fu_468_p2");
    sc_trace(mVcdFile, i_27_fu_480_p2, "i_27_fu_480_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, tmp_111_fu_491_p1, "tmp_111_fu_491_p1");
    sc_trace(mVcdFile, tmp_111_reg_725, "tmp_111_reg_725");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, tmp_113_fu_505_p2, "tmp_113_fu_505_p2");
    sc_trace(mVcdFile, tmp_113_reg_733, "tmp_113_reg_733");
    sc_trace(mVcdFile, tmp_112_fu_499_p2, "tmp_112_fu_499_p2");
    sc_trace(mVcdFile, t_addr_4_reg_743, "t_addr_4_reg_743");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, i_29_fu_544_p2, "i_29_fu_544_p2");
    sc_trace(mVcdFile, i_29_reg_751, "i_29_reg_751");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, tmp_118_fu_550_p3, "tmp_118_fu_550_p3");
    sc_trace(mVcdFile, tmp_118_reg_756, "tmp_118_reg_756");
    sc_trace(mVcdFile, exitcond4_fu_538_p2, "exitcond4_fu_538_p2");
    sc_trace(mVcdFile, i_7_fu_564_p2, "i_7_fu_564_p2");
    sc_trace(mVcdFile, i_7_reg_764, "i_7_reg_764");
    sc_trace(mVcdFile, ap_CS_fsm_state15, "ap_CS_fsm_state15");
    sc_trace(mVcdFile, tmp_i3_fu_558_p2, "tmp_i3_fu_558_p2");
    sc_trace(mVcdFile, s_addr_3_reg_774, "s_addr_3_reg_774");
    sc_trace(mVcdFile, r_1_fu_615_p2, "r_1_fu_615_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, t_address0, "t_address0");
    sc_trace(mVcdFile, t_ce0, "t_ce0");
    sc_trace(mVcdFile, t_we0, "t_we0");
    sc_trace(mVcdFile, t_d0, "t_d0");
    sc_trace(mVcdFile, t_q0, "t_q0");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_fu_314_ap_start, "grp_KeccakF1600_StatePer_fu_314_ap_start");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_fu_314_state_address0, "grp_KeccakF1600_StatePer_fu_314_state_address0");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_fu_314_state_ce0, "grp_KeccakF1600_StatePer_fu_314_state_ce0");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_fu_314_state_we0, "grp_KeccakF1600_StatePer_fu_314_state_we0");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_fu_314_state_d0, "grp_KeccakF1600_StatePer_fu_314_state_d0");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_fu_314_state_address1, "grp_KeccakF1600_StatePer_fu_314_state_address1");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_fu_314_state_ce1, "grp_KeccakF1600_StatePer_fu_314_state_ce1");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_fu_314_state_we1, "grp_KeccakF1600_StatePer_fu_314_state_we1");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_fu_314_state_d1, "grp_KeccakF1600_StatePer_fu_314_state_d1");
    sc_trace(mVcdFile, i_reg_177, "i_reg_177");
    sc_trace(mVcdFile, i_26_reg_188, "i_26_reg_188");
    sc_trace(mVcdFile, p_01_rec_reg_198, "p_01_rec_reg_198");
    sc_trace(mVcdFile, p_0_reg_210, "p_0_reg_210");
    sc_trace(mVcdFile, i_1_reg_220, "i_1_reg_220");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, i_i_reg_232, "i_i_reg_232");
    sc_trace(mVcdFile, r_i_reg_244, "r_i_reg_244");
    sc_trace(mVcdFile, i_2_reg_256, "i_2_reg_256");
    sc_trace(mVcdFile, exitcond_fu_474_p2, "exitcond_fu_474_p2");
    sc_trace(mVcdFile, i_3_reg_267, "i_3_reg_267");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, i_4_reg_278, "i_4_reg_278");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, ap_CS_fsm_state17, "ap_CS_fsm_state17");
    sc_trace(mVcdFile, i_i1_reg_290, "i_i1_reg_290");
    sc_trace(mVcdFile, r_i2_reg_302, "r_i2_reg_302");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_fu_314_ap_start_reg, "grp_KeccakF1600_StatePer_fu_314_ap_start_reg");
    sc_trace(mVcdFile, tmp_s_fu_334_p1, "tmp_s_fu_334_p1");
    sc_trace(mVcdFile, sum_i_cast_fu_413_p1, "sum_i_cast_fu_413_p1");
    sc_trace(mVcdFile, tmp_116_fu_418_p1, "tmp_116_fu_418_p1");
    sc_trace(mVcdFile, tmp_109_fu_486_p1, "tmp_109_fu_486_p1");
    sc_trace(mVcdFile, sum2_cast_fu_521_p1, "sum2_cast_fu_521_p1");
    sc_trace(mVcdFile, tmp_114_fu_526_p1, "tmp_114_fu_526_p1");
    sc_trace(mVcdFile, sum_i5_cast_fu_579_p1, "sum_i5_cast_fu_579_p1");
    sc_trace(mVcdFile, tmp_119_fu_584_p1, "tmp_119_fu_584_p1");
    sc_trace(mVcdFile, tmp_117_fu_455_p2, "tmp_117_fu_455_p2");
    sc_trace(mVcdFile, tmp_120_fu_621_p2, "tmp_120_fu_621_p2");
    sc_trace(mVcdFile, tmp_115_fu_531_p2, "tmp_115_fu_531_p2");
    sc_trace(mVcdFile, tmp_i_cast_fu_395_p1, "tmp_i_cast_fu_395_p1");
    sc_trace(mVcdFile, tmp2_fu_399_p2, "tmp2_fu_399_p2");
    sc_trace(mVcdFile, tmp2_cast_fu_404_p1, "tmp2_cast_fu_404_p1");
    sc_trace(mVcdFile, sum_i_fu_408_p2, "sum_i_fu_408_p2");
    sc_trace(mVcdFile, tmp_124_fu_427_p1, "tmp_124_fu_427_p1");
    sc_trace(mVcdFile, tmp_190_i_fu_431_p3, "tmp_190_i_fu_431_p3");
    sc_trace(mVcdFile, tmp_189_i_fu_423_p1, "tmp_189_i_fu_423_p1");
    sc_trace(mVcdFile, tmp_191_i_fu_439_p1, "tmp_191_i_fu_439_p1");
    sc_trace(mVcdFile, tmp_192_i_fu_443_p2, "tmp_192_i_fu_443_p2");
    sc_trace(mVcdFile, tmp_171_cast_fu_495_p1, "tmp_171_cast_fu_495_p1");
    sc_trace(mVcdFile, tmp3_fu_511_p2, "tmp3_fu_511_p2");
    sc_trace(mVcdFile, sum2_fu_516_p2, "sum2_fu_516_p2");
    sc_trace(mVcdFile, tmp_i4_cast_fu_570_p1, "tmp_i4_cast_fu_570_p1");
    sc_trace(mVcdFile, sum_i5_fu_574_p2, "sum_i5_fu_574_p2");
    sc_trace(mVcdFile, tmp_125_fu_593_p1, "tmp_125_fu_593_p1");
    sc_trace(mVcdFile, tmp_190_i9_fu_597_p3, "tmp_190_i9_fu_597_p3");
    sc_trace(mVcdFile, tmp_189_i8_fu_589_p1, "tmp_189_i8_fu_589_p1");
    sc_trace(mVcdFile, tmp_191_i1_fu_605_p1, "tmp_191_i1_fu_605_p1");
    sc_trace(mVcdFile, tmp_192_i1_fu_609_p2, "tmp_192_i1_fu_609_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

keccak_absorb::~keccak_absorb() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete t_U;
    delete grp_KeccakF1600_StatePer_fu_314;
}

void keccak_absorb::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_KeccakF1600_StatePer_fu_314_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(exitcond3_fu_357_p2.read(), ap_const_lv1_1) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
            grp_KeccakF1600_StatePer_fu_314_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_KeccakF1600_StatePer_fu_314_ap_ready.read())) {
            grp_KeccakF1600_StatePer_fu_314_ap_start_reg = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(tmp_108_fu_346_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        i_1_reg_220 = ap_const_lv5_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        i_1_reg_220 = i_6_reg_669.read();
    }
    if ((esl_seteq<1,1,1>(tmp_fu_322_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        i_26_reg_188 = tmp_122_fu_339_p1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
                esl_seteq<1,1,1>(grp_KeccakF1600_StatePer_fu_314_ap_done.read(), ap_const_logic_1))) {
        i_26_reg_188 = indvars_iv_next_fu_468_p2.read();
    }
    if ((esl_seteq<1,1,1>(tmp_108_fu_346_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        i_2_reg_256 = ap_const_lv8_0;
    } else if ((esl_seteq<1,1,1>(exitcond_fu_474_p2.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
        i_2_reg_256 = i_27_fu_480_p2.read();
    }
    if ((esl_seteq<1,1,1>(exitcond_fu_474_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
        i_3_reg_267 = ap_const_lv8_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        i_3_reg_267 = tmp_113_reg_733.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        i_4_reg_278 = i_29_reg_751.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        i_4_reg_278 = ap_const_lv5_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        i_i1_reg_290 = i_7_reg_764.read();
    } else if ((esl_seteq<1,1,1>(exitcond4_fu_538_p2.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()))) {
        i_i1_reg_290 = ap_const_lv4_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        i_i_reg_232 = i_28_reg_687.read();
    } else if ((esl_seteq<1,1,1>(exitcond3_fu_357_p2.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        i_i_reg_232 = ap_const_lv4_0;
    }
    if ((esl_seteq<1,1,1>(tmp_fu_322_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        i_reg_177 = i_25_fu_328_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        i_reg_177 = ap_const_lv5_0;
    }
    if ((esl_seteq<1,1,1>(tmp_fu_322_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        p_01_rec_reg_198 = ap_const_lv64_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
                esl_seteq<1,1,1>(grp_KeccakF1600_StatePer_fu_314_ap_done.read(), ap_const_logic_1))) {
        p_01_rec_reg_198 = p_rec_reg_679.read();
    }
    if ((esl_seteq<1,1,1>(tmp_fu_322_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        p_0_reg_210 = mlen.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
                esl_seteq<1,1,1>(grp_KeccakF1600_StatePer_fu_314_ap_done.read(), ap_const_logic_1))) {
        p_0_reg_210 = mlen_assign_fu_462_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        r_i2_reg_302 = r_1_fu_615_p2.read();
    } else if ((esl_seteq<1,1,1>(exitcond4_fu_538_p2.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()))) {
        r_i2_reg_302 = ap_const_lv64_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        r_i_reg_244 = r_fu_449_p2.read();
    } else if ((esl_seteq<1,1,1>(exitcond3_fu_357_p2.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        r_i_reg_244 = ap_const_lv64_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        i_28_reg_687 = i_28_fu_389_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        i_29_reg_751 = i_29_fu_544_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        i_6_reg_669 = i_6_fu_363_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        i_7_reg_764 = i_7_fu_564_p2.read();
    }
    if ((esl_seteq<1,1,1>(exitcond3_fu_357_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        p_rec_reg_679 = p_rec_fu_377_p2.read();
    }
    if ((esl_seteq<1,1,1>(tmp_i_fu_383_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()))) {
        s_addr_2_reg_697 =  (sc_lv<5>) (tmp_116_fu_418_p1.read());
    }
    if ((esl_seteq<1,1,1>(tmp_i3_fu_558_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()))) {
        s_addr_3_reg_774 =  (sc_lv<5>) (tmp_119_fu_584_p1.read());
    }
    if ((esl_seteq<1,1,1>(tmp_108_fu_346_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        tmp1_reg_661 = tmp1_fu_352_p2.read();
    }
    if ((esl_seteq<1,1,1>(exitcond3_fu_357_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        tmp_110_reg_674 = tmp_110_fu_369_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        tmp_111_reg_725 = tmp_111_fu_491_p1.read();
        tmp_113_reg_733 = tmp_113_fu_505_p2.read();
    }
    if ((esl_seteq<1,1,1>(exitcond4_fu_538_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()))) {
        tmp_118_reg_756 = tmp_118_fu_550_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        tmp_123_reg_653 = tmp_123_fu_342_p1.read();
    }
}

void keccak_absorb::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void keccak_absorb::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void keccak_absorb::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void keccak_absorb::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void keccak_absorb::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void keccak_absorb::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[13];
}

void keccak_absorb::thread_ap_CS_fsm_state15() {
    ap_CS_fsm_state15 = ap_CS_fsm.read()[14];
}

void keccak_absorb::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read()[15];
}

void keccak_absorb::thread_ap_CS_fsm_state17() {
    ap_CS_fsm_state17 = ap_CS_fsm.read()[16];
}

void keccak_absorb::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void keccak_absorb::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void keccak_absorb::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void keccak_absorb::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void keccak_absorb::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void keccak_absorb::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void keccak_absorb::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void keccak_absorb::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void keccak_absorb::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(exitcond4_fu_538_p2.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void keccak_absorb::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void keccak_absorb::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(exitcond4_fu_538_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void keccak_absorb::thread_exitcond3_fu_357_p2() {
    exitcond3_fu_357_p2 = (!i_1_reg_220.read().is_01() || !ap_const_lv5_11.is_01())? sc_lv<1>(): sc_lv<1>(i_1_reg_220.read() == ap_const_lv5_11);
}

void keccak_absorb::thread_exitcond4_fu_538_p2() {
    exitcond4_fu_538_p2 = (!i_4_reg_278.read().is_01() || !ap_const_lv5_11.is_01())? sc_lv<1>(): sc_lv<1>(i_4_reg_278.read() == ap_const_lv5_11);
}

void keccak_absorb::thread_exitcond_fu_474_p2() {
    exitcond_fu_474_p2 = (!i_2_reg_256.read().is_01() || !ap_const_lv8_88.is_01())? sc_lv<1>(): sc_lv<1>(i_2_reg_256.read() == ap_const_lv8_88);
}

void keccak_absorb::thread_grp_KeccakF1600_StatePer_fu_314_ap_start() {
    grp_KeccakF1600_StatePer_fu_314_ap_start = grp_KeccakF1600_StatePer_fu_314_ap_start_reg.read();
}

void keccak_absorb::thread_i_25_fu_328_p2() {
    i_25_fu_328_p2 = (!i_reg_177.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(i_reg_177.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void keccak_absorb::thread_i_27_fu_480_p2() {
    i_27_fu_480_p2 = (!i_2_reg_256.read().is_01() || !ap_const_lv8_1.is_01())? sc_lv<8>(): (sc_biguint<8>(i_2_reg_256.read()) + sc_biguint<8>(ap_const_lv8_1));
}

void keccak_absorb::thread_i_28_fu_389_p2() {
    i_28_fu_389_p2 = (!i_i_reg_232.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(i_i_reg_232.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void keccak_absorb::thread_i_29_fu_544_p2() {
    i_29_fu_544_p2 = (!i_4_reg_278.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(i_4_reg_278.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void keccak_absorb::thread_i_6_fu_363_p2() {
    i_6_fu_363_p2 = (!i_1_reg_220.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(i_1_reg_220.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void keccak_absorb::thread_i_7_fu_564_p2() {
    i_7_fu_564_p2 = (!i_i1_reg_290.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(i_i1_reg_290.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void keccak_absorb::thread_indvars_iv_next_fu_468_p2() {
    indvars_iv_next_fu_468_p2 = (!i_26_reg_188.read().is_01() || !ap_const_lv32_FFFFFF78.is_01())? sc_lv<32>(): (sc_biguint<32>(i_26_reg_188.read()) + sc_bigint<32>(ap_const_lv32_FFFFFF78));
}

void keccak_absorb::thread_m_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        m_address0 =  (sc_lv<12>) (sum2_cast_fu_521_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        m_address0 =  (sc_lv<12>) (sum_i_cast_fu_413_p1.read());
    } else {
        m_address0 = "XXXXXXXXXXXX";
    }
}

void keccak_absorb::thread_m_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()))) {
        m_ce0 = ap_const_logic_1;
    } else {
        m_ce0 = ap_const_logic_0;
    }
}

void keccak_absorb::thread_mlen_assign_fu_462_p2() {
    mlen_assign_fu_462_p2 = (!p_0_reg_210.read().is_01() || !ap_const_lv64_FFFFFFFFFFFFFF78.is_01())? sc_lv<64>(): (sc_biguint<64>(p_0_reg_210.read()) + sc_bigint<64>(ap_const_lv64_FFFFFFFFFFFFFF78));
}

void keccak_absorb::thread_p_rec_fu_377_p2() {
    p_rec_fu_377_p2 = (!p_01_rec_reg_198.read().is_01() || !ap_const_lv64_88.is_01())? sc_lv<64>(): (sc_biguint<64>(p_01_rec_reg_198.read()) + sc_biguint<64>(ap_const_lv64_88));
}

void keccak_absorb::thread_r_1_fu_615_p2() {
    r_1_fu_615_p2 = (tmp_192_i1_fu_609_p2.read() | r_i2_reg_302.read());
}

void keccak_absorb::thread_r_fu_449_p2() {
    r_fu_449_p2 = (tmp_192_i_fu_443_p2.read() | r_i_reg_244.read());
}

void keccak_absorb::thread_s_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        s_address0 = s_addr_3_reg_774.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        s_address0 =  (sc_lv<5>) (tmp_119_fu_584_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        s_address0 = s_addr_2_reg_697.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        s_address0 =  (sc_lv<5>) (tmp_116_fu_418_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        s_address0 =  (sc_lv<5>) (tmp_s_fu_334_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        s_address0 = grp_KeccakF1600_StatePer_fu_314_state_address0.read();
    } else {
        s_address0 =  (sc_lv<5>) ("XXXXX");
    }
}

void keccak_absorb::thread_s_address1() {
    s_address1 = grp_KeccakF1600_StatePer_fu_314_state_address1.read();
}

void keccak_absorb::thread_s_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()))) {
        s_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        s_ce0 = grp_KeccakF1600_StatePer_fu_314_state_ce0.read();
    } else {
        s_ce0 = ap_const_logic_0;
    }
}

void keccak_absorb::thread_s_ce1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        s_ce1 = grp_KeccakF1600_StatePer_fu_314_state_ce1.read();
    } else {
        s_ce1 = ap_const_logic_0;
    }
}

void keccak_absorb::thread_s_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        s_d0 = tmp_120_fu_621_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        s_d0 = tmp_117_fu_455_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        s_d0 = ap_const_lv64_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        s_d0 = grp_KeccakF1600_StatePer_fu_314_state_d0.read();
    } else {
        s_d0 =  (sc_lv<64>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void keccak_absorb::thread_s_d1() {
    s_d1 = grp_KeccakF1600_StatePer_fu_314_state_d1.read();
}

void keccak_absorb::thread_s_we0() {
    if (((esl_seteq<1,1,1>(tmp_fu_322_p2.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()))) {
        s_we0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        s_we0 = grp_KeccakF1600_StatePer_fu_314_state_we0.read();
    } else {
        s_we0 = ap_const_logic_0;
    }
}

void keccak_absorb::thread_s_we1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        s_we1 = grp_KeccakF1600_StatePer_fu_314_state_we1.read();
    } else {
        s_we1 = ap_const_logic_0;
    }
}

void keccak_absorb::thread_sum2_cast_fu_521_p1() {
    sum2_cast_fu_521_p1 = esl_zext<64,13>(sum2_fu_516_p2.read());
}

void keccak_absorb::thread_sum2_fu_516_p2() {
    sum2_fu_516_p2 = (!tmp3_fu_511_p2.read().is_01() || !m_offset.read().is_01())? sc_lv<13>(): (sc_biguint<13>(tmp3_fu_511_p2.read()) + sc_biguint<13>(m_offset.read()));
}

void keccak_absorb::thread_sum_i5_cast_fu_579_p1() {
    sum_i5_cast_fu_579_p1 = esl_zext<64,8>(sum_i5_fu_574_p2.read());
}

void keccak_absorb::thread_sum_i5_fu_574_p2() {
    sum_i5_fu_574_p2 = (!tmp_118_reg_756.read().is_01() || !tmp_i4_cast_fu_570_p1.read().is_01())? sc_lv<8>(): (sc_biguint<8>(tmp_118_reg_756.read()) + sc_biguint<8>(tmp_i4_cast_fu_570_p1.read()));
}

void keccak_absorb::thread_sum_i_cast_fu_413_p1() {
    sum_i_cast_fu_413_p1 = esl_zext<64,13>(sum_i_fu_408_p2.read());
}

void keccak_absorb::thread_sum_i_fu_408_p2() {
    sum_i_fu_408_p2 = (!tmp1_reg_661.read().is_01() || !tmp2_cast_fu_404_p1.read().is_01())? sc_lv<13>(): (sc_biguint<13>(tmp1_reg_661.read()) + sc_biguint<13>(tmp2_cast_fu_404_p1.read()));
}

void keccak_absorb::thread_t_addr_4_reg_743() {
    t_addr_4_reg_743 =  (sc_lv<8>) (ap_const_lv64_87);
}

void keccak_absorb::thread_t_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        t_address0 =  (sc_lv<8>) (sum_i5_cast_fu_579_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        t_address0 = t_addr_4_reg_743.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        t_address0 =  (sc_lv<8>) (ap_const_lv64_87);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        t_address0 =  (sc_lv<8>) (tmp_111_reg_725.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        t_address0 =  (sc_lv<8>) (tmp_114_fu_526_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        t_address0 =  (sc_lv<8>) (tmp_109_fu_486_p1.read());
    } else {
        t_address0 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void keccak_absorb::thread_t_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()))) {
        t_ce0 = ap_const_logic_1;
    } else {
        t_ce0 = ap_const_logic_0;
    }
}

void keccak_absorb::thread_t_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        t_d0 = tmp_115_fu_531_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        t_d0 = m_q0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        t_d0 = ap_const_lv8_1F;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        t_d0 = ap_const_lv8_0;
    } else {
        t_d0 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void keccak_absorb::thread_t_we0() {
    if (((esl_seteq<1,1,1>(exitcond_fu_474_p2.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         (esl_seteq<1,1,1>(tmp_112_fu_499_p2.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())))) {
        t_we0 = ap_const_logic_1;
    } else {
        t_we0 = ap_const_logic_0;
    }
}

void keccak_absorb::thread_tmp1_fu_352_p2() {
    tmp1_fu_352_p2 = (!tmp_123_fu_342_p1.read().is_01() || !m_offset.read().is_01())? sc_lv<13>(): (sc_biguint<13>(tmp_123_fu_342_p1.read()) + sc_biguint<13>(m_offset.read()));
}

void keccak_absorb::thread_tmp2_cast_fu_404_p1() {
    tmp2_cast_fu_404_p1 = esl_zext<13,8>(tmp2_fu_399_p2.read());
}

void keccak_absorb::thread_tmp2_fu_399_p2() {
    tmp2_fu_399_p2 = (!tmp_i_cast_fu_395_p1.read().is_01() || !tmp_110_reg_674.read().is_01())? sc_lv<8>(): (sc_biguint<8>(tmp_i_cast_fu_395_p1.read()) + sc_biguint<8>(tmp_110_reg_674.read()));
}

void keccak_absorb::thread_tmp3_fu_511_p2() {
    tmp3_fu_511_p2 = (!tmp_123_reg_653.read().is_01() || !tmp_171_cast_fu_495_p1.read().is_01())? sc_lv<13>(): (sc_biguint<13>(tmp_123_reg_653.read()) + sc_biguint<13>(tmp_171_cast_fu_495_p1.read()));
}

void keccak_absorb::thread_tmp_108_fu_346_p2() {
    tmp_108_fu_346_p2 = (!p_0_reg_210.read().is_01() || !ap_const_lv64_88.is_01())? sc_lv<1>(): (sc_biguint<64>(p_0_reg_210.read()) < sc_biguint<64>(ap_const_lv64_88));
}

void keccak_absorb::thread_tmp_109_fu_486_p1() {
    tmp_109_fu_486_p1 = esl_zext<64,8>(i_2_reg_256.read());
}

void keccak_absorb::thread_tmp_110_fu_369_p3() {
    tmp_110_fu_369_p3 = esl_concat<5,3>(i_1_reg_220.read(), ap_const_lv3_0);
}

void keccak_absorb::thread_tmp_111_fu_491_p1() {
    tmp_111_fu_491_p1 = esl_zext<64,8>(i_3_reg_267.read());
}

void keccak_absorb::thread_tmp_112_fu_499_p2() {
    tmp_112_fu_499_p2 = (!tmp_111_fu_491_p1.read().is_01() || !p_0_reg_210.read().is_01())? sc_lv<1>(): (sc_biguint<64>(tmp_111_fu_491_p1.read()) < sc_biguint<64>(p_0_reg_210.read()));
}

void keccak_absorb::thread_tmp_113_fu_505_p2() {
    tmp_113_fu_505_p2 = (!i_3_reg_267.read().is_01() || !ap_const_lv8_1.is_01())? sc_lv<8>(): (sc_biguint<8>(i_3_reg_267.read()) + sc_biguint<8>(ap_const_lv8_1));
}

void keccak_absorb::thread_tmp_114_fu_526_p1() {
    tmp_114_fu_526_p1 = esl_zext<64,32>(i_26_reg_188.read());
}

void keccak_absorb::thread_tmp_115_fu_531_p2() {
    tmp_115_fu_531_p2 = (t_q0.read() | ap_const_lv8_80);
}

void keccak_absorb::thread_tmp_116_fu_418_p1() {
    tmp_116_fu_418_p1 = esl_zext<64,5>(i_1_reg_220.read());
}

void keccak_absorb::thread_tmp_117_fu_455_p2() {
    tmp_117_fu_455_p2 = (s_q0.read() ^ r_i_reg_244.read());
}

void keccak_absorb::thread_tmp_118_fu_550_p3() {
    tmp_118_fu_550_p3 = esl_concat<5,3>(i_4_reg_278.read(), ap_const_lv3_0);
}

void keccak_absorb::thread_tmp_119_fu_584_p1() {
    tmp_119_fu_584_p1 = esl_zext<64,5>(i_4_reg_278.read());
}

void keccak_absorb::thread_tmp_120_fu_621_p2() {
    tmp_120_fu_621_p2 = (s_q0.read() ^ r_i2_reg_302.read());
}

void keccak_absorb::thread_tmp_122_fu_339_p1() {
    tmp_122_fu_339_p1 = mlen.read().range(32-1, 0);
}

void keccak_absorb::thread_tmp_123_fu_342_p1() {
    tmp_123_fu_342_p1 = p_01_rec_reg_198.read().range(13-1, 0);
}

void keccak_absorb::thread_tmp_124_fu_427_p1() {
    tmp_124_fu_427_p1 = i_i_reg_232.read().range(3-1, 0);
}

void keccak_absorb::thread_tmp_125_fu_593_p1() {
    tmp_125_fu_593_p1 = i_i1_reg_290.read().range(3-1, 0);
}

void keccak_absorb::thread_tmp_171_cast_fu_495_p1() {
    tmp_171_cast_fu_495_p1 = esl_zext<13,8>(i_3_reg_267.read());
}

void keccak_absorb::thread_tmp_189_i8_fu_589_p1() {
    tmp_189_i8_fu_589_p1 = esl_zext<64,8>(t_q0.read());
}

void keccak_absorb::thread_tmp_189_i_fu_423_p1() {
    tmp_189_i_fu_423_p1 = esl_zext<64,8>(m_q0.read());
}

void keccak_absorb::thread_tmp_190_i9_fu_597_p3() {
    tmp_190_i9_fu_597_p3 = esl_concat<3,3>(tmp_125_fu_593_p1.read(), ap_const_lv3_0);
}

void keccak_absorb::thread_tmp_190_i_fu_431_p3() {
    tmp_190_i_fu_431_p3 = esl_concat<3,3>(tmp_124_fu_427_p1.read(), ap_const_lv3_0);
}

void keccak_absorb::thread_tmp_191_i1_fu_605_p1() {
    tmp_191_i1_fu_605_p1 = esl_zext<64,6>(tmp_190_i9_fu_597_p3.read());
}

void keccak_absorb::thread_tmp_191_i_fu_439_p1() {
    tmp_191_i_fu_439_p1 = esl_zext<64,6>(tmp_190_i_fu_431_p3.read());
}

void keccak_absorb::thread_tmp_192_i1_fu_609_p2() {
    tmp_192_i1_fu_609_p2 = (!tmp_191_i1_fu_605_p1.read().is_01())? sc_lv<64>(): tmp_189_i8_fu_589_p1.read() << (unsigned short)tmp_191_i1_fu_605_p1.read().to_uint();
}

void keccak_absorb::thread_tmp_192_i_fu_443_p2() {
    tmp_192_i_fu_443_p2 = (!tmp_191_i_fu_439_p1.read().is_01())? sc_lv<64>(): tmp_189_i_fu_423_p1.read() << (unsigned short)tmp_191_i_fu_439_p1.read().to_uint();
}

void keccak_absorb::thread_tmp_fu_322_p2() {
    tmp_fu_322_p2 = (!i_reg_177.read().is_01() || !ap_const_lv5_19.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_177.read() == ap_const_lv5_19);
}

void keccak_absorb::thread_tmp_i3_fu_558_p2() {
    tmp_i3_fu_558_p2 = (!i_i1_reg_290.read().is_01() || !ap_const_lv4_8.is_01())? sc_lv<1>(): sc_lv<1>(i_i1_reg_290.read() == ap_const_lv4_8);
}

void keccak_absorb::thread_tmp_i4_cast_fu_570_p1() {
    tmp_i4_cast_fu_570_p1 = esl_zext<8,4>(i_i1_reg_290.read());
}

void keccak_absorb::thread_tmp_i_cast_fu_395_p1() {
    tmp_i_cast_fu_395_p1 = esl_zext<8,4>(i_i_reg_232.read());
}

void keccak_absorb::thread_tmp_i_fu_383_p2() {
    tmp_i_fu_383_p2 = (!i_i_reg_232.read().is_01() || !ap_const_lv4_8.is_01())? sc_lv<1>(): sc_lv<1>(i_i_reg_232.read() == ap_const_lv4_8);
}

void keccak_absorb::thread_tmp_s_fu_334_p1() {
    tmp_s_fu_334_p1 = esl_zext<64,5>(i_reg_177.read());
}

void keccak_absorb::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(tmp_fu_322_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(tmp_108_fu_346_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
                ap_NS_fsm = ap_ST_fsm_state9;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(exitcond3_fu_357_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state8;
            }
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(tmp_i_fu_383_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()))) {
                ap_NS_fsm = ap_ST_fsm_state7;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 128 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && esl_seteq<1,1,1>(grp_KeccakF1600_StatePer_fu_314_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state8;
            }
            break;
        case 256 : 
            if ((esl_seteq<1,1,1>(exitcond_fu_474_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
                ap_NS_fsm = ap_ST_fsm_state10;
            } else {
                ap_NS_fsm = ap_ST_fsm_state9;
            }
            break;
        case 512 : 
            if ((esl_seteq<1,1,1>(tmp_112_fu_499_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()))) {
                ap_NS_fsm = ap_ST_fsm_state12;
            } else {
                ap_NS_fsm = ap_ST_fsm_state11;
            }
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            if ((esl_seteq<1,1,1>(exitcond4_fu_538_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state15;
            }
            break;
        case 16384 : 
            if ((esl_seteq<1,1,1>(tmp_i3_fu_558_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()))) {
                ap_NS_fsm = ap_ST_fsm_state17;
            } else {
                ap_NS_fsm = ap_ST_fsm_state16;
            }
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<17>) ("XXXXXXXXXXXXXXXXX");
            break;
    }
}

}

