-- ==============================================================
-- File generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ==============================================================

library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity invntt_frominvmoneOg_rom is 
    generic(
             DWIDTH     : integer := 23; 
             AWIDTH     : integer := 8; 
             MEM_SIZE    : integer := 256
    ); 
    port (
          addr0      : in std_logic_vector(AWIDTH-1 downto 0); 
          ce0       : in std_logic; 
          q0         : out std_logic_vector(DWIDTH-1 downto 0);
          clk       : in std_logic
    ); 
end entity; 


architecture rtl of invntt_frominvmoneOg_rom is 

signal addr0_tmp : std_logic_vector(AWIDTH-1 downto 0); 
type mem_array is array (0 to MEM_SIZE-1) of std_logic_vector (DWIDTH-1 downto 0); 
signal mem : mem_array := (
    0 => "11000011011011000110011", 1 => "00011001110100101001010", 
    2 => "11010101000000110011001", 3 => "10000111100101000110111", 
    4 => "00101001100100100100001", 5 => "00000001011110010110010", 
    6 => "10001000001000011010101", 7 => "00010000111010110110000", 
    8 => "01101100001101001010111", 9 => "11001110100001111010111", 
    10 => "00011101110011111111011", 11 => "11111010001001101101110", 
    12 => "01000101110001011110111", 13 => "00001100110110000100011", 
    14 => "01000100001111001010001", 15 => "01011001101100010011100", 
    16 => "01110101000000000100101", 17 => "00000111111101000100110", 
    18 => "00100001101100111001101", 19 => "00110010111000101101000", 
    20 => "11000101011100110011001", 21 => "00110111000001101010010", 
    22 => "11001011001001100110001", 23 => "00001101000001010111011", 
    24 => "11110001010101111110011", 25 => "11001011010101000011010", 
    26 => "00011101110010000001100", 27 => "10111100001101100001010", 
    28 => "11110111100001001000001", 29 => "10001001101111011101100", 
    30 => "10010100001101011001000", 31 => "01011100101111011000100", 
    32 => "00110110111001111000011", 33 => "01110000101111010011001", 
    34 => "11001101010100001100111", 35 => "11100111000001101011100", 
    36 => "10100011110001010010000", 37 => "11001110011010111111001", 
    38 => "11111010110001111100101", 39 => "01100001001001101000010", 
    40 => "00100100110110001011001", 41 => "11111010000101101000110", 
    42 => "10011000111011101101001", 43 => "11000100000001001101001", 
    44 => "00000101000001101110001", 45 => "10110100110110001001010", 
    46 => "10110101100001001110110", 47 => "00111101011100110101000", 
    48 => "01110011010000111100001", 49 => "11101101100111100101001", 
    50 => "01110001101001111101110", 51 => "01001110110111011100101", 
    52 => "00111000010111010101001", 53 => "00110011000000000001000", 
    54 => "01010110011010111110100", 55 => "00010000100011011001100", 
    56 => "10010111110011100110010", 57 => "10111011100001000011001", 
    58 => "11101000000010000011010", 59 => "11010001111101111111100", 
    60 => "00101001111101001010011", 61 => "01001101101101010001000", 
    62 => "11000101001111101101000", 63 => "00100111000011010101101", 
    64 => "00111011111001010010010", 65 => "10011010110110101111110", 
    66 => "11010111101100100111010", 67 => "00001101110001000011100", 
    68 => "00101011101001011010001", 69 => "01100101010000111000010", 
    70 => "11011001111111011100110", 71 => "00101000101011101000010", 
    72 => "00100000000100101011010", 73 => "11000101101010010110110", 
    74 => "11000110101101011000010", 75 => "01011011010111101110111", 
    76 => "01101100010010001110000", 77 => "10101111010011101110000", 
    78 => "11011001100101101000011", 79 => "01110010111101011101000", 
    80 => "11001111000010110111011", 81 => "10110011110111110110000", 
    82 => "11011001101011001111101", 83 => "10000011111111011100101", 
    84 => "11011001001001010010000", 85 => "01001111000010111000110", 
    86 => "10101101100111001101000", 87 => "10101001000000100011100", 
    88 => "11111001100011011011101", 89 => "11001010110001100111010", 
    90 => "01100101111111111000101", 91 => "10010110110110100011010", 
    92 => "10000010010111111100110", 93 => "01001010011001010111111", 
    94 => "11110110111111011110101", 95 => "11110101010011011101000", 
    96 => "01101101101111000111110", 97 => "00010111011101001101110", 
    98 => "00010000000001100101010", 99 => "01101100100011010000011", 
    100 => "10011101111000001111011", 101 => "11000001101111101111101", 
    102 => "01011111010010100001010", 103 => "00010011111111111011111", 
    104 => "00001111111100100000100", 105 => "00000001010100011111100", 
    106 => "00110001001110101110110", 107 => "11110000101000001111110", 
    108 => "11100110110000010100111", 109 => "11100011111111100011011", 
    110 => "11000111000000111100111", 111 => "11100100010000110100011", 
    112 => "01100001011101000100010", 113 => "00100100100010010101010", 
    114 => "01110010101110100000100", 115 => "01101011011011101100000", 
    116 => "10010100100010010100100", 117 => "00100101101101100010000", 
    118 => "10110101011101001111010", 119 => "11110111100110100001100", 
    120 => "01101100101101111011110", 121 => "01001010101010001100001", 
    122 => "10111011010001000000110", 123 => "01100110000000010001110", 
    124 => "10001011001111000001001", 125 => "10111001000011100101101", 
    126 => "10010111110000010100111", 127 => "10111111111010101101110", 
    128 => "10001010100100000101000", 129 => "01101110101111110101001", 
    130 => "01110110011100001100100", 131 => "01011100001000101011110", 
    132 => "00101011111011111111110", 133 => "00011000110011010111100", 
    134 => "00110000010111100100000", 135 => "11011000100000111011100", 
    136 => "11010110110100001101111", 137 => "11010111100110011111100", 
    138 => "00000101011010100100000", 139 => "01001001100001101101101", 
    140 => "00111000100000000001010", 141 => "10011111010100100111111", 
    142 => "01101100011011111111000", 143 => "11111001111101110010101", 
    144 => "00101000001011111111000", 145 => "11101000100011101100000", 
    146 => "00000110011100000100001", 147 => "10110110110101010010101", 
    148 => "01100011001011001000000", 149 => "11001101010011010111001", 
    150 => "00000000010000110000010", 151 => "01110001101010000110110", 
    152 => "10000110111100010100111", 153 => "11100100001001010111101", 
    154 => "00100001100100101000010", 155 => "11111110011001100000001", 
    156 => "10100001001101001111001", 157 => "11110000001101111101010", 
    158 => "11110111101010100010001", 159 => "01100110000010000010111", 
    160 => "00101011101001110011110", 161 => "11000111001101010011110", 
    162 => "11010110100101000101101", 163 => "00001011101010000100011", 
    164 => "00100111111011000001001", 165 => "00000000101100111000101", 
    166 => "00100101011111011101101", 167 => "00010100011110101111110", 
    168 => "01001011100101111110111", 169 => "00001100100010110010011", 
    170 => "01110000101101110110101", 171 => "01011010100100001011101", 
    172 => "10101100111000101100010", 173 => "10111110001100111001001", 
    174 => "00011110000000101111011", 175 => "10010111100111100001111", 
    176 => "11111011111000000110111", 177 => "01101110110111100100000", 
    178 => "01100000010110101010010", 179 => "01100001010110110000000", 
    180 => "00011110100001100001010", 181 => "01111100100111110001110", 
    182 => "11000100100100010001111", 183 => "00100110011000010001011", 
    184 => "00110000011000001000101", 185 => "10111101010101000111010", 
    186 => "10010101101011000010011", 187 => "00101100010100110100011", 
    188 => "01011100110011111100111", 189 => "01110000001111000110001", 
    190 => "00101110101001101111111", 191 => "01110111111100100011011", 
    192 => "01010101011000011010011", 193 => "11000000100001010101101", 
    194 => "01001110000001111010000", 195 => "10001000101101011001101", 
    196 => "10001001010011110101110", 197 => "11100010101000010001011", 
    198 => "11101111100010001100111", 199 => "11100110111110001011001", 
    200 => "10001110110110001110101", 201 => "00110000110101110100100", 
    202 => "01000001010100111101001", 203 => "10010100101101111000010", 
    204 => "01110100101000010100111", 205 => "10010100110000111100011", 
    206 => "00110010001010100101010", 207 => "00110011110110111000011", 
    208 => "00010000011101010100011", 209 => "10111000000100101100101", 
    210 => "00001001001010110110011", 211 => "10010011101110000000001", 
    212 => "01010111100000110111111", 213 => "10010010101010101101011", 
    214 => "01011100111000110000100", 215 => "01110101110101001111011", 
    216 => "10001000010000101010010", 217 => "01001101011100000101100", 
    218 => "01101101100111111010100", 219 => "00110010101101011111101", 
    220 => "10010100000000100111100", 221 => "10100001110101100110100", 
    222 => "11111100110100111100001", 223 => "10101101001010110011010", 
    224 => "11110111001101000111100", 225 => "10000101010111000000000", 
    226 => "00000000100101111011110", 227 => "11001010000111111001100", 
    228 => "01100100000001101101000", 229 => "00101010101101100001001", 
    230 => "01110101110010100011001", 231 => "01000000101001000101010", 
    232 => "01000000010110010000101", 233 => "10101111110011010011001", 
    234 => "00100010001010101100000", 235 => "00010000110001001110000", 
    236 => "10010010010100001111001", 237 => "00100000111101001011100", 
    238 => "11100000011111110010001", 239 => "10101100100100110101001", 
    240 => "10101101111101011011010", 241 => "10100000110010110111000", 
    242 => "01011000000010011110111", 243 => "10100000100010110001100", 
    244 => "00111111110101110000001", 245 => "00001010111101101010011", 
    246 => "10110111111011011010110", 247 => "11001000000000111010110", 
    248 => "11110001100000111011101", 249 => "00011010101111011011000", 
    250 => "00010111101111011101000", 251 => "11111000100000110111101", 
    252 => "00001111110101011111101", 253 => "01001111100111011111110", 
    254 => "11111110111101100001010", 255 => "00000000000000000000000" );


begin 


memory_access_guard_0: process (addr0) 
begin
      addr0_tmp <= addr0;
--synthesis translate_off
      if (CONV_INTEGER(addr0) > mem_size-1) then
           addr0_tmp <= (others => '0');
      else 
           addr0_tmp <= addr0;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
        if (ce0 = '1') then 
            q0 <= mem(CONV_INTEGER(addr0_tmp)); 
        end if;
    end if;
end process;

end rtl;


Library IEEE;
use IEEE.std_logic_1164.all;

entity invntt_frominvmoneOg is
    generic (
        DataWidth : INTEGER := 23;
        AddressRange : INTEGER := 256;
        AddressWidth : INTEGER := 8);
    port (
        reset : IN STD_LOGIC;
        clk : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0));
end entity;

architecture arch of invntt_frominvmoneOg is
    component invntt_frominvmoneOg_rom is
        port (
            clk : IN STD_LOGIC;
            addr0 : IN STD_LOGIC_VECTOR;
            ce0 : IN STD_LOGIC;
            q0 : OUT STD_LOGIC_VECTOR);
    end component;



begin
    invntt_frominvmoneOg_rom_U :  component invntt_frominvmoneOg_rom
    port map (
        clk => clk,
        addr0 => address0,
        ce0 => ce0,
        q0 => q0);

end architecture;


