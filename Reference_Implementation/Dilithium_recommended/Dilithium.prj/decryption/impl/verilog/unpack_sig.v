// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module unpack_sig (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        z_vec_coeffs_address0,
        z_vec_coeffs_ce0,
        z_vec_coeffs_we0,
        z_vec_coeffs_d0,
        h_vec_coeffs_address0,
        h_vec_coeffs_ce0,
        h_vec_coeffs_we0,
        h_vec_coeffs_d0,
        c_coeffs_address0,
        c_coeffs_ce0,
        c_coeffs_we0,
        c_coeffs_d0,
        sig_address0,
        sig_ce0,
        sig_q0,
        sig_address1,
        sig_ce1,
        sig_q1
);

parameter    ap_ST_fsm_state1 = 18'd1;
parameter    ap_ST_fsm_state2 = 18'd2;
parameter    ap_ST_fsm_state3 = 18'd4;
parameter    ap_ST_fsm_state4 = 18'd8;
parameter    ap_ST_fsm_state5 = 18'd16;
parameter    ap_ST_fsm_state6 = 18'd32;
parameter    ap_ST_fsm_state7 = 18'd64;
parameter    ap_ST_fsm_state8 = 18'd128;
parameter    ap_ST_fsm_state9 = 18'd256;
parameter    ap_ST_fsm_state10 = 18'd512;
parameter    ap_ST_fsm_state11 = 18'd1024;
parameter    ap_ST_fsm_state12 = 18'd2048;
parameter    ap_ST_fsm_state13 = 18'd4096;
parameter    ap_ST_fsm_state14 = 18'd8192;
parameter    ap_ST_fsm_state15 = 18'd16384;
parameter    ap_ST_fsm_state16 = 18'd32768;
parameter    ap_ST_fsm_state17 = 18'd65536;
parameter    ap_ST_fsm_state18 = 18'd131072;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [9:0] z_vec_coeffs_address0;
output   z_vec_coeffs_ce0;
output   z_vec_coeffs_we0;
output  [31:0] z_vec_coeffs_d0;
output  [10:0] h_vec_coeffs_address0;
output   h_vec_coeffs_ce0;
output   h_vec_coeffs_we0;
output  [0:0] h_vec_coeffs_d0;
output  [7:0] c_coeffs_address0;
output   c_coeffs_ce0;
output   c_coeffs_we0;
output  [22:0] c_coeffs_d0;
output  [12:0] sig_address0;
output   sig_ce0;
input  [7:0] sig_q0;
output  [12:0] sig_address1;
output   sig_ce1;
input  [7:0] sig_q1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[9:0] z_vec_coeffs_address0;
reg z_vec_coeffs_ce0;
reg z_vec_coeffs_we0;
reg[31:0] z_vec_coeffs_d0;
reg[10:0] h_vec_coeffs_address0;
reg h_vec_coeffs_ce0;
reg h_vec_coeffs_we0;
reg[0:0] h_vec_coeffs_d0;
reg[7:0] c_coeffs_address0;
reg c_coeffs_ce0;
reg c_coeffs_we0;
reg[22:0] c_coeffs_d0;
reg[12:0] sig_address0;
reg sig_ce0;
reg[12:0] sig_address1;
reg sig_ce1;

(* fsm_encoding = "none" *) reg   [17:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [7:0] reg_403;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state11;
reg   [7:0] reg_409;
wire    ap_CS_fsm_state5;
wire   [2:0] i_5_fu_419_p2;
reg   [2:0] i_5_reg_1079;
wire    ap_CS_fsm_state2;
wire   [11:0] tmp_cast_fu_439_p1;
reg   [11:0] tmp_cast_reg_1084;
wire   [0:0] tmp_fu_413_p2;
wire   [7:0] i_10_fu_453_p2;
reg   [7:0] i_10_reg_1096;
wire    ap_CS_fsm_state3;
wire   [6:0] tmp_5_fu_459_p1;
reg   [6:0] tmp_5_reg_1101;
wire   [0:0] tmp_i_fu_447_p2;
wire   [9:0] tmp_i_20_fu_475_p2;
reg   [9:0] tmp_i_20_reg_1106;
reg   [7:0] sig_load_6_reg_1129;
wire   [3:0] tmp_19_fu_533_p1;
reg   [3:0] tmp_19_reg_1134;
wire   [31:0] j_cast_fu_748_p1;
reg   [31:0] j_cast_reg_1149;
wire    ap_CS_fsm_state8;
wire   [2:0] i_8_fu_758_p2;
reg   [2:0] i_8_reg_1157;
wire   [11:0] tmp_13_cast1_fu_772_p1;
reg   [11:0] tmp_13_cast1_reg_1162;
wire   [0:0] exitcond_fu_752_p2;
wire   [8:0] j_3_fu_782_p2;
wire    ap_CS_fsm_state9;
reg   [12:0] sig_addr_1_reg_1175;
wire   [0:0] tmp_3_fu_776_p2;
wire   [0:0] tmp_11_fu_831_p2;
wire   [31:0] j_4_fu_852_p2;
reg   [31:0] j_4_reg_1188;
wire   [8:0] i_6_fu_877_p2;
wire    ap_CS_fsm_state13;
wire   [3:0] i_7_fu_894_p2;
reg   [3:0] i_7_reg_1204;
wire    ap_CS_fsm_state14;
wire   [0:0] tmp_10_fu_888_p2;
wire   [63:0] signs_1_fu_954_p2;
wire    ap_CS_fsm_state15;
wire   [5:0] i_9_fu_966_p2;
reg   [5:0] i_9_reg_1229;
wire    ap_CS_fsm_state16;
reg   [12:0] sig_addr_2_reg_1234;
wire   [0:0] tmp_20_fu_960_p2;
wire   [7:0] tmp_22_fu_991_p3;
reg   [7:0] tmp_22_reg_1239;
wire   [7:0] j_2_cast2_fu_999_p1;
reg   [7:0] j_2_cast2_reg_1244;
wire    ap_CS_fsm_state17;
wire   [3:0] j_5_fu_1009_p2;
reg   [3:0] j_5_reg_1253;
reg   [2:0] i_reg_279;
reg   [7:0] i_i_reg_291;
wire    ap_CS_fsm_state7;
reg   [2:0] i_1_reg_303;
reg   [7:0] j_reg_315;
reg   [8:0] j1_reg_326;
reg   [31:0] j_1_reg_337;
wire    ap_CS_fsm_state12;
reg   [8:0] i_2_reg_346;
wire   [0:0] tmp_2_fu_871_p2;
reg   [3:0] i_3_reg_357;
reg   [63:0] signs_reg_369;
reg   [5:0] i_4_reg_381;
wire   [0:0] tmp_23_fu_1003_p2;
reg   [3:0] j_2_reg_392;
wire    ap_CS_fsm_state18;
wire   [63:0] sum5_i_cast_fu_490_p1;
wire   [63:0] sum7_i_cast_fu_509_p1;
wire   [63:0] sum9_i_cast_fu_528_p1;
wire   [63:0] sum_i_cast_fu_551_p1;
wire   [63:0] sum1_i_cast_fu_570_p1;
wire   [63:0] tmp_18_fu_584_p1;
wire   [63:0] tmp_33_fu_672_p1;
wire   [63:0] tmp_38_cast_fu_797_p1;
wire   [63:0] sum2_cast_fu_822_p1;
wire  signed [63:0] sum4_cast_fu_847_p1;
wire   [63:0] tmp_40_fu_866_p1;
wire   [63:0] tmp_4_fu_883_p1;
wire   [63:0] sum6_cast_fu_918_p1;
wire   [63:0] sum8_cast_fu_982_p1;
wire   [63:0] tmp_32_fu_1051_p1;
wire   [0:0] tmp_27_fu_1026_p2;
reg   [63:0] mask_fu_130;
wire   [63:0] mask_1_fu_1065_p2;
wire    ap_CS_fsm_state10;
wire  signed [31:0] tmp_66_i_cast_fu_634_p1;
wire  signed [31:0] tmp_69_i_cast_fu_743_p1;
wire   [22:0] tmp_30_cast_cast_cas_fu_1056_p3;
wire   [1:0] tmp_1_fu_425_p1;
wire   [10:0] tmp_9_fu_429_p4;
wire   [8:0] p_shl_i_fu_463_p3;
wire   [9:0] i_i_cast1_fu_443_p1;
wire   [9:0] p_shl_i_cast_fu_471_p1;
wire   [11:0] tmp_42_i_cast_fu_481_p1;
wire   [11:0] sum5_i_fu_485_p2;
wire   [9:0] tmp_45_i_fu_495_p2;
wire   [11:0] tmp_46_i_cast_fu_500_p1;
wire   [11:0] sum7_i_fu_504_p2;
wire   [9:0] tmp_47_i_fu_514_p2;
wire   [11:0] tmp_48_i_cast_fu_519_p1;
wire   [11:0] sum9_i_fu_523_p2;
wire   [9:0] tmp_54_i_fu_537_p2;
wire   [11:0] tmp_55_i_cast_fu_542_p1;
wire   [11:0] sum_i_fu_546_p2;
wire   [9:0] tmp_59_i_fu_556_p2;
wire   [11:0] tmp_60_i_cast_fu_561_p1;
wire   [11:0] sum1_i_fu_565_p2;
wire   [10:0] tmp_13_fu_575_p4;
wire   [19:0] tmp_2_i_fu_589_p4;
wire   [20:0] tmp_50_i_cast_fu_598_p1;
wire  signed [20:0] tmp_64_i_fu_602_p2;
wire   [0:0] tmp_34_fu_612_p3;
wire   [24:0] tmp_65_i_cast_cast_fu_620_p3;
wire  signed [24:0] tmp_64_i_cast_fu_608_p1;
wire   [24:0] tmp_66_i_fu_628_p2;
wire   [3:0] tmp_51_i_fu_645_p4;
wire   [7:0] tmp_7_fu_639_p2;
wire   [7:0] tmp_52_i_fu_658_p2;
wire   [10:0] tmp_24_fu_664_p3;
wire   [7:0] tmp_21_fu_654_p1;
wire   [11:0] tmp_6_fu_685_p3;
wire   [11:0] tmp_57_i_fu_677_p3;
wire   [11:0] tmp_12_fu_693_p2;
wire   [19:0] tmp_63_i_fu_699_p3;
wire   [20:0] tmp_63_i_cast_fu_707_p1;
wire  signed [20:0] tmp_67_i_fu_711_p2;
wire   [0:0] tmp_35_fu_721_p3;
wire   [24:0] tmp_68_i_cast_cast_fu_729_p3;
wire  signed [24:0] tmp_67_i_cast_fu_717_p1;
wire   [24:0] tmp_69_i_fu_737_p2;
wire   [10:0] tmp_8_fu_764_p3;
wire   [11:0] tmp_7_cast_fu_788_p1;
wire   [11:0] tmp_36_fu_792_p2;
wire   [5:0] tmp_s_fu_802_p3;
wire  signed [6:0] tmp_5_cast_fu_810_p1;
wire   [11:0] sum_fu_814_p3;
wire   [31:0] k_fu_827_p1;
wire   [13:0] tmp_38_fu_837_p1;
wire   [13:0] sum4_fu_841_p2;
wire   [10:0] tmp_39_fu_858_p3;
wire   [5:0] tmp_30_fu_900_p3;
wire   [11:0] tmp_13_cast_fu_908_p1;
wire   [11:0] sum6_fu_912_p2;
wire   [2:0] tmp_37_fu_932_p1;
wire   [5:0] tmp_15_fu_936_p3;
wire   [63:0] tmp_14_fu_928_p1;
wire   [63:0] tmp_16_fu_944_p1;
wire   [63:0] tmp_17_fu_948_p2;
wire   [11:0] tmp_21_cast_fu_972_p1;
wire   [11:0] sum8_fu_976_p2;
wire   [4:0] tmp_41_fu_987_p1;
wire   [7:0] tmp_25_fu_1015_p2;
wire   [7:0] tmp_26_fu_1020_p2;
wire   [63:0] tmp_28_fu_1035_p2;
wire   [7:0] tmp_31_fu_1047_p2;
wire   [0:0] tmp_29_fu_1041_p2;
reg   [17:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 18'd1;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (tmp_fu_413_p2 == 1'd1))) begin
        i_1_reg_303 <= 3'd0;
    end else if (((1'b1 == ap_CS_fsm_state11) & (tmp_11_fu_831_p2 == 1'd0))) begin
        i_1_reg_303 <= i_8_reg_1157;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) & (exitcond_fu_752_p2 == 1'd1))) begin
        i_2_reg_346 <= 9'd0;
    end else if (((1'b1 == ap_CS_fsm_state13) & (tmp_2_fu_871_p2 == 1'd0))) begin
        i_2_reg_346 <= i_6_fu_877_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state13) & (tmp_2_fu_871_p2 == 1'd1))) begin
        i_3_reg_357 <= 4'd0;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        i_3_reg_357 <= i_7_reg_1204;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state17) & (tmp_23_fu_1003_p2 == 1'd1))) begin
        i_4_reg_381 <= i_9_reg_1229;
    end else if (((1'b1 == ap_CS_fsm_state14) & (tmp_10_fu_888_p2 == 1'd1))) begin
        i_4_reg_381 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        i_i_reg_291 <= i_10_reg_1096;
    end else if (((1'b1 == ap_CS_fsm_state2) & (tmp_fu_413_p2 == 1'd0))) begin
        i_i_reg_291 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (tmp_i_fu_447_p2 == 1'd1))) begin
        i_reg_279 <= i_5_reg_1079;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_reg_279 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) & (exitcond_fu_752_p2 == 1'd0))) begin
        j1_reg_326 <= 9'd0;
    end else if (((1'b1 == ap_CS_fsm_state9) & (tmp_3_fu_776_p2 == 1'd0))) begin
        j1_reg_326 <= j_3_fu_782_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) & (tmp_3_fu_776_p2 == 1'd1))) begin
        j_1_reg_337 <= j_cast_reg_1149;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        j_1_reg_337 <= j_4_reg_1188;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        j_2_reg_392 <= j_5_reg_1253;
    end else if (((1'b1 == ap_CS_fsm_state16) & (tmp_20_fu_960_p2 == 1'd0))) begin
        j_2_reg_392 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (tmp_fu_413_p2 == 1'd1))) begin
        j_reg_315 <= 8'd0;
    end else if (((1'b1 == ap_CS_fsm_state11) & (tmp_11_fu_831_p2 == 1'd0))) begin
        j_reg_315 <= sig_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state18) & (tmp_27_fu_1026_p2 == 1'd0))) begin
        mask_fu_130 <= mask_1_fu_1065_p2;
    end else if (((1'b1 == ap_CS_fsm_state14) & (tmp_10_fu_888_p2 == 1'd1))) begin
        mask_fu_130 <= 64'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state6))) begin
        reg_403 <= sig_q1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        reg_403 <= sig_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state13) & (tmp_2_fu_871_p2 == 1'd1))) begin
        signs_reg_369 <= 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        signs_reg_369 <= signs_1_fu_954_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        i_10_reg_1096 <= i_10_fu_453_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_5_reg_1079 <= i_5_fu_419_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        i_7_reg_1204 <= i_7_fu_894_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        i_8_reg_1157 <= i_8_fu_758_p2;
        j_cast_reg_1149[7 : 0] <= j_cast_fu_748_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        i_9_reg_1229 <= i_9_fu_966_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        j_2_cast2_reg_1244[3 : 0] <= j_2_cast2_fu_999_p1[3 : 0];
        j_5_reg_1253 <= j_5_fu_1009_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state11) & (tmp_11_fu_831_p2 == 1'd1))) begin
        j_4_reg_1188 <= j_4_fu_852_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state6))) begin
        reg_409 <= sig_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) & (tmp_3_fu_776_p2 == 1'd1))) begin
        sig_addr_1_reg_1175[2 : 0] <= sum2_cast_fu_822_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state16) & (tmp_20_fu_960_p2 == 1'd0))) begin
        sig_addr_2_reg_1234[11 : 0] <= sum8_cast_fu_982_p1[11 : 0];
        tmp_22_reg_1239[7 : 3] <= tmp_22_fu_991_p3[7 : 3];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        sig_load_6_reg_1129 <= sig_q1;
        tmp_19_reg_1134 <= tmp_19_fu_533_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) & (exitcond_fu_752_p2 == 1'd0))) begin
        tmp_13_cast1_reg_1162[10 : 8] <= tmp_13_cast1_fu_772_p1[10 : 8];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (tmp_i_fu_447_p2 == 1'd0))) begin
        tmp_5_reg_1101 <= tmp_5_fu_459_p1;
        tmp_i_20_reg_1106 <= tmp_i_20_fu_475_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (tmp_fu_413_p2 == 1'd0))) begin
        tmp_cast_reg_1084[10 : 7] <= tmp_cast_fu_439_p1[10 : 7];
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == ap_CS_fsm_state16) & (tmp_20_fu_960_p2 == 1'd1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) & (tmp_20_fu_960_p2 == 1'd1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        c_coeffs_address0 = tmp_32_fu_1051_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        c_coeffs_address0 = tmp_4_fu_883_p1;
    end else begin
        c_coeffs_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state13))) begin
        c_coeffs_ce0 = 1'b1;
    end else begin
        c_coeffs_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        c_coeffs_d0 = tmp_30_cast_cast_cas_fu_1056_p3;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        c_coeffs_d0 = 23'd0;
    end else begin
        c_coeffs_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state18) & (tmp_27_fu_1026_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_state13) & (tmp_2_fu_871_p2 == 1'd0)))) begin
        c_coeffs_we0 = 1'b1;
    end else begin
        c_coeffs_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        h_vec_coeffs_address0 = tmp_40_fu_866_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        h_vec_coeffs_address0 = tmp_38_cast_fu_797_p1;
    end else begin
        h_vec_coeffs_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state9))) begin
        h_vec_coeffs_ce0 = 1'b1;
    end else begin
        h_vec_coeffs_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        h_vec_coeffs_d0 = 1'd1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        h_vec_coeffs_d0 = 1'd0;
    end else begin
        h_vec_coeffs_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | ((1'b1 == ap_CS_fsm_state9) & (tmp_3_fu_776_p2 == 1'd0)))) begin
        h_vec_coeffs_we0 = 1'b1;
    end else begin
        h_vec_coeffs_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        sig_address0 = sig_addr_2_reg_1234;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        sig_address0 = sum4_cast_fu_847_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        sig_address0 = sum1_i_cast_fu_570_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        sig_address0 = sum7_i_cast_fu_509_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        sig_address0 = sum5_i_cast_fu_490_p1;
    end else begin
        sig_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        sig_address1 = sum6_cast_fu_918_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sig_address1 = sig_addr_1_reg_1175;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        sig_address1 = sum_i_cast_fu_551_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        sig_address1 = sum9_i_cast_fu_528_p1;
    end else begin
        sig_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state3))) begin
        sig_ce0 = 1'b1;
    end else begin
        sig_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state14))) begin
        sig_ce1 = 1'b1;
    end else begin
        sig_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        z_vec_coeffs_address0 = tmp_33_fu_672_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        z_vec_coeffs_address0 = tmp_18_fu_584_p1;
    end else begin
        z_vec_coeffs_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state7))) begin
        z_vec_coeffs_ce0 = 1'b1;
    end else begin
        z_vec_coeffs_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        z_vec_coeffs_d0 = tmp_69_i_cast_fu_743_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        z_vec_coeffs_d0 = tmp_66_i_cast_fu_634_p1;
    end else begin
        z_vec_coeffs_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state7))) begin
        z_vec_coeffs_we0 = 1'b1;
    end else begin
        z_vec_coeffs_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (tmp_fu_413_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (tmp_i_fu_447_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state8 : begin
            if (((1'b1 == ap_CS_fsm_state8) & (exitcond_fu_752_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state9 : begin
            if (((1'b1 == ap_CS_fsm_state9) & (tmp_3_fu_776_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            if (((1'b1 == ap_CS_fsm_state11) & (tmp_11_fu_831_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state13 : begin
            if (((1'b1 == ap_CS_fsm_state13) & (tmp_2_fu_871_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state14 : begin
            if (((1'b1 == ap_CS_fsm_state14) & (tmp_10_fu_888_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state16 : begin
            if (((1'b1 == ap_CS_fsm_state16) & (tmp_20_fu_960_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        ap_ST_fsm_state17 : begin
            if (((1'b1 == ap_CS_fsm_state17) & (tmp_23_fu_1003_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign exitcond_fu_752_p2 = ((i_1_reg_303 == 3'd5) ? 1'b1 : 1'b0);

assign i_10_fu_453_p2 = (i_i_reg_291 + 8'd1);

assign i_5_fu_419_p2 = (i_reg_279 + 3'd1);

assign i_6_fu_877_p2 = (i_2_reg_346 + 9'd1);

assign i_7_fu_894_p2 = (i_3_reg_357 + 4'd1);

assign i_8_fu_758_p2 = (i_1_reg_303 + 3'd1);

assign i_9_fu_966_p2 = (i_4_reg_381 + 6'd1);

assign i_i_cast1_fu_443_p1 = i_i_reg_291;

assign j_2_cast2_fu_999_p1 = j_2_reg_392;

assign j_3_fu_782_p2 = (j1_reg_326 + 9'd1);

assign j_4_fu_852_p2 = (32'd1 + j_1_reg_337);

assign j_5_fu_1009_p2 = (j_2_reg_392 + 4'd1);

assign j_cast_fu_748_p1 = j_reg_315;

assign k_fu_827_p1 = sig_q1;

assign mask_1_fu_1065_p2 = mask_fu_130 << 64'd1;

assign p_shl_i_cast_fu_471_p1 = p_shl_i_fu_463_p3;

assign p_shl_i_fu_463_p3 = {{tmp_5_fu_459_p1}, {2'd0}};

assign signs_1_fu_954_p2 = (tmp_17_fu_948_p2 | signs_reg_369);

assign sum1_i_cast_fu_570_p1 = sum1_i_fu_565_p2;

assign sum1_i_fu_565_p2 = (tmp_60_i_cast_fu_561_p1 + tmp_cast_reg_1084);

assign sum2_cast_fu_822_p1 = sum_fu_814_p3;

assign sum4_cast_fu_847_p1 = $signed(sum4_fu_841_p2);

assign sum4_fu_841_p2 = (14'd2560 + tmp_38_fu_837_p1);

assign sum5_i_cast_fu_490_p1 = sum5_i_fu_485_p2;

assign sum5_i_fu_485_p2 = (tmp_42_i_cast_fu_481_p1 + tmp_cast_reg_1084);

assign sum6_cast_fu_918_p1 = sum6_fu_912_p2;

assign sum6_fu_912_p2 = ($signed(12'd2661) + $signed(tmp_13_cast_fu_908_p1));

assign sum7_i_cast_fu_509_p1 = sum7_i_fu_504_p2;

assign sum7_i_fu_504_p2 = (tmp_46_i_cast_fu_500_p1 + tmp_cast_reg_1084);

assign sum8_cast_fu_982_p1 = sum8_fu_976_p2;

assign sum8_fu_976_p2 = ($signed(12'd2661) + $signed(tmp_21_cast_fu_972_p1));

assign sum9_i_cast_fu_528_p1 = sum9_i_fu_523_p2;

assign sum9_i_fu_523_p2 = (tmp_48_i_cast_fu_519_p1 + tmp_cast_reg_1084);

assign sum_fu_814_p3 = {{5'd20}, {tmp_5_cast_fu_810_p1}};

assign sum_i_cast_fu_551_p1 = sum_i_fu_546_p2;

assign sum_i_fu_546_p2 = (tmp_55_i_cast_fu_542_p1 + tmp_cast_reg_1084);

assign tmp_10_fu_888_p2 = ((i_3_reg_357 == 4'd8) ? 1'b1 : 1'b0);

assign tmp_11_fu_831_p2 = ((j_1_reg_337 < k_fu_827_p1) ? 1'b1 : 1'b0);

assign tmp_12_fu_693_p2 = (tmp_6_fu_685_p3 | tmp_57_i_fu_677_p3);

assign tmp_13_cast1_fu_772_p1 = tmp_8_fu_764_p3;

assign tmp_13_cast_fu_908_p1 = tmp_30_fu_900_p3;

assign tmp_13_fu_575_p4 = {{{i_reg_279}, {tmp_5_reg_1101}}, {1'd0}};

assign tmp_14_fu_928_p1 = sig_q1;

assign tmp_15_fu_936_p3 = {{tmp_37_fu_932_p1}, {3'd0}};

assign tmp_16_fu_944_p1 = tmp_15_fu_936_p3;

assign tmp_17_fu_948_p2 = tmp_14_fu_928_p1 << tmp_16_fu_944_p1;

assign tmp_18_fu_584_p1 = tmp_13_fu_575_p4;

assign tmp_19_fu_533_p1 = sig_q1[3:0];

assign tmp_1_fu_425_p1 = i_reg_279[1:0];

assign tmp_20_fu_960_p2 = ((i_4_reg_381 == 6'd32) ? 1'b1 : 1'b0);

assign tmp_21_cast_fu_972_p1 = i_4_reg_381;

assign tmp_21_fu_654_p1 = tmp_51_i_fu_645_p4;

assign tmp_22_fu_991_p3 = {{tmp_41_fu_987_p1}, {3'd0}};

assign tmp_23_fu_1003_p2 = ((j_2_reg_392 == 4'd8) ? 1'b1 : 1'b0);

assign tmp_24_fu_664_p3 = {{i_reg_279}, {tmp_52_i_fu_658_p2}};

assign tmp_25_fu_1015_p2 = 8'd1 << j_2_cast2_reg_1244;

assign tmp_26_fu_1020_p2 = (tmp_25_fu_1015_p2 & sig_q0);

assign tmp_27_fu_1026_p2 = ((tmp_26_fu_1020_p2 == 8'd0) ? 1'b1 : 1'b0);

assign tmp_28_fu_1035_p2 = (signs_reg_369 & mask_fu_130);

assign tmp_29_fu_1041_p2 = ((tmp_28_fu_1035_p2 != 64'd0) ? 1'b1 : 1'b0);

assign tmp_2_fu_871_p2 = ((i_2_reg_346 == 9'd256) ? 1'b1 : 1'b0);

assign tmp_2_i_fu_589_p4 = {{{tmp_19_reg_1134}, {reg_409}}, {reg_403}};

assign tmp_30_cast_cast_cas_fu_1056_p3 = ((tmp_29_fu_1041_p2[0:0] === 1'b1) ? 23'd8380416 : 23'd1);

assign tmp_30_fu_900_p3 = {{2'd2}, {i_3_reg_357}};

assign tmp_31_fu_1047_p2 = (tmp_22_reg_1239 + j_2_cast2_reg_1244);

assign tmp_32_fu_1051_p1 = tmp_31_fu_1047_p2;

assign tmp_33_fu_672_p1 = tmp_24_fu_664_p3;

assign tmp_34_fu_612_p3 = tmp_64_i_fu_602_p2[32'd20];

assign tmp_35_fu_721_p3 = tmp_67_i_fu_711_p2[32'd20];

assign tmp_36_fu_792_p2 = (tmp_13_cast1_reg_1162 + tmp_7_cast_fu_788_p1);

assign tmp_37_fu_932_p1 = i_3_reg_357[2:0];

assign tmp_38_cast_fu_797_p1 = tmp_36_fu_792_p2;

assign tmp_38_fu_837_p1 = j_1_reg_337[13:0];

assign tmp_39_fu_858_p3 = {{i_1_reg_303}, {sig_q0}};

assign tmp_3_fu_776_p2 = ((j1_reg_326 == 9'd256) ? 1'b1 : 1'b0);

assign tmp_40_fu_866_p1 = tmp_39_fu_858_p3;

assign tmp_41_fu_987_p1 = i_4_reg_381[4:0];

assign tmp_42_i_cast_fu_481_p1 = tmp_i_20_fu_475_p2;

assign tmp_45_i_fu_495_p2 = (10'd1 + tmp_i_20_reg_1106);

assign tmp_46_i_cast_fu_500_p1 = tmp_45_i_fu_495_p2;

assign tmp_47_i_fu_514_p2 = (10'd2 + tmp_i_20_reg_1106);

assign tmp_48_i_cast_fu_519_p1 = tmp_47_i_fu_514_p2;

assign tmp_4_fu_883_p1 = i_2_reg_346;

assign tmp_50_i_cast_fu_598_p1 = tmp_2_i_fu_589_p4;

assign tmp_51_i_fu_645_p4 = {{sig_load_6_reg_1129[7:4]}};

assign tmp_52_i_fu_658_p2 = (tmp_7_fu_639_p2 | 8'd1);

assign tmp_54_i_fu_537_p2 = (10'd3 + tmp_i_20_reg_1106);

assign tmp_55_i_cast_fu_542_p1 = tmp_54_i_fu_537_p2;

assign tmp_57_i_fu_677_p3 = {{reg_403}, {4'd0}};

assign tmp_59_i_fu_556_p2 = (10'd4 + tmp_i_20_reg_1106);

assign tmp_5_cast_fu_810_p1 = $signed(tmp_s_fu_802_p3);

assign tmp_5_fu_459_p1 = i_i_reg_291[6:0];

assign tmp_60_i_cast_fu_561_p1 = tmp_59_i_fu_556_p2;

assign tmp_63_i_cast_fu_707_p1 = tmp_63_i_fu_699_p3;

assign tmp_63_i_fu_699_p3 = {{reg_409}, {tmp_12_fu_693_p2}};

assign tmp_64_i_cast_fu_608_p1 = tmp_64_i_fu_602_p2;

assign tmp_64_i_fu_602_p2 = (21'd523775 - tmp_50_i_cast_fu_598_p1);

assign tmp_65_i_cast_cast_fu_620_p3 = ((tmp_34_fu_612_p3[0:0] === 1'b1) ? 25'd8380417 : 25'd0);

assign tmp_66_i_cast_fu_634_p1 = $signed(tmp_66_i_fu_628_p2);

assign tmp_66_i_fu_628_p2 = ($signed(tmp_65_i_cast_cast_fu_620_p3) + $signed(tmp_64_i_cast_fu_608_p1));

assign tmp_67_i_cast_fu_717_p1 = tmp_67_i_fu_711_p2;

assign tmp_67_i_fu_711_p2 = (21'd523775 - tmp_63_i_cast_fu_707_p1);

assign tmp_68_i_cast_cast_fu_729_p3 = ((tmp_35_fu_721_p3[0:0] === 1'b1) ? 25'd8380417 : 25'd0);

assign tmp_69_i_cast_fu_743_p1 = $signed(tmp_69_i_fu_737_p2);

assign tmp_69_i_fu_737_p2 = ($signed(tmp_68_i_cast_cast_fu_729_p3) + $signed(tmp_67_i_cast_fu_717_p1));

assign tmp_6_fu_685_p3 = {{4'd0}, {tmp_21_fu_654_p1}};

assign tmp_7_cast_fu_788_p1 = j1_reg_326;

assign tmp_7_fu_639_p2 = i_i_reg_291 << 8'd1;

assign tmp_8_fu_764_p3 = {{i_1_reg_303}, {8'd0}};

assign tmp_9_fu_429_p4 = {{{tmp_1_fu_425_p1}, {tmp_1_fu_425_p1}}, {7'd0}};

assign tmp_cast_fu_439_p1 = tmp_9_fu_429_p4;

assign tmp_fu_413_p2 = ((i_reg_279 == 3'd4) ? 1'b1 : 1'b0);

assign tmp_i_20_fu_475_p2 = (i_i_cast1_fu_443_p1 + p_shl_i_cast_fu_471_p1);

assign tmp_i_fu_447_p2 = ((i_i_reg_291 == 8'd128) ? 1'b1 : 1'b0);

assign tmp_s_fu_802_p3 = {{3'd4}, {i_1_reg_303}};

always @ (posedge ap_clk) begin
    tmp_cast_reg_1084[6:0] <= 7'b0000000;
    tmp_cast_reg_1084[11] <= 1'b0;
    j_cast_reg_1149[31:8] <= 24'b000000000000000000000000;
    tmp_13_cast1_reg_1162[7:0] <= 8'b00000000;
    tmp_13_cast1_reg_1162[11] <= 1'b0;
    sig_addr_1_reg_1175[12:3] <= 10'b0101001100;
    sig_addr_2_reg_1234[12] <= 1'b0;
    tmp_22_reg_1239[2:0] <= 3'b000;
    j_2_cast2_reg_1244[7:4] <= 4'b0000;
end

endmodule //unpack_sig
